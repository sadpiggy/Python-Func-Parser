[{"file_hash": "3bfb99973b2b388dddf24395fa8cf86c", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/pkey/EVP_PKEY_DSA_paramfromdata.c", "file_name": "EVP_PKEY_DSA_paramfromdata.c", "function_list": [{"line_start": 20, "line_stop": 75, "function_name": "main", "file_path": "pkey/EVP_PKEY_DSA_paramfromdata.c", "line_of_code": 45, "operators": ["int", "=", ";", "*", "=", ";", "const", "char", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ",", "*", "=", ",", "*", "=", ";", "=", "(", ",", "sizeof", "(", ")", ",", ")", ";", "=", "(", ",", "sizeof", "(", ")", ",", ")", ";", "=", "(", ",", "sizeof", "(", ")", ",", ")", ";", "if", "(", "==", "||", "==", "||", "==", ")", "goto", ";", "=", "(", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ")", "||", "!", "(", ",", ",", ")", "||", "!", "(", ",", ",", ")", ")", "goto", ";", "=", "(", ")", ";", "if", "(", "==", ")", "goto", ";", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ")", "<=", "||", "(", ",", "&", ",", ",", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", ",", ")", ")", "goto", ";", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "OSSL_LIB_CTX", "libctx", "NULL", "propq", "NULL", "EVP_PKEY_CTX", "ctx", "NULL", "EVP_PKEY", "dsaparamkey", "NULL", "OSSL_PARAM_BLD", "bld", "NULL", "OSSL_PARAM", "params", "NULL", "BIGNUM", "p", "NULL", "q", "NULL", "g", "NULL", "p", "BN_bin2bn", "dsa_p", "dsa_p", "NULL", "q", "BN_bin2bn", "dsa_q", "dsa_q", "NULL", "g", "BN_bin2bn", "dsa_g", "dsa_g", "NULL", "p", "NULL", "q", "NULL", "g", "NULL", "cleanup", "bld", "OSSL_PARAM_BLD_new", "bld", "NULL", "cleanup", "OSSL_PARAM_BLD_push_BN", "bld", "OSSL_PKEY_PARAM_FFC_P", "p", "OSSL_PARAM_BLD_push_BN", "bld", "OSSL_PKEY_PARAM_FFC_Q", "q", "OSSL_PARAM_BLD_push_BN", "bld", "OSSL_PKEY_PARAM_FFC_G", "g", "cleanup", "params", "OSSL_PARAM_BLD_to_param", "bld", "params", "NULL", "cleanup", "ctx", "EVP_PKEY_CTX_new_from_name", "libctx", "\"DSA\"", "propq", "ctx", "NULL", "fprintf", "stderr", "\"EVP_PKEY_CTX_new_from_name() failed\\n\"", "cleanup", "EVP_PKEY_fromdata_init", "ctx", "0", "EVP_PKEY_fromdata", "ctx", "dsaparamkey", "EVP_PKEY_KEY_PARAMETERS", "params", "0", "fprintf", "stderr", "\"EVP_PKEY_fromdata() failed\\n\"", "cleanup", "dsa_print_key", "dsaparamkey", "0", "libctx", "propq", "cleanup", "ret", "EXIT_SUCCESS", "cleanup", "EVP_PKEY_free", "dsaparamkey", "EVP_PKEY_CTX_free", "ctx", "OSSL_PARAM_free", "params", "OSSL_PARAM_BLD_free", "bld", "BN_free", "g", "BN_free", "q", "BN_free", "p", "ret"], "callee_func": ["BN_bin2bn", "BN_bin2bn", "BN_bin2bn", "OSSL_PARAM_BLD_new", "OSSL_PARAM_BLD_push_BN", "OSSL_PARAM_BLD_push_BN", "OSSL_PARAM_BLD_push_BN", "OSSL_PARAM_BLD_to_param", "EVP_PKEY_CTX_new_from_name", "fprintf", "EVP_PKEY_fromdata_init", "EVP_PKEY_fromdata", "fprintf", "dsa_print_key", "EVP_PKEY_free", "EVP_PKEY_CTX_free", "OSSL_PARAM_free", "OSSL_PARAM_BLD_free", "BN_free", "BN_free", "BN_free"], "function_normalized_hash": "8ec1af81b2d554d865ae2870974d3e10"}]}, {"file_hash": "17902461e5b0bae1ad68fbe8c8444524", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/encrypt/rsa_encrypt.c", "file_name": "rsa_encrypt.c", "function_list": [{"line_start": 36, "line_stop": 58, "function_name": "get_key", "file_path": "encrypt/rsa_encrypt.c", "line_of_code": 19, "operators": ["*", "=", ";", "*", "=", ";", "int", ";", "const", "unsigned", "char", "*", ";", ";", "if", "(", "public", ")", "{", "=", ";", "=", ";", "=", "sizeof", "(", ")", ";", "}", "else", "{", "=", ";", "=", ";", "=", "sizeof", "(", ")", ";", "}", "=", "(", "&", ",", ",", ",", ",", ",", ",", ")", ";", "(", "void", ")", "(", ",", "&", ",", "&", ")", ";", "(", ")", ";", "return", ";"], "operands": ["OSSL_DECODER_CTX", "dctx", "NULL", "EVP_PKEY", "pkey", "NULL", "selection", "data", "size_t", "data_len", "selection", "EVP_PKEY_PUBLIC_KEY", "data", "pub_key_der", "data_len", "pub_key_der", "selection", "EVP_PKEY_KEYPAIR", "data", "priv_key_der", "data_len", "priv_key_der", "dctx", "OSSL_DECODER_CTX_new_for_pkey", "pkey", "\"DER\"", "NULL", "\"RSA\"", "selection", "libctx", "propq", "OSSL_DECODER_from_data", "dctx", "data", "data_len", "OSSL_DECODER_CTX_free", "dctx", "pkey"], "callee_func": ["OSSL_DECODER_CTX_new_for_pkey", "OSSL_DECODER_from_data", "OSSL_DECODER_CTX_free"], "function_normalized_hash": "3e269bf36b72a180ba98771987d43a05"}, {"line_start": 61, "line_stop": 89, "function_name": "set_optional_params", "file_path": "encrypt/rsa_encrypt.c", "line_of_code": 11, "operators": ["static", "unsigned", "char", "[", "]", "=", ";", "*", "++", "=", "(", ",", ",", ")", ";", "*", "++", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "*", "++", "=", "(", ",", ",", ")", ";", "if", "(", "!=", ")", "*", "++", "=", "(", ",", "(", "char", "*", ")", ",", ")", ";", "*", "=", "(", ")", ";"], "operands": ["label", "\"label\"", "p", "OSSL_PARAM_construct_utf8_string", "OSSL_ASYM_CIPHER_PARAM_PAD_MODE", "OSSL_PKEY_RSA_PAD_MODE_OAEP", "0", "p", "OSSL_PARAM_construct_octet_string", "OSSL_ASYM_CIPHER_PARAM_OAEP_LABEL", "label", "label", "p", "OSSL_PARAM_construct_utf8_string", "OSSL_ASYM_CIPHER_PARAM_OAEP_DIGEST", "\"SHA256\"", "0", "propq", "NULL", "p", "OSSL_PARAM_construct_utf8_string", "OSSL_ASYM_CIPHER_PARAM_OAEP_DIGEST_PROPS", "propq", "0", "p", "OSSL_PARAM_construct_end"], "callee_func": ["OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_octet_string", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_end"], "function_normalized_hash": "d0285596da3c5fe620cc679b891bfedc"}, {"line_start": 96, "line_stop": 152, "function_name": "do_encrypt", "file_path": "encrypt/rsa_encrypt.c", "line_of_code": 47, "operators": ["int", "=", ",", "public", "=", ";", "=", ";", "unsigned", "char", "*", "=", ";", "const", "char", "*", "=", ";", "*", "=", ";", "*", "=", ";", "[", "]", ";", "=", "(", ",", ",", "public", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ",", ")", ";", "if", "(", "(", ",", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "&", ",", ",", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "&", ",", ",", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "*", "=", ";", "*", "=", ";", "(", ",", ")", ";", "(", ",", ",", ",", ")", ";", "(", ",", ")", ";", "=", ";", ":", "if", "(", "!", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "1", "size_t", "buf_len", "0", "buf", "NULL", "propq", "NULL", "EVP_PKEY_CTX", "ctx", "NULL", "EVP_PKEY", "pub_key", "NULL", "OSSL_PARAM", "params", "5", "pub_key", "get_key", "libctx", "propq", "pub_key", "NULL", "fprintf", "stderr", "\"Get public key failed.\\n\"", "cleanup", "ctx", "EVP_PKEY_CTX_new_from_pkey", "libctx", "pub_key", "propq", "ctx", "NULL", "fprintf", "stderr", "\"EVP_PKEY_CTX_new_from_pkey() failed.\\n\"", "cleanup", "set_optional_params", "params", "propq", "EVP_PKEY_encrypt_init_ex", "ctx", "params", "0", "fprintf", "stderr", "\"EVP_PKEY_encrypt_init_ex() failed.\\n\"", "cleanup", "EVP_PKEY_encrypt", "ctx", "NULL", "buf_len", "in", "in_len", "0", "fprintf", "stderr", "\"EVP_PKEY_encrypt() failed.\\n\"", "cleanup", "buf", "OPENSSL_zalloc", "buf_len", "buf", "NULL", "fprintf", "stderr", "\"Malloc failed.\\n\"", "cleanup", "EVP_PKEY_encrypt", "ctx", "buf", "buf_len", "in", "in_len", "0", "fprintf", "stderr", "\"EVP_PKEY_encrypt() failed.\\n\"", "cleanup", "out_len", "buf_len", "out", "buf", "fprintf", "stdout", "\"Encrypted:\\n\"", "BIO_dump_indent_fp", "stdout", "buf", "buf_len", "2", "fprintf", "stdout", "\"\\n\"", "ret", "1", "cleanup", "ret", "OPENSSL_free", "buf", "EVP_PKEY_free", "pub_key", "EVP_PKEY_CTX_free", "ctx", "ret"], "callee_func": ["get_key", "fprintf", "EVP_PKEY_CTX_new_from_pkey", "fprintf", "set_optional_params", "EVP_PKEY_encrypt_init_ex", "fprintf", "EVP_PKEY_encrypt", "fprintf", "OPENSSL_zalloc", "fprintf", "EVP_PKEY_encrypt", "fprintf", "fprintf", "BIO_dump_indent_fp", "fprintf", "OPENSSL_free", "EVP_PKEY_free", "EVP_PKEY_CTX_free"], "function_normalized_hash": "82be999172d1e57524e61f927dbe1574"}, {"line_start": 154, "line_stop": 211, "function_name": "do_decrypt", "file_path": "encrypt/rsa_encrypt.c", "line_of_code": 47, "operators": ["int", "=", ",", "public", "=", ";", "=", ";", "unsigned", "char", "*", "=", ";", "const", "char", "*", "=", ";", "*", "=", ";", "*", "=", ";", "[", "]", ";", "=", "(", ",", ",", "public", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ",", ")", ";", "if", "(", "(", ",", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "&", ",", ",", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "&", ",", ",", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "*", "=", ";", "*", "=", ";", "(", ",", ")", ";", "(", ",", ",", ",", ")", ";", "(", ",", ")", ";", "=", ";", ":", "if", "(", "!", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "0", "size_t", "buf_len", "0", "buf", "NULL", "propq", "NULL", "EVP_PKEY_CTX", "ctx", "NULL", "EVP_PKEY", "priv_key", "NULL", "OSSL_PARAM", "params", "5", "priv_key", "get_key", "libctx", "propq", "priv_key", "NULL", "fprintf", "stderr", "\"Get private key failed.\\n\"", "cleanup", "ctx", "EVP_PKEY_CTX_new_from_pkey", "libctx", "priv_key", "propq", "ctx", "NULL", "fprintf", "stderr", "\"EVP_PKEY_CTX_new_from_pkey() failed.\\n\"", "cleanup", "set_optional_params", "params", "propq", "EVP_PKEY_decrypt_init_ex", "ctx", "params", "0", "fprintf", "stderr", "\"EVP_PKEY_decrypt_init_ex() failed.\\n\"", "cleanup", "EVP_PKEY_decrypt", "ctx", "NULL", "buf_len", "in", "in_len", "0", "fprintf", "stderr", "\"EVP_PKEY_decrypt() failed.\\n\"", "cleanup", "buf", "OPENSSL_zalloc", "buf_len", "buf", "NULL", "fprintf", "stderr", "\"Malloc failed.\\n\"", "cleanup", "EVP_PKEY_decrypt", "ctx", "buf", "buf_len", "in", "in_len", "0", "fprintf", "stderr", "\"EVP_PKEY_decrypt() failed.\\n\"", "cleanup", "out_len", "buf_len", "out", "buf", "fprintf", "stdout", "\"Decrypted:\\n\"", "BIO_dump_indent_fp", "stdout", "buf", "buf_len", "2", "fprintf", "stdout", "\"\\n\"", "ret", "1", "cleanup", "ret", "OPENSSL_free", "buf", "EVP_PKEY_free", "priv_key", "EVP_PKEY_CTX_free", "ctx", "ret"], "callee_func": ["get_key", "fprintf", "EVP_PKEY_CTX_new_from_pkey", "fprintf", "set_optional_params", "EVP_PKEY_decrypt_init_ex", "fprintf", "EVP_PKEY_decrypt", "fprintf", "OPENSSL_zalloc", "fprintf", "EVP_PKEY_decrypt", "fprintf", "fprintf", "BIO_dump_indent_fp", "fprintf", "OPENSSL_free", "EVP_PKEY_free", "EVP_PKEY_CTX_free"], "function_normalized_hash": "a17fd8ad615584611f1741755b9194dc"}, {"line_start": 213, "line_stop": 243, "function_name": "main", "file_path": "encrypt/rsa_encrypt.c", "line_of_code": 26, "operators": ["int", "=", ";", "=", "sizeof", "(", ")", "-", ";", "=", ",", "=", ";", "unsigned", "char", "*", "=", ",", "*", "=", ";", "*", "=", ";", "if", "(", "!", "(", ",", ",", ",", "&", ",", "&", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", ",", "&", ",", "&", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "if", "(", "!=", ")", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "size_t", "msg_len", "msg", "1", "size_t", "encrypted_len", "0", "decrypted_len", "0", "encrypted", "NULL", "decrypted", "NULL", "OSSL_LIB_CTX", "libctx", "NULL", "do_encrypt", "libctx", "msg", "msg_len", "encrypted", "encrypted_len", "fprintf", "stderr", "\"encryption failed.\\n\"", "cleanup", "do_decrypt", "libctx", "encrypted", "encrypted_len", "decrypted", "decrypted_len", "fprintf", "stderr", "\"decryption failed.\\n\"", "cleanup", "CRYPTO_memcmp", "msg", "decrypted", "decrypted_len", "0", "fprintf", "stderr", "\"Decrypted data does not match expected value\\n\"", "cleanup", "ret", "EXIT_SUCCESS", "cleanup", "OPENSSL_free", "decrypted", "OPENSSL_free", "encrypted", "OSSL_LIB_CTX_free", "libctx", "ret", "EXIT_SUCCESS", "ERR_print_errors_fp", "stderr", "ret"], "callee_func": ["do_encrypt", "fprintf", "do_decrypt", "fprintf", "CRYPTO_memcmp", "fprintf", "OPENSSL_free", "OPENSSL_free", "OSSL_LIB_CTX_free", "ERR_print_errors_fp"], "function_normalized_hash": "24c1eac65ce86e935384bc966d46891e"}]}, {"file_hash": "0c2bb53797d34a7537489c65081aabc1", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/cms/cms_denc.c", "file_name": "cms_denc.c", "function_list": [{"line_start": 18, "line_stop": 95, "function_name": "main", "file_path": "cms/cms_denc.c", "line_of_code": 46, "operators": ["*", "=", ",", "*", "=", ",", "*", "=", ",", "*", "=", ";", "*", "=", ";", "(", ")", "*", "=", ";", "*", "=", ";", "int", "=", ";", "int", "=", "|", ";", "(", ")", ";", "(", ")", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ")", ";", "if", "(", "!", "||", "!", "(", ",", ")", ")", "goto", ";", "=", ";", "=", "(", ",", ")", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", "(", ")", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ")", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "in", "NULL", "out", "NULL", "tbio", "NULL", "dout", "NULL", "X509", "rcert", "NULL", "STACK_OF", "X509", "recips", "NULL", "CMS_ContentInfo", "cms", "NULL", "ret", "EXIT_FAILURE", "flags", "CMS_STREAM", "CMS_DETACHED", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "tbio", "BIO_new_file", "\"signer.pem\"", "\"r\"", "tbio", "err", "rcert", "PEM_read_bio_X509", "tbio", "NULL", "0", "NULL", "rcert", "err", "recips", "sk_X509_new_null", "recips", "sk_X509_push", "recips", "rcert", "err", "rcert", "NULL", "in", "BIO_new_file", "\"encr.txt\"", "\"r\"", "dout", "BIO_new_file", "\"smencr.out\"", "\"wb\"", "in", "err", "cms", "CMS_encrypt", "recips", "in", "EVP_des_ede3_cbc", "flags", "cms", "err", "out", "BIO_new_file", "\"smencr.pem\"", "\"w\"", "out", "err", "CMS_final", "cms", "in", "dout", "flags", "err", "PEM_write_bio_CMS", "out", "cms", "err", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "fprintf", "stderr", "\"Error Encrypting Data\\n\"", "ERR_print_errors_fp", "stderr", "CMS_ContentInfo_free", "cms", "X509_free", "rcert", "OSSL_STACK_OF_X509_free", "recips", "BIO_free", "in", "BIO_free", "out", "BIO_free", "dout", "BIO_free", "tbio", "ret"], "callee_func": ["STACK_OF", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "BIO_new_file", "PEM_read_bio_X509", "sk_X509_new_null", "sk_X509_push", "BIO_new_file", "BIO_new_file", "CMS_encrypt", "EVP_des_ede3_cbc", "BIO_new_file", "CMS_final", "PEM_write_bio_CMS", "fprintf", "ERR_print_errors_fp", "CMS_ContentInfo_free", "X509_free", "OSSL_STACK_OF_X509_free", "BIO_free", "BIO_free", "BIO_free", "BIO_free"], "function_normalized_hash": "381cb86e5e3b5e46a4c4cea223709cbc"}]}, {"file_hash": "7d79089a57f774f25df9fcbc7b6b0f87", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/bio/server-arg.c", "file_name": "server-arg.c", "function_list": [{"line_start": 23, "line_stop": 144, "function_name": "main", "file_path": "bio/server-arg.c", "line_of_code": 88, "operators": ["char", "*", "=", ";", "*", ",", "*", ";", "*", ";", "*", ";", "char", "[", "]", ";", "*", "=", ";", "int", "=", ",", ";", "char", "*", "*", "=", "+", ";", "int", "=", "-", ";", "=", "(", "(", ")", ")", ";", "=", "(", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "while", "(", "*", "&&", "*", "*", "==", ")", "{", "int", ";", "=", "(", ",", "&", ",", "&", ")", ";", "if", "(", "==", "-", ")", "{", "(", ",", ",", "*", ")", ";", "goto", ";", "}", "if", "(", "<", ")", "{", "(", ",", ",", "*", ")", ";", "(", ")", ";", "goto", ";", "}", "if", "(", ">", ")", "continue", ";", "if", "(", "(", "*", ",", ")", "==", ")", "{", "=", "[", "]", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "+=", ";", "-=", ";", "continue", ";", "}", "else", "{", "(", ",", ",", "*", ")", ";", "goto", ";", "}", "}", "if", "(", "!", "(", ")", ")", "{", "(", ",", ")", ";", "(", ")", ";", "goto", ";", "}", "#ifdef ITERATE_CERTS", "{", "*", ";", "int", ";", "=", "(", ",", ")", ";", "while", "(", ")", "{", "*", "=", "(", ")", ";", "(", ",", "(", ")", ",", ",", ")", ";", "(", ")", ";", "=", "(", ",", ")", ";", "}", "(", ")", ";", "}", "#endif", "=", "(", ",", ")", ";", "if", "(", "(", "=", "(", ")", ")", "==", ")", "goto", ";", "(", ",", ")", ";", ":", "if", "(", "(", ")", "<=", ")", "goto", ";", "for", "(", ";", ";", ")", "{", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ")", ";", "=", "(", ")", ";", "(", ")", ";", "goto", ";", "}", "if", "(", "<", ")", "goto", ";", "(", ",", ",", ",", ")", ";", "(", ")", ";", "}", "=", ";", ":", "if", "(", "!=", ")", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["port", "\"*:4433\"", "BIO", "ssl_bio", "tmp", "SSL_CTX", "ctx", "SSL_CONF_CTX", "cctx", "buf", "512", "BIO", "in", "NULL", "ret", "EXIT_FAILURE", "i", "args", "argv", "1", "nargs", "argc", "1", "ctx", "SSL_CTX_new", "TLS_server_method", "cctx", "SSL_CONF_CTX_new", "SSL_CONF_CTX_set_flags", "cctx", "SSL_CONF_FLAG_SERVER", "SSL_CONF_CTX_set_flags", "cctx", "SSL_CONF_FLAG_CERTIFICATE", "SSL_CONF_CTX_set_ssl_ctx", "cctx", "ctx", "args", "args", "'-'", "rv", "rv", "SSL_CONF_cmd_argv", "cctx", "nargs", "args", "rv", "3", "fprintf", "stderr", "\"Missing argument for %s\\n\"", "args", "err", "rv", "0", "fprintf", "stderr", "\"Error in command %s\\n\"", "args", "ERR_print_errors_fp", "stderr", "err", "rv", "0", "strcmp", "args", "\"-port\"", "0", "port", "args", "1", "port", "NULL", "fprintf", "stderr", "\"Missing -port argument\\n\"", "err", "args", "2", "nargs", "2", "fprintf", "stderr", "\"Unknown argument %s\\n\"", "args", "err", "SSL_CONF_CTX_finish", "cctx", "fprintf", "stderr", "\"Finish error\\n\"", "ERR_print_errors_fp", "stderr", "err", "X509", "x", "rv", "rv", "SSL_CTX_set_current_cert", "ctx", "SSL_CERT_SET_FIRST", "rv", "X509", "x", "SSL_CTX_get0_certificate", "ctx", "X509_NAME_print_ex_fp", "stdout", "X509_get_subject_name", "x", "0", "XN_FLAG_ONELINE", "printf", "\"\\n\"", "rv", "SSL_CTX_set_current_cert", "ctx", "SSL_CERT_SET_NEXT", "fflush", "stdout", "ssl_bio", "BIO_new_ssl", "ctx", "0", "in", "BIO_new_accept", "port", "NULL", "err", "BIO_set_accept_bios", "in", "ssl_bio", "again", "BIO_do_accept", "in", "0", "err", "i", "BIO_read", "in", "buf", "512", "i", "0", "printf", "\"Done\\n\"", "tmp", "BIO_pop", "in", "BIO_free_all", "tmp", "again", "i", "0", "err", "fwrite", "buf", "1", "i", "stdout", "fflush", "stdout", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "ERR_print_errors_fp", "stderr", "BIO_free", "in", "ret"], "callee_func": ["SSL_CTX_new", "TLS_server_method", "SSL_CONF_CTX_new", "SSL_CONF_CTX_set_flags", "SSL_CONF_CTX_set_flags", "SSL_CONF_CTX_set_ssl_ctx", "SSL_CONF_cmd_argv", "fprintf", "fprintf", "ERR_print_errors_fp", "strcmp", "fprintf", "fprintf", "SSL_CONF_CTX_finish", "fprintf", "ERR_print_errors_fp", "SSL_CTX_set_current_cert", "SSL_CTX_get0_certificate", "X509_NAME_print_ex_fp", "X509_get_subject_name", "printf", "SSL_CTX_set_current_cert", "fflush", "BIO_new_ssl", "BIO_new_accept", "BIO_set_accept_bios", "BIO_do_accept", "BIO_read", "printf", "BIO_pop", "BIO_free_all", "fwrite", "fflush", "ERR_print_errors_fp", "BIO_free"], "function_normalized_hash": "0c9fdec7cfff186f222b947ab5a3dd7d"}]}, {"file_hash": "d252f020349c57054e59b622d6906b3d", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/digest/BIO_f_md.c", "file_name": "BIO_f_md.c", "function_list": [{"line_start": 37, "line_stop": 121, "function_name": "main", "file_path": "digest/BIO_f_md.c", "line_of_code": 60, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ",", "*", "=", ";", "*", "=", ";", "unsigned", "char", "[", "]", ";", ";", "char", "*", "=", ";", "int", ";", "=", "(", "(", ")", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ",", "(", "unsigned", "long", ")", ")", ";", "goto", ";", "}", "=", "(", "(", ")", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ")", ";", "while", "(", "(", ",", ",", "sizeof", "(", ")", ")", ">", ")", ";", "if", "(", "(", ",", ",", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "for", "(", "=", ";", "<", ";", "++", ")", "{", "(", ",", ",", "(", "unsigned", "char", ")", "[", "]", ")", ";", "}", "(", ",", ")", ";", "=", ";", ":", "if", "(", "!=", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "OSSL_LIB_CTX", "library_context", "NULL", "BIO", "input", "NULL", "BIO", "bio_digest", "NULL", "reading", "NULL", "EVP_MD", "md", "NULL", "buffer", "512", "size_t", "digest_size", "digest_value", "NULL", "j", "input", "BIO_new_fd", "fileno", "stdin", "1", "input", "NULL", "fprintf", "stderr", "\"BIO_new_fd() for stdin returned NULL\\n\"", "cleanup", "library_context", "OSSL_LIB_CTX_new", "library_context", "NULL", "fprintf", "stderr", "\"OSSL_LIB_CTX_new() returned NULL\\n\"", "cleanup", "md", "EVP_MD_fetch", "library_context", "\"SHA3-512\"", "NULL", "md", "NULL", "fprintf", "stderr", "\"EVP_MD_fetch did not find SHA3-512.\\n\"", "cleanup", "digest_size", "EVP_MD_get_size", "md", "digest_value", "OPENSSL_malloc", "digest_size", "digest_value", "NULL", "fprintf", "stderr", "\"Can't allocate %lu bytes for the digest value.\\n\"", "digest_size", "cleanup", "bio_digest", "BIO_new", "BIO_f_md", "bio_digest", "NULL", "fprintf", "stderr", "\"BIO_new(BIO_f_md()) returned NULL\\n\"", "cleanup", "BIO_set_md", "bio_digest", "md", "1", "fprintf", "stderr", "\"BIO_set_md failed.\\n\"", "cleanup", "reading", "BIO_push", "bio_digest", "input", "BIO_read", "reading", "buffer", "buffer", "0", "BIO_gets", "bio_digest", "digest_value", "digest_size", "digest_size", "fprintf", "stderr", "\"BIO_gets(bio_digest) failed\\n\"", "cleanup", "j", "0", "j", "digest_size", "j", "fprintf", "stdout", "\"%02x\"", "digest_value", "j", "fprintf", "stdout", "\"\\n\"", "ret", "EXIT_SUCCESS", "cleanup", "ret", "EXIT_SUCCESS", "ERR_print_errors_fp", "stderr", "OPENSSL_free", "digest_value", "BIO_free", "input", "BIO_free", "bio_digest", "EVP_MD_free", "md", "OSSL_LIB_CTX_free", "library_context", "ret"], "callee_func": ["BIO_new_fd", "fileno", "fprintf", "OSSL_LIB_CTX_new", "fprintf", "EVP_MD_fetch", "fprintf", "EVP_MD_get_size", "OPENSSL_malloc", "fprintf", "BIO_new", "BIO_f_md", "fprintf", "BIO_set_md", "fprintf", "BIO_push", "BIO_read", "BIO_gets", "fprintf", "fprintf", "fprintf", "ERR_print_errors_fp", "OPENSSL_free", "BIO_free", "BIO_free", "EVP_MD_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "b0ba2eaa54b32d510babe489d229ab3b"}]}, {"file_hash": "32d2d1c787d8836cf6cc2f73c843b03c", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/guide/tls-client-block.c", "file_name": "tls-client-block.c", "function_list": [{"line_start": 29, "line_stop": 92, "function_name": "create_socket_bio", "file_path": "guide/tls-client-block.c", "line_of_code": 26, "operators": ["int", "=", "-", ";", "*", ";", "const", "*", "=", ";", "*", ";", "if", "(", "!", "(", ",", ",", ",", ",", ",", ",", "&", ")", ")", "return", ";", "for", "(", "=", ";", "!=", ";", "=", "(", ")", ")", "{", "=", "(", "(", ")", ",", ",", ",", ")", ";", "if", "(", "==", "-", ")", "continue", ";", "if", "(", "!", "(", ",", "(", ")", ",", ")", ")", "{", "(", ")", ";", "=", "-", ";", "continue", ";", "}", "break", ";", "}", "(", ")", ";", "if", "(", "==", "-", ")", "return", ";", "=", "(", "(", ")", ")", ";", "if", "(", "==", ")", "(", ")", ";", "(", ",", ",", ")", ";", "return", ";"], "operands": ["sock", "1", "BIO_ADDRINFO", "res", "BIO_ADDRINFO", "ai", "NULL", "BIO", "bio", "BIO_lookup_ex", "hostname", "port", "BIO_LOOKUP_CLIENT", "0", "SOCK_STREAM", "0", "res", "NULL", "ai", "res", "ai", "NULL", "ai", "BIO_ADDRINFO_next", "ai", "sock", "BIO_socket", "BIO_ADDRINFO_family", "ai", "SOCK_STREAM", "0", "0", "sock", "1", "BIO_connect", "sock", "BIO_ADDRINFO_address", "ai", "BIO_SOCK_NODELAY", "BIO_closesocket", "sock", "sock", "1", "BIO_ADDRINFO_free", "res", "sock", "1", "NULL", "bio", "BIO_new", "BIO_s_socket", "bio", "NULL", "BIO_closesocket", "sock", "BIO_set_fd", "bio", "sock", "BIO_CLOSE", "bio"], "callee_func": ["BIO_lookup_ex", "BIO_ADDRINFO_next", "BIO_socket", "BIO_ADDRINFO_family", "BIO_connect", "BIO_ADDRINFO_address", "BIO_closesocket", "BIO_ADDRINFO_free", "BIO_new", "BIO_s_socket", "BIO_closesocket", "BIO_set_fd"], "function_normalized_hash": "826c854fe7a301322bffe7a4fc4fb145"}, {"line_start": 106, "line_stop": 275, "function_name": "main", "file_path": "guide/tls-client-block.c", "line_of_code": 73, "operators": ["*", "=", ";", "*", ";", "*", "=", ";", "int", "=", ";", "int", ";", "const", "char", "*", "=", ";", ",", ";", "char", "[", "]", ";", "=", "(", "(", ")", ")", ";", "if", "(", "==", ")", "{", "(", ")", ";", "goto", ";", "}", "(", ",", ",", ")", ";", "if", "(", "!", "(", ")", ")", "{", "(", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ")", ")", "{", "(", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ")", ";", "goto", ";", "}", "=", "(", ",", ")", ";", "if", "(", "==", ")", "{", "(", ")", ";", "goto", ";", "}", "(", ",", ",", ")", ";", "if", "(", "!", "(", ",", ")", ")", "{", "(", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ")", ")", "{", "(", ")", ";", "goto", ";", "}", "if", "(", "(", ")", "<", ")", "{", "(", ")", ";", "if", "(", "(", ")", "!=", ")", "(", ",", "(", "(", ")", ")", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "(", ")", ",", "&", ")", ")", "{", "(", ")", ";", "goto", ";", "}", "while", "(", "(", ",", ",", "sizeof", "(", ")", ",", "&", ")", ")", "{", "(", ",", ",", ",", ")", ";", "}", "(", ")", ";", "if", "(", "(", ",", ")", "!=", ")", "{", "(", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "<", ")", "{", "(", ")", ";", "goto", ";", "}", "=", ";", ":", "if", "(", "==", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["SSL_CTX", "ctx", "NULL", "SSL", "ssl", "BIO", "bio", "NULL", "res", "EXIT_FAILURE", "ret", "request", "\"GET / HTTP/1.0\\r\\nConnection: close\\r\\nHost: \"HOSTNAME", "\"\\r\\n\\r\\n\"", "size_t", "written", "readbytes", "buf", "160", "ctx", "SSL_CTX_new", "TLS_client_method", "ctx", "NULL", "printf", "\"Failed to create the SSL_CTX\\n\"", "end", "SSL_CTX_set_verify", "ctx", "SSL_VERIFY_PEER", "NULL", "SSL_CTX_set_default_verify_paths", "ctx", "printf", "\"Failed to set the default trusted certificate store\\n\"", "end", "SSL_CTX_set_min_proto_version", "ctx", "TLS1_2_VERSION", "printf", "\"Failed to set the minimum TLS protocol version\\n\"", "end", "ssl", "SSL_new", "ctx", "ssl", "NULL", "printf", "\"Failed to create the SSL object\\n\"", "end", "bio", "create_socket_bio", "HOSTNAME", "PORT", "bio", "NULL", "printf", "\"Failed to crete the BIO\\n\"", "end", "SSL_set_bio", "ssl", "bio", "bio", "SSL_set_tlsext_host_name", "ssl", "HOSTNAME", "printf", "\"Failed to set the SNI hostname\\n\"", "end", "SSL_set1_host", "ssl", "HOSTNAME", "printf", "\"Failed to set the certificate verification hostname\"", "end", "SSL_connect", "ssl", "1", "printf", "\"Failed to connect to the server\\n\"", "SSL_get_verify_result", "ssl", "X509_V_OK", "printf", "\"Verify error: %s\\n\"", "X509_verify_cert_error_string", "SSL_get_verify_result", "ssl", "end", "SSL_write_ex", "ssl", "request", "strlen", "request", "written", "printf", "\"Failed to write HTTP request\\n\"", "end", "SSL_read_ex", "ssl", "buf", "buf", "readbytes", "fwrite", "buf", "1", "readbytes", "stdout", "printf", "\"\\n\"", "SSL_get_error", "ssl", "0", "SSL_ERROR_ZERO_RETURN", "printf", "\"Failed reading remaining data\\n\"", "end", "ret", "SSL_shutdown", "ssl", "ret", "1", "printf", "\"Error shutting down\\n\"", "end", "res", "EXIT_SUCCESS", "end", "res", "EXIT_FAILURE", "ERR_print_errors_fp", "stderr", "SSL_free", "ssl", "SSL_CTX_free", "ctx", "res"], "callee_func": ["SSL_CTX_new", "TLS_client_method", "printf", "SSL_CTX_set_verify", "SSL_CTX_set_default_verify_paths", "printf", "SSL_CTX_set_min_proto_version", "printf", "SSL_new", "printf", "create_socket_bio", "printf", "SSL_set_bio", "SSL_set_tlsext_host_name", "printf", "SSL_set1_host", "printf", "SSL_connect", "printf", "SSL_get_verify_result", "printf", "X509_verify_cert_error_string", "SSL_get_verify_result", "SSL_write_ex", "strlen", "printf", "SSL_read_ex", "fwrite", "printf", "SSL_get_error", "printf", "SSL_shutdown", "printf", "ERR_print_errors_fp", "SSL_free", "SSL_CTX_free"], "function_normalized_hash": "4c8bfd34c52141a87ea9598a6fb24bf6"}]}, {"file_hash": "4bbde32d02d5f185cd653486a19432c0", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/smime/smdec.c", "file_name": "smdec.c", "function_list": [{"line_start": 15, "line_stop": 78, "function_name": "main", "file_path": "smime/smdec.c", "line_of_code": 39, "operators": ["*", "=", ",", "*", "=", ",", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "int", "=", ";", "(", ")", ";", "(", ")", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ")", ";", "(", ")", ";", "=", "(", ",", ",", ",", ")", ";", "if", "(", "!", "||", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "in", "NULL", "out", "NULL", "tbio", "NULL", "X509", "rcert", "NULL", "EVP_PKEY", "rkey", "NULL", "PKCS7", "p7", "NULL", "ret", "EXIT_FAILURE", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "tbio", "BIO_new_file", "\"signer.pem\"", "\"r\"", "tbio", "err", "rcert", "PEM_read_bio_X509", "tbio", "NULL", "0", "NULL", "BIO_reset", "tbio", "rkey", "PEM_read_bio_PrivateKey", "tbio", "NULL", "0", "NULL", "rcert", "rkey", "err", "in", "BIO_new_file", "\"smencr.txt\"", "\"r\"", "in", "err", "p7", "SMIME_read_PKCS7", "in", "NULL", "p7", "err", "out", "BIO_new_file", "\"encrout.txt\"", "\"w\"", "out", "err", "PKCS7_decrypt", "p7", "rkey", "rcert", "out", "0", "err", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "fprintf", "stderr", "\"Error Signing Data\\n\"", "ERR_print_errors_fp", "stderr", "PKCS7_free", "p7", "X509_free", "rcert", "EVP_PKEY_free", "rkey", "BIO_free", "in", "BIO_free", "out", "BIO_free", "tbio", "ret"], "callee_func": ["OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "BIO_new_file", "PEM_read_bio_X509", "BIO_reset", "PEM_read_bio_PrivateKey", "BIO_new_file", "SMIME_read_PKCS7", "BIO_new_file", "PKCS7_decrypt", "fprintf", "ERR_print_errors_fp", "PKCS7_free", "X509_free", "EVP_PKEY_free", "BIO_free", "BIO_free", "BIO_free"], "function_normalized_hash": "90179fdc83a7b6bba541acb101ebb876"}]}, {"file_hash": "1192925e86e587318ad01c25634cd89b", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/pkey/EVP_PKEY_DSA_paramvalidate.c", "file_name": "EVP_PKEY_DSA_paramvalidate.c", "function_list": [{"line_start": 58, "line_stop": 101, "function_name": "create_merged_key", "file_path": "pkey/EVP_PKEY_DSA_paramvalidate.c", "line_of_code": 36, "operators": ["*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "if", "(", "(", ",", ",", "&", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ")", "<=", "||", "(", ",", "&", ",", ",", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["EVP_PKEY_CTX", "out", "NULL", "EVP_PKEY_CTX", "ctx", "NULL", "EVP_PKEY", "pkey", "NULL", "OSSL_PARAM", "mergedparams", "NULL", "OSSL_PARAM", "loadedparams", "NULL", "EVP_PKEY_todata", "dsaparams", "EVP_PKEY_KEY_PARAMETERS", "loadedparams", "0", "fprintf", "stderr", "\"EVP_PKEY_todata() failed\\n\"", "cleanup", "mergedparams", "OSSL_PARAM_merge", "loadedparams", "newparams", "mergedparams", "NULL", "fprintf", "stderr", "\"OSSL_PARAM_merge() failed\\n\"", "cleanup", "ctx", "EVP_PKEY_CTX_new_from_name", "libctx", "\"DSA\"", "propq", "ctx", "NULL", "fprintf", "stderr", "\"EVP_PKEY_CTX_new_from_name() failed\\n\"", "cleanup", "EVP_PKEY_fromdata_init", "ctx", "0", "EVP_PKEY_fromdata", "ctx", "pkey", "EVP_PKEY_KEY_PARAMETERS", "mergedparams", "0", "fprintf", "stderr", "\"EVP_PKEY_fromdata() failed\\n\"", "cleanup", "out", "EVP_PKEY_CTX_new_from_pkey", "libctx", "pkey", "propq", "out", "NULL", "fprintf", "stderr", "\"EVP_PKEY_CTX_new_from_pkey() failed\\n\"", "cleanup", "cleanup", "EVP_PKEY_free", "pkey", "OSSL_PARAM_free", "loadedparams", "OSSL_PARAM_free", "mergedparams", "EVP_PKEY_CTX_free", "ctx", "out"], "callee_func": ["EVP_PKEY_todata", "fprintf", "OSSL_PARAM_merge", "fprintf", "EVP_PKEY_CTX_new_from_name", "fprintf", "EVP_PKEY_fromdata_init", "EVP_PKEY_fromdata", "fprintf", "EVP_PKEY_CTX_new_from_pkey", "fprintf", "EVP_PKEY_free", "OSSL_PARAM_free", "OSSL_PARAM_free", "EVP_PKEY_CTX_free"], "function_normalized_hash": "dc1d29749ef758e50ef4b65a9c6c82ab"}, {"line_start": 103, "line_stop": 202, "function_name": "main", "file_path": "pkey/EVP_PKEY_DSA_paramvalidate.c", "line_of_code": 66, "operators": ["int", "=", ";", "*", "=", ";", "const", "char", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "[", "]", ";", "unsigned", "char", "[", "]", ";", ";", "if", "(", "!", "(", ",", "sizeof", "(", ")", ",", "&", ",", ",", ")", ")", "goto", ";", "=", "(", ",", "(", ")", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "[", "]", "=", "(", ",", ",", ")", ";", "[", "]", "=", "(", ",", "(", "void", "*", ")", ",", ")", ";", "[", "]", "=", "(", ",", "(", "int", "*", ")", "&", ")", ";", "[", "]", "=", "(", ",", "(", "int", "*", ")", "&", ")", ";", "[", "]", "=", "(", ")", ";", "=", "(", ",", ",", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "(", ")", ">", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "[", "]", "=", "(", ",", "(", "char", "*", ")", ",", ")", ";", "[", "]", "=", "(", ")", ";", "=", "(", ",", ",", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "(", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", "(", ")", ",", ",", ",", ")", ")", "goto", ";", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "OSSL_LIB_CTX", "libctx", "NULL", "propq", "NULL", "EVP_PKEY", "dsaparamskey", "NULL", "EVP_PKEY_CTX", "ctx", "NULL", "EVP_PKEY_CTX", "ctx1", "NULL", "EVP_PKEY_CTX", "ctx2", "NULL", "BIO", "in", "NULL", "OSSL_PARAM", "params", "6", "seed", "64", "size_t", "seedlen", "OPENSSL_hexstr2buf_ex", "seed", "seed", "seedlen", "hexseed", "'\\0'", "cleanup", "in", "BIO_new_mem_buf", "dsapem", "strlen", "dsapem", "in", "NULL", "fprintf", "stderr", "\"BIO_new_mem_buf() failed\\n\"", "cleanup", "dsaparamskey", "PEM_read_bio_Parameters_ex", "in", "NULL", "libctx", "propq", "dsaparamskey", "NULL", "fprintf", "stderr", "\"Failed to load dsa params\\n\"", "cleanup", "ctx", "EVP_PKEY_CTX_new_from_pkey", "libctx", "dsaparamskey", "propq", "ctx", "NULL", "fprintf", "stderr", "\"EVP_PKEY_CTX_new_from_pkey() failed\\n\"", "cleanup", "EVP_PKEY_param_check", "ctx", "0", "fprintf", "stderr", "\"Simple EVP_PKEY_param_check() failed \\n\"", "cleanup", "params", "0", "OSSL_PARAM_construct_utf8_string", "OSSL_PKEY_PARAM_FFC_TYPE", "\"fips186_4\"", "0", "params", "1", "OSSL_PARAM_construct_octet_string", "OSSL_PKEY_PARAM_FFC_SEED", "seed", "seedlen", "params", "2", "OSSL_PARAM_construct_int", "OSSL_PKEY_PARAM_FFC_GINDEX", "gindex", "params", "3", "OSSL_PARAM_construct_int", "OSSL_PKEY_PARAM_FFC_PCOUNTER", "pcounter", "params", "4", "OSSL_PARAM_construct_end", "ctx1", "create_merged_key", "dsaparamskey", "params", "libctx", "propq", "ctx1", "NULL", "cleanup", "EVP_PKEY_param_check", "ctx1", "0", "fprintf", "stderr", "\"EVP_PKEY_param_check() should fail\\n\"", "cleanup", "params", "4", "OSSL_PARAM_construct_utf8_string", "OSSL_PKEY_PARAM_FFC_DIGEST", "digest", "0", "params", "5", "OSSL_PARAM_construct_end", "ctx2", "create_merged_key", "dsaparamskey", "params", "libctx", "propq", "ctx2", "NULL", "cleanup", "EVP_PKEY_param_check", "ctx2", "0", "fprintf", "stderr", "\"EVP_PKEY_param_check() failed\\n\"", "cleanup", "dsa_print_key", "EVP_PKEY_CTX_get0_pkey", "ctx2", "0", "libctx", "propq", "cleanup", "ret", "EXIT_SUCCESS", "cleanup", "EVP_PKEY_free", "dsaparamskey", "EVP_PKEY_CTX_free", "ctx2", "EVP_PKEY_CTX_free", "ctx1", "EVP_PKEY_CTX_free", "ctx", "BIO_free", "in", "ret"], "callee_func": ["OPENSSL_hexstr2buf_ex", "BIO_new_mem_buf", "strlen", "fprintf", "PEM_read_bio_Parameters_ex", "fprintf", "EVP_PKEY_CTX_new_from_pkey", "fprintf", "EVP_PKEY_param_check", "fprintf", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_octet_string", "OSSL_PARAM_construct_int", "OSSL_PARAM_construct_int", "OSSL_PARAM_construct_end", "create_merged_key", "EVP_PKEY_param_check", "fprintf", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_end", "create_merged_key", "EVP_PKEY_param_check", "fprintf", "dsa_print_key", "EVP_PKEY_CTX_get0_pkey", "EVP_PKEY_free", "EVP_PKEY_CTX_free", "EVP_PKEY_CTX_free", "EVP_PKEY_CTX_free", "BIO_free"], "function_normalized_hash": "44d47b5ebcf48db23d339658013dec3b"}]}, {"file_hash": "b1a5c44f7501375f8b3e45b9ee93020a", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/pkcs12/pkread.c", "file_name": "pkread.c", "function_list": [{"line_start": 18, "line_stop": 46, "function_name": "find_friendly_name", "file_path": "pkcs12/pkread.c", "line_of_code": 21, "operators": ["(", ")", "*", ";", "int", ",", ";", "char", "*", "=", ";", "*", ";", "(", ")", "*", ";", "*", ";", "if", "(", "(", "=", "(", ")", ")", "==", ")", "return", ";", "for", "(", "=", ";", "<", "(", ")", "&&", "==", ";", "++", ")", "{", "=", "(", ",", ")", ";", "if", "(", "(", "->", ")", "!=", "||", "(", "=", "(", ")", ")", "==", ")", "continue", ";", "for", "(", "=", ";", "<", "(", ")", "&&", "==", ";", "++", ")", "{", "=", "(", ",", ")", ";", "=", "(", ")", ";", "}", "(", ",", ")", ";", "}", "(", ",", ")", ";", "return", ";"], "operands": ["STACK_OF", "PKCS7", "safes", "n", "m", "name", "NULL", "PKCS7", "safe", "STACK_OF", "PKCS12_SAFEBAG", "bags", "PKCS12_SAFEBAG", "bag", "safes", "PKCS12_unpack_authsafes", "p12", "NULL", "NULL", "n", "0", "n", "sk_PKCS7_num", "safes", "name", "NULL", "n", "safe", "sk_PKCS7_value", "safes", "n", "OBJ_obj2nid", "safe", "type", "NID_pkcs7_data", "bags", "PKCS12_unpack_p7data", "safe", "NULL", "m", "0", "m", "sk_PKCS12_SAFEBAG_num", "bags", "name", "NULL", "m", "bag", "sk_PKCS12_SAFEBAG_value", "bags", "m", "name", "PKCS12_get_friendlyname", "bag", "sk_PKCS12_SAFEBAG_pop_free", "bags", "PKCS12_SAFEBAG_free", "sk_PKCS7_pop_free", "safes", "PKCS7_free", "name"], "callee_func": ["STACK_OF", "STACK_OF", "PKCS12_unpack_authsafes", "sk_PKCS7_num", "sk_PKCS7_value", "OBJ_obj2nid", "PKCS12_unpack_p7data", "sk_PKCS12_SAFEBAG_num", "sk_PKCS12_SAFEBAG_value", "PKCS12_get_friendlyname", "sk_PKCS12_SAFEBAG_pop_free", "sk_PKCS7_pop_free"], "function_normalized_hash": "fbc2b39b60ed31ac14d2723c3cb91647"}, {"line_start": 48, "line_stop": 111, "function_name": "main", "file_path": "pkcs12/pkread.c", "line_of_code": 56, "operators": ["*", ";", "*", "=", ";", "*", "=", ";", "(", ")", "*", "=", ";", "*", "=", ";", "char", "*", "=", ";", "int", ",", "=", ";", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "if", "(", "(", "=", "(", "[", "]", ",", ")", ")", "==", ")", "{", "(", ",", ",", "[", "]", ")", ";", "(", ")", ";", "}", "=", "(", ",", ")", ";", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "(", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", "[", "]", ",", "&", ",", "&", ",", "&", ")", ")", "{", "(", ",", ")", ";", "(", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "(", ")", ";", "if", "(", "(", "=", "(", "[", "]", ",", ")", ")", "==", ")", "{", "(", ",", ",", "[", "]", ")", ";", "goto", ";", "}", "if", "(", "!=", ")", "(", ",", ",", ")", ";", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ",", ",", ",", ",", ",", ",", ")", ";", "}", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ",", ")", ";", "}", "if", "(", "!=", "&&", "(", ")", ">", ")", "{", "(", ",", ")", ";", "for", "(", "=", ";", "<", "(", ")", ";", "++", ")", "(", ",", "(", ",", ")", ")", ";", "}", "(", ")", ";", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["FILE", "fp", "EVP_PKEY", "pkey", "NULL", "X509", "cert", "NULL", "STACK_OF", "X509", "ca", "NULL", "PKCS12", "p12", "NULL", "name", "NULL", "i", "ret", "EXIT_FAILURE", "argc", "4", "fprintf", "stderr", "\"Usage: pkread p12file password opfile\\n\"", "exit", "EXIT_FAILURE", "fp", "fopen", "argv", "1", "\"rb\"", "NULL", "fprintf", "stderr", "\"Error opening file %s\\n\"", "argv", "1", "exit", "EXIT_FAILURE", "p12", "d2i_PKCS12_fp", "fp", "NULL", "fclose", "fp", "p12", "NULL", "fprintf", "stderr", "\"Error reading PKCS#12 file\\n\"", "ERR_print_errors_fp", "stderr", "err", "PKCS12_parse", "p12", "argv", "2", "pkey", "cert", "ca", "fprintf", "stderr", "\"Error parsing PKCS#12 file\\n\"", "ERR_print_errors_fp", "stderr", "err", "name", "find_friendly_name", "p12", "PKCS12_free", "p12", "fp", "fopen", "argv", "3", "\"w\"", "NULL", "fprintf", "stderr", "\"Error opening file %s\\n\"", "argv", "3", "err", "name", "NULL", "fprintf", "fp", "\"***Friendly Name***\\n%s\\n\"", "name", "pkey", "NULL", "fprintf", "fp", "\"***Private Key***\\n\"", "PEM_write_PrivateKey", "fp", "pkey", "NULL", "NULL", "0", "NULL", "NULL", "cert", "NULL", "fprintf", "fp", "\"***User Certificate***\\n\"", "PEM_write_X509_AUX", "fp", "cert", "ca", "NULL", "sk_X509_num", "ca", "0", "fprintf", "fp", "\"***Other Certificates***\\n\"", "i", "0", "i", "sk_X509_num", "ca", "i", "PEM_write_X509_AUX", "fp", "sk_X509_value", "ca", "i", "fclose", "fp", "ret", "EXIT_SUCCESS", "err", "OPENSSL_free", "name", "X509_free", "cert", "EVP_PKEY_free", "pkey", "OSSL_STACK_OF_X509_free", "ca", "ret"], "callee_func": ["STACK_OF", "fprintf", "exit", "fopen", "fprintf", "exit", "d2i_PKCS12_fp", "fclose", "fprintf", "ERR_print_errors_fp", "PKCS12_parse", "fprintf", "ERR_print_errors_fp", "find_friendly_name", "PKCS12_free", "fopen", "fprintf", "fprintf", "fprintf", "PEM_write_PrivateKey", "fprintf", "PEM_write_X509_AUX", "sk_X509_num", "fprintf", "sk_X509_num", "PEM_write_X509_AUX", "sk_X509_value", "fclose", "OPENSSL_free", "X509_free", "EVP_PKEY_free", "OSSL_STACK_OF_X509_free"], "function_normalized_hash": "3a3f1c8af0b89c89cffa205a092f1135"}]}, {"file_hash": "9116da2019c1c7ccbc937387ec219977", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/mac/cmac-aes256.c", "file_name": "cmac-aes256.c", "function_list": [{"line_start": 66, "line_stop": 154, "function_name": "main", "file_path": "mac/cmac-aes256.c", "line_of_code": 67, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "unsigned", "char", "*", "=", ";", "=", ";", "[", "]", ",", "*", "=", ";", "char", "[", "]", "=", ";", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "*", "++", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "*", "=", "(", ")", ";", "if", "(", "!", "(", ",", ",", "sizeof", "(", ")", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "sizeof", "(", ")", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "&", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "&", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ")", ";", "(", ",", ",", ",", ")", ";", "(", ")", ";", "if", "(", "!=", "sizeof", "(", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "if", "(", "!=", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "OSSL_LIB_CTX", "library_context", "NULL", "EVP_MAC", "mac", "NULL", "EVP_MAC_CTX", "mctx", "NULL", "out", "NULL", "size_t", "out_len", "0", "OSSL_PARAM", "params", "4", "p", "params", "cipher_name", "\"AES-256-CBC\"", "library_context", "OSSL_LIB_CTX_new", "library_context", "NULL", "fprintf", "stderr", "\"OSSL_LIB_CTX_new() returned NULL\\n\"", "end", "mac", "EVP_MAC_fetch", "library_context", "\"CMAC\"", "propq", "mac", "NULL", "fprintf", "stderr", "\"EVP_MAC_fetch() returned NULL\\n\"", "end", "mctx", "EVP_MAC_CTX_new", "mac", "mctx", "NULL", "fprintf", "stderr", "\"EVP_MAC_CTX_new() returned NULL\\n\"", "end", "p", "OSSL_PARAM_construct_utf8_string", "OSSL_MAC_PARAM_CIPHER", "cipher_name", "cipher_name", "p", "OSSL_PARAM_construct_end", "EVP_MAC_init", "mctx", "key", "key", "params", "fprintf", "stderr", "\"EVP_MAC_init() failed\\n\"", "end", "EVP_MAC_update", "mctx", "data", "data", "fprintf", "stderr", "\"EVP_MAC_update() failed\\n\"", "end", "EVP_MAC_final", "mctx", "NULL", "out_len", "0", "fprintf", "stderr", "\"EVP_MAC_final() failed\\n\"", "end", "out", "OPENSSL_malloc", "out_len", "out", "NULL", "fprintf", "stderr", "\"malloc failed\\n\"", "end", "EVP_MAC_final", "mctx", "out", "out_len", "out_len", "fprintf", "stderr", "\"EVP_MAC_final() failed\\n\"", "end", "printf", "\"Generated MAC:\\n\"", "BIO_dump_indent_fp", "stdout", "out", "out_len", "2", "putchar", "'\\n'", "out_len", "expected_output", "fprintf", "stderr", "\"Generated MAC has an unexpected length\\n\"", "end", "CRYPTO_memcmp", "expected_output", "out", "expected_output", "0", "fprintf", "stderr", "\"Generated MAC does not match expected value\\n\"", "end", "ret", "EXIT_SUCCESS", "end", "ret", "EXIT_SUCCESS", "ERR_print_errors_fp", "stderr", "OPENSSL_free", "out", "EVP_MAC_CTX_free", "mctx", "EVP_MAC_free", "mac", "OSSL_LIB_CTX_free", "library_context", "ret"], "callee_func": ["OSSL_LIB_CTX_new", "fprintf", "EVP_MAC_fetch", "fprintf", "EVP_MAC_CTX_new", "fprintf", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_end", "EVP_MAC_init", "fprintf", "EVP_MAC_update", "fprintf", "EVP_MAC_final", "fprintf", "OPENSSL_malloc", "fprintf", "EVP_MAC_final", "fprintf", "printf", "BIO_dump_indent_fp", "putchar", "fprintf", "CRYPTO_memcmp", "fprintf", "ERR_print_errors_fp", "OPENSSL_free", "EVP_MAC_CTX_free", "EVP_MAC_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "0f97a77ae077fe579f5232021330ba8b"}]}, {"file_hash": "ea8cc81af8f75ef725d25364f989cff0", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/cms/cms_comp.c", "file_name": "cms_comp.c", "function_list": [{"line_start": 15, "line_stop": 64, "function_name": "main", "file_path": "cms/cms_comp.c", "line_of_code": 27, "operators": ["*", "=", ",", "*", "=", ";", "*", "=", ";", "int", "=", ";", "int", "=", ";", "(", ")", ";", "(", ")", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ")", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "in", "NULL", "out", "NULL", "CMS_ContentInfo", "cms", "NULL", "ret", "EXIT_FAILURE", "flags", "CMS_STREAM", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "in", "BIO_new_file", "\"comp.txt\"", "\"r\"", "in", "err", "cms", "CMS_compress", "in", "NID_zlib_compression", "flags", "cms", "err", "out", "BIO_new_file", "\"smcomp.txt\"", "\"w\"", "out", "err", "SMIME_write_CMS", "out", "cms", "in", "flags", "err", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "fprintf", "stderr", "\"Error Compressing Data\\n\"", "ERR_print_errors_fp", "stderr", "CMS_ContentInfo_free", "cms", "BIO_free", "in", "BIO_free", "out", "ret"], "callee_func": ["OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "BIO_new_file", "CMS_compress", "BIO_new_file", "SMIME_write_CMS", "fprintf", "ERR_print_errors_fp", "CMS_ContentInfo_free", "BIO_free", "BIO_free"], "function_normalized_hash": "076dc3fe106e124cd9955f4b4a7f0903"}]}, {"file_hash": "ac72b9742ab1814a170c6685f096aef8", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/signature/EVP_DSA_Signature_demo.c", "file_name": "EVP_DSA_Signature_demo.c", "function_list": [{"line_start": 46, "line_stop": 81, "function_name": "generate_dsa_params", "file_path": "signature/EVP_DSA_Signature_demo.c", "line_of_code": 26, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "(", ")", "<=", ")", "goto", ";", "if", "(", "(", ",", ")", "<=", ")", "goto", ";", "if", "(", "(", ",", "&", ")", "<=", ")", "goto", ";", "if", "(", "==", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ")", ";", "=", ";", "}", "(", ")", ";", "*", "=", ";", "(", ",", ")", ";", "(", ",", ",", ",", ")", ";", "(", ",", ")", ";", "return", ";"], "operands": ["ret", "0", "EVP_PKEY_CTX", "pkey_ctx", "NULL", "EVP_PKEY", "params", "NULL", "pkey_ctx", "EVP_PKEY_CTX_new_from_name", "libctx", "ALG", "PROPQUERY", "pkey_ctx", "NULL", "end", "EVP_PKEY_paramgen_init", "pkey_ctx", "0", "end", "EVP_PKEY_CTX_set_dsa_paramgen_bits", "pkey_ctx", "NUMBITS", "0", "end", "EVP_PKEY_paramgen", "pkey_ctx", "params", "0", "end", "params", "NULL", "end", "ret", "1", "end", "ret", "1", "EVP_PKEY_free", "params", "params", "NULL", "EVP_PKEY_CTX_free", "pkey_ctx", "p_params", "params", "fprintf", "stdout", "\"Params:\\n\"", "EVP_PKEY_print_params_fp", "stdout", "params", "4", "NULL", "fprintf", "stdout", "\"\\n\"", "ret"], "callee_func": ["EVP_PKEY_CTX_new_from_name", "EVP_PKEY_paramgen_init", "EVP_PKEY_CTX_set_dsa_paramgen_bits", "EVP_PKEY_paramgen", "EVP_PKEY_free", "EVP_PKEY_CTX_free", "fprintf", "EVP_PKEY_print_params_fp", "fprintf"], "function_normalized_hash": "54506c972fbeb8ed0efeab3d8fa1b6f9"}, {"line_start": 83, "line_stop": 121, "function_name": "generate_dsa_key", "file_path": "signature/EVP_DSA_Signature_demo.c", "line_of_code": 29, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "(", ")", "<=", ")", "goto", ";", "if", "(", "(", ",", "&", ")", "<=", ")", "goto", ";", "if", "(", "==", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ")", ";", "=", ";", "}", "(", ")", ";", "*", "=", ";", "(", ",", ")", ";", "(", ",", ",", ",", ")", ";", "(", ",", ")", ";", "(", ",", ",", ",", ")", ";", "(", ",", ")", ";", "(", ",", ",", ",", ")", ";", "(", ",", ")", ";", "return", ";"], "operands": ["ret", "0", "EVP_PKEY_CTX", "ctx", "NULL", "EVP_PKEY", "pkey", "NULL", "ctx", "EVP_PKEY_CTX_new_from_pkey", "libctx", "params", "NULL", "ctx", "NULL", "end", "EVP_PKEY_keygen_init", "ctx", "0", "end", "EVP_PKEY_keygen", "ctx", "pkey", "0", "end", "pkey", "NULL", "end", "ret", "1", "end", "ret", "1", "EVP_PKEY_free", "pkey", "pkey", "NULL", "EVP_PKEY_CTX_free", "ctx", "p_pkey", "pkey", "fprintf", "stdout", "\"Generating public/private key pair:\\n\"", "EVP_PKEY_print_public_fp", "stdout", "pkey", "4", "NULL", "fprintf", "stdout", "\"\\n\"", "EVP_PKEY_print_private_fp", "stdout", "pkey", "4", "NULL", "fprintf", "stdout", "\"\\n\"", "EVP_PKEY_print_params_fp", "stdout", "pkey", "4", "NULL", "fprintf", "stdout", "\"\\n\"", "ret"], "callee_func": ["EVP_PKEY_CTX_new_from_pkey", "EVP_PKEY_keygen_init", "EVP_PKEY_keygen", "EVP_PKEY_free", "EVP_PKEY_CTX_free", "fprintf", "EVP_PKEY_print_public_fp", "fprintf", "EVP_PKEY_print_private_fp", "fprintf", "EVP_PKEY_print_params_fp", "fprintf"], "function_normalized_hash": "b137eadaae55a607101f750017db8e57"}, {"line_start": 123, "line_stop": 141, "function_name": "extract_public_key", "file_path": "signature/EVP_DSA_Signature_demo.c", "line_of_code": 12, "operators": ["int", "=", ";", "*", "=", ";", "if", "(", "(", ",", ",", "&", ")", "!=", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ")", ";", "=", ";", "}", "*", "=", ";", "return", ";"], "operands": ["ret", "0", "OSSL_PARAM", "public_key", "NULL", "EVP_PKEY_todata", "pkey", "EVP_PKEY_PUBLIC_KEY", "public_key", "1", "end", "ret", "1", "end", "ret", "1", "OSSL_PARAM_free", "public_key", "public_key", "NULL", "p_public_key", "public_key", "ret"], "callee_func": ["EVP_PKEY_todata", "OSSL_PARAM_free"], "function_normalized_hash": "6149b30aa6326ea1532421460f99a4c8"}, {"line_start": 143, "line_stop": 161, "function_name": "extract_keypair", "file_path": "signature/EVP_DSA_Signature_demo.c", "line_of_code": 12, "operators": ["int", "=", ";", "*", "=", ";", "if", "(", "(", ",", ",", "&", ")", "!=", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ")", ";", "=", ";", "}", "*", "=", ";", "return", ";"], "operands": ["ret", "0", "OSSL_PARAM", "keypair", "NULL", "EVP_PKEY_todata", "pkey", "EVP_PKEY_KEYPAIR", "keypair", "1", "end", "ret", "1", "end", "ret", "1", "OSSL_PARAM_free", "keypair", "keypair", "NULL", "p_keypair", "keypair", "ret"], "callee_func": ["EVP_PKEY_todata", "OSSL_PARAM_free"], "function_normalized_hash": "37f7374d9934e8a81aef3c22c2e14e99"}, {"line_start": 163, "line_stop": 226, "function_name": "demo_sign", "file_path": "signature/EVP_DSA_Signature_demo.c", "line_of_code": 47, "operators": ["int", "=", ";", "=", ";", "unsigned", "char", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "(", ")", "!=", ")", "goto", ";", "if", "(", "(", ",", "&", ",", ",", ")", "!=", ")", "goto", ";", "=", "(", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "(", ",", ",", ",", ",", ",", ",", ")", "!=", ")", "goto", ";", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "goto", ";", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "goto", ";", "if", "(", "(", ",", ",", "&", ")", "!=", ")", "goto", ";", "if", "(", "==", ")", "goto", ";", "=", "(", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "(", ",", ",", "&", ")", "!=", ")", "goto", ";", "=", ";", ":", "(", ")", ";", "if", "(", "!=", ")", "{", "(", ")", ";", "=", ";", "=", ";", "}", "*", "=", ";", "*", "=", ";", "(", ")", ";", "(", ")", ";", "(", ",", ")", ";", "(", ",", ",", ",", ")", ";", "(", ",", ")", ";", "return", ";"], "operands": ["ret", "0", "size_t", "sig_len", "0", "sig_value", "NULL", "EVP_MD_CTX", "ctx", "NULL", "EVP_PKEY_CTX", "pkey_ctx", "NULL", "EVP_PKEY", "pkey", "NULL", "pkey_ctx", "EVP_PKEY_CTX_new_from_name", "libctx", "ALG", "PROPQUERY", "pkey_ctx", "NULL", "end", "EVP_PKEY_fromdata_init", "pkey_ctx", "1", "end", "EVP_PKEY_fromdata", "pkey_ctx", "pkey", "EVP_PKEY_KEYPAIR", "keypair", "1", "end", "ctx", "EVP_MD_CTX_create", "ctx", "NULL", "end", "EVP_DigestSignInit_ex", "ctx", "NULL", "DIGEST", "libctx", "NULL", "pkey", "NULL", "1", "end", "EVP_DigestSignUpdate", "ctx", "hamlet_1", "hamlet_1", "1", "end", "EVP_DigestSignUpdate", "ctx", "hamlet_2", "hamlet_2", "1", "end", "EVP_DigestSignFinal", "ctx", "NULL", "sig_len", "1", "end", "sig_len", "0", "end", "sig_value", "OPENSSL_malloc", "sig_len", "sig_value", "NULL", "end", "EVP_DigestSignFinal", "ctx", "sig_value", "sig_len", "1", "end", "ret", "1", "end", "EVP_MD_CTX_free", "ctx", "ret", "1", "OPENSSL_free", "sig_value", "sig_len", "0", "sig_value", "NULL", "p_sig_len", "sig_len", "p_sig_value", "sig_value", "EVP_PKEY_free", "pkey", "EVP_PKEY_CTX_free", "pkey_ctx", "fprintf", "stdout", "\"Generating signature:\\n\"", "BIO_dump_indent_fp", "stdout", "sig_value", "sig_len", "2", "fprintf", "stdout", "\"\\n\"", "ret"], "callee_func": ["EVP_PKEY_CTX_new_from_name", "EVP_PKEY_fromdata_init", "EVP_PKEY_fromdata", "EVP_MD_CTX_create", "EVP_DigestSignInit_ex", "EVP_DigestSignUpdate", "EVP_DigestSignUpdate", "EVP_DigestSignFinal", "OPENSSL_malloc", "EVP_DigestSignFinal", "EVP_MD_CTX_free", "OPENSSL_free", "EVP_PKEY_free", "EVP_PKEY_CTX_free", "fprintf", "BIO_dump_indent_fp", "fprintf"], "function_normalized_hash": "beb9271b90c155a66b6500647d746483"}, {"line_start": 228, "line_stop": 267, "function_name": "demo_verify", "file_path": "signature/EVP_DSA_Signature_demo.c", "line_of_code": 28, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "(", ")", "!=", ")", "goto", ";", "if", "(", "(", ",", "&", ",", ",", ")", "!=", ")", "goto", ";", "=", "(", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "(", ",", ",", ",", ",", ",", ",", ")", "!=", ")", "goto", ";", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "goto", ";", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "goto", ";", "if", "(", "(", ",", ",", ")", "!=", ")", "goto", ";", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "EVP_MD_CTX", "ctx", "NULL", "EVP_PKEY_CTX", "pkey_ctx", "NULL", "EVP_PKEY", "pkey", "NULL", "pkey_ctx", "EVP_PKEY_CTX_new_from_name", "libctx", "ALG", "PROPQUERY", "pkey_ctx", "NULL", "end", "EVP_PKEY_fromdata_init", "pkey_ctx", "1", "end", "EVP_PKEY_fromdata", "pkey_ctx", "pkey", "EVP_PKEY_PUBLIC_KEY", "public_key", "1", "end", "ctx", "EVP_MD_CTX_create", "ctx", "NULL", "end", "EVP_DigestVerifyInit_ex", "ctx", "NULL", "DIGEST", "libctx", "NULL", "pkey", "NULL", "1", "end", "EVP_DigestVerifyUpdate", "ctx", "hamlet_1", "hamlet_1", "1", "end", "EVP_DigestVerifyUpdate", "ctx", "hamlet_2", "hamlet_2", "1", "end", "EVP_DigestVerifyFinal", "ctx", "sig_value", "sig_len", "1", "end", "ret", "1", "end", "EVP_PKEY_free", "pkey", "EVP_PKEY_CTX_free", "pkey_ctx", "EVP_MD_CTX_free", "ctx", "ret"], "callee_func": ["EVP_PKEY_CTX_new_from_name", "EVP_PKEY_fromdata_init", "EVP_PKEY_fromdata", "EVP_MD_CTX_create", "EVP_DigestVerifyInit_ex", "EVP_DigestVerifyUpdate", "EVP_DigestVerifyUpdate", "EVP_DigestVerifyFinal", "EVP_PKEY_free", "EVP_PKEY_CTX_free", "EVP_MD_CTX_free"], "function_normalized_hash": "fbe4d62d191e53761131483ea508008e"}, {"line_start": 269, "line_stop": 317, "function_name": "main", "file_path": "signature/EVP_DSA_Signature_demo.c", "line_of_code": 34, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "=", ";", "unsigned", "char", "*", "=", ";", "=", "(", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "(", ",", "&", ")", "!=", ")", "goto", ";", "if", "(", "(", ",", ",", "&", ")", "!=", ")", "goto", ";", "if", "(", "(", ",", "&", ")", "!=", ")", "goto", ";", "if", "(", "(", ",", "&", ")", "!=", ")", "goto", ";", "if", "(", "(", ",", "&", ",", "&", ",", ")", "!=", ")", "goto", ";", "if", "(", "(", ",", ",", ",", ")", "!=", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "OSSL_LIB_CTX", "libctx", "NULL", "EVP_PKEY", "params", "NULL", "EVP_PKEY", "pkey", "NULL", "OSSL_PARAM", "public_key", "NULL", "OSSL_PARAM", "keypair", "NULL", "size_t", "sig_len", "0", "sig_value", "NULL", "libctx", "OSSL_LIB_CTX_new", "libctx", "NULL", "end", "generate_dsa_params", "libctx", "params", "1", "end", "generate_dsa_key", "libctx", "params", "pkey", "1", "end", "extract_public_key", "pkey", "public_key", "1", "end", "extract_keypair", "pkey", "keypair", "1", "end", "demo_sign", "libctx", "sig_len", "sig_value", "keypair", "1", "end", "demo_verify", "libctx", "sig_len", "sig_value", "public_key", "1", "end", "ret", "EXIT_SUCCESS", "end", "ret", "EXIT_SUCCESS", "ERR_print_errors_fp", "stderr", "OPENSSL_free", "sig_value", "EVP_PKEY_free", "params", "EVP_PKEY_free", "pkey", "OSSL_PARAM_free", "public_key", "OSSL_PARAM_free", "keypair", "OSSL_LIB_CTX_free", "libctx", "ret"], "callee_func": ["OSSL_LIB_CTX_new", "generate_dsa_params", "generate_dsa_key", "extract_public_key", "extract_keypair", "demo_sign", "demo_verify", "ERR_print_errors_fp", "OPENSSL_free", "EVP_PKEY_free", "EVP_PKEY_free", "OSSL_PARAM_free", "OSSL_PARAM_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "d5b8fbfc2fdeed0ddbf1727e04942c4c"}]}, {"file_hash": "fc261d03cc0a5740175391ea34350f8a", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/pkey/EVP_PKEY_DSA_paramgen.c", "file_name": "EVP_PKEY_DSA_paramgen.c", "function_list": [{"line_start": 18, "line_stop": 66, "function_name": "main", "file_path": "pkey/EVP_PKEY_DSA_paramgen.c", "line_of_code": 35, "operators": ["int", "=", ";", "*", "=", ";", "const", "char", "*", "=", ";", "*", "=", ";", "*", "=", ";", "[", "]", ";", "unsigned", "int", "=", ";", "unsigned", "int", "=", ";", "int", "=", ";", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "[", "]", "=", "(", ",", ",", ")", ";", "[", "]", "=", "(", ",", "&", ")", ";", "[", "]", "=", "(", ",", "&", ")", ";", "[", "]", "=", "(", ",", "&", ")", ";", "[", "]", "=", "(", ",", ",", ")", ";", "[", "]", "=", "(", ",", ",", ")", ";", "[", "]", "=", "(", ")", ";", "if", "(", "(", ")", "<=", "||", "(", ",", ")", "<=", "||", "(", ",", "&", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", ",", ")", ")", "goto", ";", "=", ";", ":", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "OSSL_LIB_CTX", "libctx", "NULL", "propq", "NULL", "EVP_PKEY_CTX", "ctx", "NULL", "EVP_PKEY", "dsaparamkey", "NULL", "OSSL_PARAM", "params", "7", "pbits", "2048", "qbits", "256", "gindex", "42", "ctx", "EVP_PKEY_CTX_new_from_name", "libctx", "\"DSA\"", "propq", "ctx", "NULL", "cleanup", "params", "0", "OSSL_PARAM_construct_utf8_string", "OSSL_PKEY_PARAM_FFC_TYPE", "\"fips186_4\"", "0", "params", "1", "OSSL_PARAM_construct_uint", "OSSL_PKEY_PARAM_FFC_PBITS", "pbits", "params", "2", "OSSL_PARAM_construct_uint", "OSSL_PKEY_PARAM_FFC_QBITS", "qbits", "params", "3", "OSSL_PARAM_construct_int", "OSSL_PKEY_PARAM_FFC_GINDEX", "gindex", "params", "4", "OSSL_PARAM_construct_utf8_string", "OSSL_PKEY_PARAM_FFC_DIGEST", "\"SHA384\"", "0", "params", "5", "OSSL_PARAM_construct_utf8_string", "OSSL_PKEY_PARAM_FFC_DIGEST_PROPS", "\"provider=default\"", "0", "params", "6", "OSSL_PARAM_construct_end", "EVP_PKEY_paramgen_init", "ctx", "0", "EVP_PKEY_CTX_set_params", "ctx", "params", "0", "EVP_PKEY_paramgen", "ctx", "dsaparamkey", "0", "fprintf", "stderr", "\"DSA paramgen failed\\n\"", "cleanup", "dsa_print_key", "dsaparamkey", "0", "libctx", "propq", "cleanup", "ret", "EXIT_SUCCESS", "cleanup", "EVP_PKEY_free", "dsaparamkey", "EVP_PKEY_CTX_free", "ctx", "ret"], "callee_func": ["EVP_PKEY_CTX_new_from_name", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_uint", "OSSL_PARAM_construct_uint", "OSSL_PARAM_construct_int", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_end", "EVP_PKEY_paramgen_init", "EVP_PKEY_CTX_set_params", "EVP_PKEY_paramgen", "fprintf", "dsa_print_key", "EVP_PKEY_free", "EVP_PKEY_CTX_free"], "function_normalized_hash": "ae304ca96c60640c1cfd97305ae60621"}]}, {"file_hash": "bc27064652f203a88df26294e69dbd7b", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/cms/cms_dec.c", "file_name": "cms_dec.c", "function_list": [{"line_start": 15, "line_stop": 77, "function_name": "main", "file_path": "cms/cms_dec.c", "line_of_code": 39, "operators": ["*", "=", ",", "*", "=", ",", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "int", "=", ";", "(", ")", ";", "(", ")", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ")", ";", "(", ")", ";", "=", "(", ",", ",", ",", ")", ";", "if", "(", "!", "||", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ",", ",", ")", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "in", "NULL", "out", "NULL", "tbio", "NULL", "X509", "rcert", "NULL", "EVP_PKEY", "rkey", "NULL", "CMS_ContentInfo", "cms", "NULL", "ret", "EXIT_FAILURE", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "tbio", "BIO_new_file", "\"signer.pem\"", "\"r\"", "tbio", "err", "rcert", "PEM_read_bio_X509", "tbio", "NULL", "0", "NULL", "BIO_reset", "tbio", "rkey", "PEM_read_bio_PrivateKey", "tbio", "NULL", "0", "NULL", "rcert", "rkey", "err", "in", "BIO_new_file", "\"smencr.txt\"", "\"r\"", "in", "err", "cms", "SMIME_read_CMS", "in", "NULL", "cms", "err", "out", "BIO_new_file", "\"decout.txt\"", "\"w\"", "out", "err", "CMS_decrypt", "cms", "rkey", "rcert", "NULL", "out", "0", "err", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "fprintf", "stderr", "\"Error Decrypting Data\\n\"", "ERR_print_errors_fp", "stderr", "CMS_ContentInfo_free", "cms", "X509_free", "rcert", "EVP_PKEY_free", "rkey", "BIO_free", "in", "BIO_free", "out", "BIO_free", "tbio", "ret"], "callee_func": ["OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "BIO_new_file", "PEM_read_bio_X509", "BIO_reset", "PEM_read_bio_PrivateKey", "BIO_new_file", "SMIME_read_CMS", "BIO_new_file", "CMS_decrypt", "fprintf", "ERR_print_errors_fp", "CMS_ContentInfo_free", "X509_free", "EVP_PKEY_free", "BIO_free", "BIO_free", "BIO_free"], "function_normalized_hash": "95e2b47dd4597fcc3f37a6d8f6adf795"}]}, {"file_hash": "47e591d1542a09288a3742e8564dde92", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/cms/cms_ver.c", "file_name": "cms_ver.c", "function_list": [{"line_start": 15, "line_stop": 85, "function_name": "main", "file_path": "cms/cms_ver.c", "line_of_code": 45, "operators": ["*", "=", ",", "*", "=", ",", "*", "=", ",", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "int", "=", ";", "(", ")", ";", "(", ")", ";", "=", "(", ")", ";", "if", "(", "==", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "=", "(", ",", ",", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "!", "(", ",", ")", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "=", "(", ",", "&", ")", ";", "if", "(", "==", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ",", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ",", ")", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "in", "NULL", "out", "NULL", "tbio", "NULL", "cont", "NULL", "X509_STORE", "st", "NULL", "X509", "cacert", "NULL", "CMS_ContentInfo", "cms", "NULL", "ret", "EXIT_FAILURE", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "st", "X509_STORE_new", "st", "NULL", "err", "tbio", "BIO_new_file", "\"cacert.pem\"", "\"r\"", "tbio", "NULL", "err", "cacert", "PEM_read_bio_X509", "tbio", "NULL", "0", "NULL", "cacert", "NULL", "err", "X509_STORE_add_cert", "st", "cacert", "err", "in", "BIO_new_file", "\"smout.txt\"", "\"r\"", "in", "NULL", "err", "cms", "SMIME_read_CMS", "in", "cont", "cms", "NULL", "err", "out", "BIO_new_file", "\"smver.txt\"", "\"w\"", "out", "NULL", "err", "CMS_verify", "cms", "NULL", "st", "cont", "out", "0", "fprintf", "stderr", "\"Verification Failure\\n\"", "err", "fprintf", "stderr", "\"Verification Successful\\n\"", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "fprintf", "stderr", "\"Error Verifying Data\\n\"", "ERR_print_errors_fp", "stderr", "X509_STORE_free", "st", "CMS_ContentInfo_free", "cms", "X509_free", "cacert", "BIO_free", "in", "BIO_free", "out", "BIO_free", "tbio", "ret"], "callee_func": ["OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "X509_STORE_new", "BIO_new_file", "PEM_read_bio_X509", "X509_STORE_add_cert", "BIO_new_file", "SMIME_read_CMS", "BIO_new_file", "CMS_verify", "fprintf", "fprintf", "fprintf", "ERR_print_errors_fp", "X509_STORE_free", "CMS_ContentInfo_free", "X509_free", "BIO_free", "BIO_free", "BIO_free"], "function_normalized_hash": "d917824ae2b27350e357a54383efae03"}]}, {"file_hash": "543457f7dc9ca1ea70430ab11557502b", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/bio/client-arg.c", "file_name": "client-arg.c", "function_list": [{"line_start": 14, "line_stop": 110, "function_name": "main", "file_path": "bio/client-arg.c", "line_of_code": 73, "operators": ["*", "=", ",", "*", "=", ";", "int", ";", "char", "[", "]", ";", "*", ";", "*", ";", "*", ";", "char", "*", "*", "=", "+", ";", "const", "char", "*", "=", ";", "int", "=", "-", ";", "int", "=", ";", "=", "(", "(", ")", ")", ";", "=", "(", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "while", "(", "*", "&&", "*", "*", "==", ")", "{", "int", ";", "=", "(", ",", "&", ",", "&", ")", ";", "if", "(", "==", "-", ")", "{", "(", ",", ",", "*", ")", ";", "goto", ";", "}", "if", "(", "<", ")", "{", "(", ",", ",", "*", ")", ";", "(", ")", ";", "goto", ";", "}", "if", "(", ">", ")", "continue", ";", "if", "(", "(", "*", ",", ")", "==", ")", "{", "=", "[", "]", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "+=", ";", "-=", ";", "continue", ";", "}", "else", "{", "(", ",", ",", "*", ")", ";", "goto", ";", "}", "}", "if", "(", "!", "(", ")", ")", "{", "(", ",", ")", ";", "(", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "(", ",", "&", ")", ";", "if", "(", "!", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ",", ")", ";", "=", "(", ",", ")", ";", "if", "(", "(", ")", "<=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "goto", ";", "}", "(", ",", ")", ";", "for", "(", ";", ";", ")", "{", "=", "(", ",", ",", ")", ";", "if", "(", "<=", ")", "break", ";", "(", ",", ",", ")", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "sbio", "NULL", "out", "NULL", "len", "tmpbuf", "1024", "SSL_CTX", "ctx", "SSL_CONF_CTX", "cctx", "SSL", "ssl", "args", "argv", "1", "connect_str", "\"localhost:4433\"", "nargs", "argc", "1", "ret", "EXIT_FAILURE", "ctx", "SSL_CTX_new", "TLS_client_method", "cctx", "SSL_CONF_CTX_new", "SSL_CONF_CTX_set_flags", "cctx", "SSL_CONF_FLAG_CLIENT", "SSL_CONF_CTX_set_ssl_ctx", "cctx", "ctx", "args", "args", "'-'", "rv", "rv", "SSL_CONF_cmd_argv", "cctx", "nargs", "args", "rv", "3", "fprintf", "stderr", "\"Missing argument for %s\\n\"", "args", "end", "rv", "0", "fprintf", "stderr", "\"Error in command %s\\n\"", "args", "ERR_print_errors_fp", "stderr", "end", "rv", "0", "strcmp", "args", "\"-connect\"", "0", "connect_str", "args", "1", "connect_str", "NULL", "fprintf", "stderr", "\"Missing -connect argument\\n\"", "end", "args", "2", "nargs", "2", "fprintf", "stderr", "\"Unknown argument %s\\n\"", "args", "end", "SSL_CONF_CTX_finish", "cctx", "fprintf", "stderr", "\"Finish error\\n\"", "ERR_print_errors_fp", "stderr", "end", "sbio", "BIO_new_ssl_connect", "ctx", "BIO_get_ssl", "sbio", "ssl", "ssl", "fprintf", "stderr", "\"Can't locate SSL pointer\\n\"", "end", "BIO_set_conn_hostname", "sbio", "connect_str", "out", "BIO_new_fp", "stdout", "BIO_NOCLOSE", "BIO_do_connect", "sbio", "0", "fprintf", "stderr", "\"Error connecting to server\\n\"", "ERR_print_errors_fp", "stderr", "end", "BIO_puts", "sbio", "\"GET / HTTP/1.0\\n\\n\"", "len", "BIO_read", "sbio", "tmpbuf", "1024", "len", "0", "BIO_write", "out", "tmpbuf", "len", "ret", "EXIT_SUCCESS", "end", "SSL_CONF_CTX_free", "cctx", "BIO_free_all", "sbio", "BIO_free", "out", "ret"], "callee_func": ["SSL_CTX_new", "TLS_client_method", "SSL_CONF_CTX_new", "SSL_CONF_CTX_set_flags", "SSL_CONF_CTX_set_ssl_ctx", "SSL_CONF_cmd_argv", "fprintf", "fprintf", "ERR_print_errors_fp", "strcmp", "fprintf", "fprintf", "SSL_CONF_CTX_finish", "fprintf", "ERR_print_errors_fp", "BIO_new_ssl_connect", "BIO_get_ssl", "fprintf", "BIO_set_conn_hostname", "BIO_new_fp", "BIO_do_connect", "fprintf", "ERR_print_errors_fp", "BIO_puts", "BIO_read", "BIO_write", "SSL_CONF_CTX_free", "BIO_free_all", "BIO_free"], "function_normalized_hash": "7fdae8451508cabc76fcfcb40c23d929"}]}, {"file_hash": "5ebb68b96c9772ce20daf96b10b03295", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/digest/EVP_MD_xof.c", "file_name": "EVP_MD_xof.c", "function_list": [{"line_start": 44, "line_stop": 132, "function_name": "main", "file_path": "digest/EVP_MD_xof.c", "line_of_code": 57, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "unsigned", "int", "=", ";", "int", ";", "unsigned", "char", "*", "=", ";", "if", "(", ">", ")", "{", "=", "(", "[", "]", ")", ";", "if", "(", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", "unsigned", "int", ")", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ")", ";", "(", ",", ",", ",", ")", ";", "if", "(", "==", ")", "{", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "OSSL_LIB_CTX", "libctx", "NULL", "EVP_MD", "md", "NULL", "EVP_MD_CTX", "ctx", "NULL", "digest_len", "20", "digest_len_i", "digest", "NULL", "argc", "1", "digest_len_i", "atoi", "argv", "1", "digest_len_i", "0", "fprintf", "stderr", "\"Specify a non-negative digest length\\n\"", "end", "digest_len", "digest_len_i", "md", "EVP_MD_fetch", "libctx", "\"SHAKE256\"", "propq", "md", "NULL", "fprintf", "stderr", "\"Failed to retrieve SHAKE256 algorithm\\n\"", "end", "ctx", "EVP_MD_CTX_new", "ctx", "NULL", "fprintf", "stderr", "\"Failed to create digest context\\n\"", "end", "EVP_DigestInit", "ctx", "md", "0", "fprintf", "stderr", "\"Failed to initialize digest\\n\"", "end", "EVP_DigestUpdate", "ctx", "message", "message", "0", "fprintf", "stderr", "\"Failed to hash input message\\n\"", "end", "digest", "OPENSSL_malloc", "digest_len", "digest", "NULL", "fprintf", "stderr", "\"Failed to allocate memory for digest\\n\"", "end", "EVP_DigestFinalXOF", "ctx", "digest", "digest_len", "0", "fprintf", "stderr", "\"Failed to finalize hash\\n\"", "end", "printf", "\"Output digest:\\n\"", "BIO_dump_indent_fp", "stdout", "digest", "digest_len", "2", "digest_len", "20", "CRYPTO_memcmp", "digest", "known_answer", "known_answer", "0", "fprintf", "stderr", "\"Output does not match expected result\\n\"", "end", "ret", "EXIT_SUCCESS", "end", "OPENSSL_free", "digest", "EVP_MD_CTX_free", "ctx", "EVP_MD_free", "md", "OSSL_LIB_CTX_free", "libctx", "ret"], "callee_func": ["atoi", "fprintf", "EVP_MD_fetch", "fprintf", "EVP_MD_CTX_new", "fprintf", "EVP_DigestInit", "fprintf", "EVP_DigestUpdate", "fprintf", "OPENSSL_malloc", "fprintf", "EVP_DigestFinalXOF", "fprintf", "printf", "BIO_dump_indent_fp", "CRYPTO_memcmp", "fprintf", "OPENSSL_free", "EVP_MD_CTX_free", "EVP_MD_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "419904c1cea61d4be14e0d7b655d4f41"}]}, {"file_hash": "b54cf03d9e57aacb056735ccc68e73bd", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/cms/cms_uncomp.c", "file_name": "cms_uncomp.c", "function_list": [{"line_start": 15, "line_stop": 56, "function_name": "main", "file_path": "cms/cms_uncomp.c", "line_of_code": 26, "operators": ["*", "=", ",", "*", "=", ";", "*", "=", ";", "int", "=", ";", "(", ")", ";", "(", ")", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ")", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "in", "NULL", "out", "NULL", "CMS_ContentInfo", "cms", "NULL", "ret", "EXIT_FAILURE", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "in", "BIO_new_file", "\"smcomp.txt\"", "\"r\"", "in", "err", "cms", "SMIME_read_CMS", "in", "NULL", "cms", "err", "out", "BIO_new_file", "\"smuncomp.txt\"", "\"w\"", "out", "err", "CMS_uncompress", "cms", "out", "NULL", "0", "err", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "fprintf", "stderr", "\"Error Uncompressing Data\\n\"", "ERR_print_errors_fp", "stderr", "CMS_ContentInfo_free", "cms", "BIO_free", "in", "BIO_free", "out", "ret"], "callee_func": ["OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "BIO_new_file", "SMIME_read_CMS", "BIO_new_file", "CMS_uncompress", "fprintf", "ERR_print_errors_fp", "CMS_ContentInfo_free", "BIO_free", "BIO_free"], "function_normalized_hash": "7b42eff326a793aa5c668de757acdfb1"}]}, {"file_hash": "d4ecd2754f3ccd13ee9105c07ac6faee", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/mac/gmac.c", "file_name": "gmac.c", "function_list": [{"line_start": 58, "line_stop": 145, "function_name": "main", "file_path": "mac/gmac.c", "line_of_code": 61, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "unsigned", "char", "[", "]", ";", "[", "]", ",", "*", "=", ";", "*", "=", ";", "=", ";", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "*", "++", "=", "(", ",", ",", ")", ";", "if", "(", "!=", ")", "*", "++", "=", "(", ",", ",", ")", ";", "*", "++", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "*", "=", "(", ")", ";", "if", "(", "!", "(", ",", ",", "sizeof", "(", ")", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "sizeof", "(", ")", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "&", ",", "sizeof", "(", ")", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ")", ";", "(", ",", ",", ",", ")", ";", "(", ")", ";", "if", "(", "!=", "sizeof", "(", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "if", "(", "!=", ")", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "EVP_MAC", "mac", "NULL", "EVP_MAC_CTX", "mctx", "NULL", "out", "16", "OSSL_PARAM", "params", "4", "p", "params", "OSSL_LIB_CTX", "library_context", "NULL", "size_t", "out_len", "0", "library_context", "OSSL_LIB_CTX_new", "library_context", "NULL", "fprintf", "stderr", "\"OSSL_LIB_CTX_new() returned NULL\\n\"", "end", "mac", "EVP_MAC_fetch", "library_context", "\"GMAC\"", "propq", "mac", "NULL", "fprintf", "stderr", "\"EVP_MAC_fetch() returned NULL\\n\"", "end", "mctx", "EVP_MAC_CTX_new", "mac", "mctx", "NULL", "fprintf", "stderr", "\"EVP_MAC_CTX_new() returned NULL\\n\"", "end", "p", "OSSL_PARAM_construct_utf8_string", "OSSL_MAC_PARAM_CIPHER", "\"AES-128-GCM\"", "0", "propq", "NULL", "p", "OSSL_PARAM_construct_utf8_string", "OSSL_MAC_PARAM_PROPERTIES", "propq", "0", "p", "OSSL_PARAM_construct_octet_string", "OSSL_CIPHER_PARAM_IV", "iv", "iv", "p", "OSSL_PARAM_construct_end", "EVP_MAC_init", "mctx", "key", "key", "params", "fprintf", "stderr", "\"EVP_MAC_init() failed\\n\"", "end", "EVP_MAC_update", "mctx", "data", "data", "fprintf", "stderr", "\"EVP_MAC_update() failed\\n\"", "end", "EVP_MAC_final", "mctx", "out", "out_len", "out", "fprintf", "stderr", "\"EVP_MAC_final() failed\\n\"", "end", "printf", "\"Generated MAC:\\n\"", "BIO_dump_indent_fp", "stdout", "out", "out_len", "2", "putchar", "'\\n'", "out_len", "expected_output", "fprintf", "stderr", "\"Generated MAC has an unexpected length\\n\"", "end", "CRYPTO_memcmp", "expected_output", "out", "expected_output", "0", "fprintf", "stderr", "\"Generated MAC does not match expected value\\n\"", "end", "ret", "EXIT_SUCCESS", "end", "EVP_MAC_CTX_free", "mctx", "EVP_MAC_free", "mac", "OSSL_LIB_CTX_free", "library_context", "ret", "EXIT_SUCCESS", "ERR_print_errors_fp", "stderr", "ret"], "callee_func": ["OSSL_LIB_CTX_new", "fprintf", "EVP_MAC_fetch", "fprintf", "EVP_MAC_CTX_new", "fprintf", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_octet_string", "OSSL_PARAM_construct_end", "EVP_MAC_init", "fprintf", "EVP_MAC_update", "fprintf", "EVP_MAC_final", "fprintf", "printf", "BIO_dump_indent_fp", "putchar", "fprintf", "CRYPTO_memcmp", "fprintf", "EVP_MAC_CTX_free", "EVP_MAC_free", "OSSL_LIB_CTX_free", "ERR_print_errors_fp"], "function_normalized_hash": "7f9fae0517609bc94ac0646e1d43c794"}]}, {"file_hash": "09bffcc3c72a6f9bec575e969651292a", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/pkey/EVP_PKEY_RSA_keygen.c", "file_name": "EVP_PKEY_RSA_keygen.c", "function_list": [{"line_start": 35, "line_stop": 97, "function_name": "generate_rsa_key_long", "file_path": "pkey/EVP_PKEY_RSA_keygen.c", "line_of_code": 28, "operators": ["*", "=", ";", "*", "=", ";", "unsigned", "int", "=", ";", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ",", ")", ";", "if", "(", "(", ",", "&", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", ":", "(", ")", ";", "return", ";"], "operands": ["EVP_PKEY_CTX", "genctx", "NULL", "EVP_PKEY", "pkey", "NULL", "primes", "2", "genctx", "EVP_PKEY_CTX_new_from_name", "libctx", "\"RSA\"", "propq", "genctx", "NULL", "fprintf", "stderr", "\"EVP_PKEY_CTX_new_from_name() failed\\n\"", "cleanup", "EVP_PKEY_keygen_init", "genctx", "0", "fprintf", "stderr", "\"EVP_PKEY_keygen_init() failed\\n\"", "cleanup", "EVP_PKEY_CTX_set_rsa_keygen_bits", "genctx", "bits", "0", "fprintf", "stderr", "\"EVP_PKEY_CTX_set_rsa_keygen_bits() failed\\n\"", "cleanup", "EVP_PKEY_CTX_set_rsa_keygen_primes", "genctx", "primes", "0", "fprintf", "stderr", "\"EVP_PKEY_CTX_set_rsa_keygen_primes() failed\\n\"", "cleanup", "fprintf", "stderr", "\"Generating RSA key, this may take some time...\\n\"", "EVP_PKEY_generate", "genctx", "pkey", "0", "fprintf", "stderr", "\"EVP_PKEY_generate() failed\\n\"", "cleanup", "cleanup", "EVP_PKEY_CTX_free", "genctx", "pkey"], "callee_func": ["EVP_PKEY_CTX_new_from_name", "fprintf", "EVP_PKEY_keygen_init", "fprintf", "EVP_PKEY_CTX_set_rsa_keygen_bits", "fprintf", "EVP_PKEY_CTX_set_rsa_keygen_primes", "fprintf", "fprintf", "EVP_PKEY_generate", "fprintf", "EVP_PKEY_CTX_free"], "function_normalized_hash": "8015dd756b56768b3823b8c8b6efd36f"}, {"line_start": 108, "line_stop": 119, "function_name": "generate_rsa_key_short", "file_path": "pkey/EVP_PKEY_RSA_keygen.c", "line_of_code": 6, "operators": ["*", "=", ";", "(", ",", ")", ";", "=", "(", ",", ",", ",", "(", ")", ")", ";", "if", "(", "==", ")", "(", ",", ")", ";", "return", ";"], "operands": ["EVP_PKEY", "pkey", "NULL", "fprintf", "stderr", "\"Generating RSA key, this may take some time...\\n\"", "pkey", "EVP_PKEY_Q_keygen", "libctx", "propq", "\"RSA\"", "size_t", "bits", "pkey", "NULL", "fprintf", "stderr", "\"EVP_PKEY_Q_keygen() failed\\n\"", "pkey"], "callee_func": ["fprintf", "EVP_PKEY_Q_keygen", "fprintf"], "function_normalized_hash": "554d490bc53a49a7fbeca781839e436c"}, {"line_start": 124, "line_stop": 238, "function_name": "dump_key", "file_path": "pkey/EVP_PKEY_RSA_keygen.c", "line_of_code": 61, "operators": ["int", "=", ";", "int", "=", ";", "*", "=", ",", "*", "=", ",", "*", "=", ",", "*", "=", ",", "*", "=", ";", "if", "(", "(", ",", ",", "&", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "&", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "&", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "&", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "&", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "&", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ",", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "if", "(", "(", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", ",", ",", ",", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "bits", "0", "BIGNUM", "n", "NULL", "e", "NULL", "d", "NULL", "p", "NULL", "q", "NULL", "EVP_PKEY_get_bn_param", "pkey", "OSSL_PKEY_PARAM_RSA_N", "n", "0", "fprintf", "stderr", "\"Failed to retrieve n\\n\"", "cleanup", "EVP_PKEY_get_bn_param", "pkey", "OSSL_PKEY_PARAM_RSA_E", "e", "0", "fprintf", "stderr", "\"Failed to retrieve e\\n\"", "cleanup", "EVP_PKEY_get_bn_param", "pkey", "OSSL_PKEY_PARAM_RSA_D", "d", "0", "fprintf", "stderr", "\"Failed to retrieve d\\n\"", "cleanup", "EVP_PKEY_get_bn_param", "pkey", "OSSL_PKEY_PARAM_RSA_FACTOR1", "p", "0", "fprintf", "stderr", "\"Failed to retrieve p\\n\"", "cleanup", "EVP_PKEY_get_bn_param", "pkey", "OSSL_PKEY_PARAM_RSA_FACTOR2", "q", "0", "fprintf", "stderr", "\"Failed to retrieve q\\n\"", "cleanup", "EVP_PKEY_get_int_param", "pkey", "OSSL_PKEY_PARAM_BITS", "bits", "0", "fprintf", "stderr", "\"Failed to retrieve bits\\n\"", "cleanup", "fprintf", "stdout", "\"\\nNumber of bits: %d\\n\\n\"", "bits", "fprintf", "stderr", "\"Public values:\\n\"", "fprintf", "stdout", "\"  n = 0x\"", "BN_print_fp", "stdout", "n", "fprintf", "stdout", "\"\\n\"", "fprintf", "stdout", "\"  e = 0x\"", "BN_print_fp", "stdout", "e", "fprintf", "stdout", "\"\\n\\n\"", "fprintf", "stdout", "\"Private values:\\n\"", "fprintf", "stdout", "\"  d = 0x\"", "BN_print_fp", "stdout", "d", "fprintf", "stdout", "\"\\n\"", "fprintf", "stdout", "\"  p = 0x\"", "BN_print_fp", "stdout", "p", "fprintf", "stdout", "\"\\n\"", "fprintf", "stdout", "\"  q = 0x\"", "BN_print_fp", "stdout", "q", "fprintf", "stdout", "\"\\n\\n\"", "PEM_write_PUBKEY", "stdout", "pkey", "0", "fprintf", "stderr", "\"Failed to output PEM-encoded public key\\n\"", "cleanup", "PEM_write_PrivateKey", "stdout", "pkey", "NULL", "NULL", "0", "NULL", "NULL", "0", "fprintf", "stderr", "\"Failed to output PEM-encoded private key\\n\"", "cleanup", "ret", "1", "cleanup", "BN_free", "n", "BN_free", "e", "BN_clear_free", "d", "BN_clear_free", "p", "BN_clear_free", "q", "ret"], "callee_func": ["EVP_PKEY_get_bn_param", "fprintf", "EVP_PKEY_get_bn_param", "fprintf", "EVP_PKEY_get_bn_param", "fprintf", "EVP_PKEY_get_bn_param", "fprintf", "EVP_PKEY_get_bn_param", "fprintf", "EVP_PKEY_get_int_param", "fprintf", "fprintf", "fprintf", "fprintf", "BN_print_fp", "fprintf", "fprintf", "BN_print_fp", "fprintf", "fprintf", "fprintf", "BN_print_fp", "fprintf", "fprintf", "BN_print_fp", "fprintf", "fprintf", "BN_print_fp", "fprintf", "PEM_write_PUBKEY", "fprintf", "PEM_write_PrivateKey", "fprintf", "BN_free", "BN_free", "BN_clear_free", "BN_clear_free", "BN_clear_free"], "function_normalized_hash": "265ee56a9ef6ce04574c0c000f932705"}, {"line_start": 240, "line_stop": 289, "function_name": "main", "file_path": "pkey/EVP_PKEY_RSA_keygen.c", "line_of_code": 35, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "unsigned", "int", "=", ";", "int", ",", "=", ";", "if", "(", ">", "&&", "(", "[", "]", ",", ")", "==", ")", "{", "--", ";", "++", ";", "=", ";", "}", "if", "(", ">", ")", "{", "=", "(", "[", "]", ")", ";", "if", "(", "<", ")", "{", "(", ",", ")", ";", "return", ";", "}", "=", "(", "unsigned", "int", ")", ";", "}", "if", "(", "<", ")", "(", ",", ")", ";", "if", "(", ")", "=", "(", ",", ")", ";", "else", "=", "(", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "(", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "OSSL_LIB_CTX", "libctx", "NULL", "EVP_PKEY", "pkey", "NULL", "bits", "4096", "bits_i", "use_short", "0", "argc", "1", "strcmp", "argv", "1", "\"-s\"", "0", "argc", "argv", "use_short", "1", "argc", "1", "bits_i", "atoi", "argv", "1", "bits", "512", "fprintf", "stderr", "\"Invalid RSA key size\\n\"", "EXIT_FAILURE", "bits", "bits_i", "bits", "2048", "fprintf", "stderr", "\"Warning: very weak key size\\n\\n\"", "use_short", "pkey", "generate_rsa_key_short", "libctx", "bits", "pkey", "generate_rsa_key_long", "libctx", "bits", "pkey", "NULL", "cleanup", "dump_key", "pkey", "0", "fprintf", "stderr", "\"Failed to dump key\\n\"", "cleanup", "ret", "EXIT_SUCCESS", "cleanup", "EVP_PKEY_free", "pkey", "OSSL_LIB_CTX_free", "libctx", "ret"], "callee_func": ["strcmp", "atoi", "fprintf", "fprintf", "generate_rsa_key_short", "generate_rsa_key_long", "dump_key", "fprintf", "EVP_PKEY_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "0f8388fe4eb7fb40bfc64a39a50c3ad7"}]}, {"file_hash": "a75a09f91b2b796828ea9719682dcbda", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/bio/server-cmod.c", "file_name": "server-cmod.c", "function_list": [{"line_start": 22, "line_stop": 94, "function_name": "main", "file_path": "bio/server-cmod.c", "line_of_code": 44, "operators": ["unsigned", "char", "[", "]", ";", "char", "*", "=", ";", "*", "=", ";", "*", ",", "*", ";", "*", ";", "int", "=", ",", ";", "=", "(", "(", ")", ")", ";", "if", "(", "(", ",", ",", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ")", ";", "if", "(", "(", "=", "(", ")", ")", "==", ")", "goto", ";", "(", ",", ")", ";", ":", "if", "(", "(", ")", "<=", ")", "goto", ";", "for", "(", ";", ";", ")", "{", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "if", "(", "==", ")", "{", "(", ")", ";", "=", "(", ")", ";", "(", ")", ";", "goto", ";", "}", "if", "(", "<", ")", "{", "if", "(", "(", ")", ")", "continue", ";", "goto", ";", "}", "(", ",", ",", ",", ")", ";", "(", ")", ";", "}", "=", ";", ":", "if", "(", "!=", ")", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["buf", "512", "port", "\"*:4433\"", "BIO", "in", "NULL", "BIO", "ssl_bio", "tmp", "SSL_CTX", "ctx", "ret", "EXIT_FAILURE", "i", "ctx", "SSL_CTX_new", "TLS_server_method", "CONF_modules_load_file", "\"cmod.cnf\"", "\"testapp\"", "0", "0", "fprintf", "stderr", "\"Error processing config file\\n\"", "err", "SSL_CTX_config", "ctx", "\"server\"", "0", "fprintf", "stderr", "\"Error configuring server.\\n\"", "err", "ssl_bio", "BIO_new_ssl", "ctx", "0", "in", "BIO_new_accept", "port", "NULL", "err", "BIO_set_accept_bios", "in", "ssl_bio", "again", "BIO_do_accept", "in", "0", "err", "i", "BIO_read", "in", "buf", "buf", "i", "0", "printf", "\"Done\\n\"", "tmp", "BIO_pop", "in", "BIO_free_all", "tmp", "again", "i", "0", "BIO_should_retry", "in", "err", "fwrite", "buf", "1", "i", "stdout", "fflush", "stdout", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "ERR_print_errors_fp", "stderr", "BIO_free", "in", "ret"], "callee_func": ["SSL_CTX_new", "TLS_server_method", "CONF_modules_load_file", "fprintf", "SSL_CTX_config", "fprintf", "BIO_new_ssl", "BIO_new_accept", "BIO_set_accept_bios", "BIO_do_accept", "BIO_read", "printf", "BIO_pop", "BIO_free_all", "BIO_should_retry", "fwrite", "fflush", "ERR_print_errors_fp", "BIO_free"], "function_normalized_hash": "0c14f7a6853fe36ae89a6feeec5ec458"}]}, {"file_hash": "9110003b6a7e1c77908f5c8723ba906e", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/bio/sconnect.c", "file_name": "sconnect.c", "function_list": [{"line_start": 28, "line_stop": 128, "function_name": "main", "file_path": "bio/sconnect.c", "line_of_code": 78, "operators": ["const", "char", "*", "=", ";", "const", "char", "*", "=", ";", "const", "char", "*", ";", "char", "*", ";", "*", "=", ";", "char", "[", "*", "]", ",", "*", ";", "*", "=", ";", "*", ";", "*", ";", "int", ",", ",", ",", "=", ";", "if", "(", ">", ")", "=", "[", "]", ";", "if", "(", ">", ")", "=", "[", "]", ";", "#ifdef WATT32", "(", ")", ";", "(", ")", ";", "#endif", "=", "(", "(", ")", ")", ";", "(", ",", ",", ")", ";", "(", ",", ",", ")", ";", "=", "(", ")", ";", "(", ")", ";", "=", "(", "(", ")", ")", ";", "(", ",", ",", ")", ";", "=", "(", "(", ")", ")", ";", "(", ",", ")", ";", "=", "(", ")", ";", "if", "(", "!", "||", "(", ",", ")", "<=", ")", "goto", ";", "(", ",", ")", ";", "=", "(", ",", ")", ";", "=", ";", "=", "(", ")", ";", "=", ";", "for", "(", ";", ";", ")", "{", "=", "(", ",", "&", "(", "[", "]", ")", ",", ")", ";", "if", "(", "<=", ")", "{", "if", "(", "(", ")", ")", "{", "(", ",", ")", ";", "(", ")", ";", "continue", ";", "}", "else", "{", "goto", ";", "}", "}", "+=", ";", "-=", ";", "if", "(", "<=", ")", "break", ";", "}", "for", "(", ";", ";", ")", "{", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "if", "(", "==", ")", "break", ";", "if", "(", "<", ")", "{", "if", "(", "(", ")", ")", "{", "(", ",", ")", ";", "(", ")", ";", "continue", ";", "}", "goto", ";", "}", "(", ",", ",", ",", ")", ";", "}", "=", ";", "goto", ";", ":", "if", "(", "(", ")", "==", ")", "{", "(", ",", ",", ")", ";", "(", ")", ";", "}", "else", "{", "(", ")", ";", "}", ":", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["hostport", "HOSTPORT", "CAfile", "CAFILE", "hostname", "cp", "BIO", "out", "NULL", "buf", "1024", "10", "p", "SSL_CTX", "ssl_ctx", "NULL", "SSL", "ssl", "BIO", "ssl_bio", "i", "len", "off", "ret", "EXIT_FAILURE", "argc", "1", "hostport", "argv", "1", "argc", "2", "CAfile", "argv", "2", "dbug_init", "sock_init", "ssl_ctx", "SSL_CTX_new", "TLS_client_method", "SSL_CTX_set_verify", "ssl_ctx", "SSL_VERIFY_PEER", "NULL", "SSL_CTX_load_verify_locations", "ssl_ctx", "CAfile", "NULL", "ssl", "SSL_new", "ssl_ctx", "SSL_set_connect_state", "ssl", "ssl_bio", "BIO_new", "BIO_f_ssl", "BIO_set_ssl", "ssl_bio", "ssl", "BIO_CLOSE", "out", "BIO_new", "BIO_s_connect", "BIO_set_conn_hostname", "out", "hostport", "hostname", "BIO_get_conn_hostname", "out", "hostname", "SSL_set1_host", "ssl", "hostname", "0", "err", "BIO_set_nbio", "out", "1", "out", "BIO_push", "ssl_bio", "out", "p", "\"GET / HTTP/1.0\\r\\n\\r\\n\"", "len", "strlen", "p", "off", "0", "i", "BIO_write", "out", "p", "off", "len", "i", "0", "BIO_should_retry", "out", "fprintf", "stderr", "\"write DELAY\\n\"", "sleep", "1", "err", "off", "i", "len", "i", "len", "0", "i", "BIO_read", "out", "buf", "buf", "i", "0", "i", "0", "BIO_should_retry", "out", "fprintf", "stderr", "\"read DELAY\\n\"", "sleep", "1", "err", "fwrite", "buf", "1", "i", "stdout", "ret", "EXIT_SUCCESS", "done", "err", "ERR_peek_error", "0", "fprintf", "stderr", "\"errno=%d \"", "errno", "perror", "\"error\"", "ERR_print_errors_fp", "stderr", "done", "BIO_free_all", "out", "SSL_CTX_free", "ssl_ctx", "ret"], "callee_func": ["dbug_init", "sock_init", "SSL_CTX_new", "TLS_client_method", "SSL_CTX_set_verify", "SSL_CTX_load_verify_locations", "SSL_new", "SSL_set_connect_state", "BIO_new", "BIO_f_ssl", "BIO_set_ssl", "BIO_new", "BIO_s_connect", "BIO_set_conn_hostname", "BIO_get_conn_hostname", "SSL_set1_host", "BIO_set_nbio", "BIO_push", "strlen", "BIO_write", "BIO_should_retry", "fprintf", "sleep", "BIO_read", "BIO_should_retry", "fprintf", "sleep", "fwrite", "ERR_peek_error", "fprintf", "perror", "ERR_print_errors_fp", "BIO_free_all", "SSL_CTX_free"], "function_normalized_hash": "022a5720c98f4d0182aa2f0d907d4ec4"}]}, {"file_hash": "7e1c1ad2476a3e14b263da478dab76c8", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/guide/quic-client-block.c", "file_name": "quic-client-block.c", "function_list": [{"line_start": 29, "line_stop": 107, "function_name": "create_socket_bio", "file_path": "guide/quic-client-block.c", "line_of_code": 37, "operators": ["int", "=", "-", ";", "*", ";", "const", "*", "=", ";", "*", ";", "if", "(", "!", "(", ",", ",", ",", ",", ",", ",", "&", ")", ")", "return", ";", "for", "(", "=", ";", "!=", ";", "=", "(", ")", ")", "{", "=", "(", "(", ")", ",", ",", ",", ")", ";", "if", "(", "==", "-", ")", "continue", ";", "if", "(", "!", "(", ",", "(", ")", ",", ")", ")", "{", "(", ")", ";", "=", "-", ";", "continue", ";", "}", "if", "(", "!", "(", ",", ")", ")", "{", "=", "-", ";", "continue", ";", "}", "break", ";", "}", "if", "(", "!=", "-", ")", "{", "*", "=", "(", "(", ")", ")", ";", "if", "(", "*", "==", ")", "{", "(", ")", ";", "return", ";", "}", "}", "(", ")", ";", "if", "(", "==", "-", ")", "return", ";", "=", "(", "(", ")", ")", ";", "if", "(", "==", ")", "(", ")", ";", "(", ",", ",", ")", ";", "return", ";"], "operands": ["sock", "1", "BIO_ADDRINFO", "res", "BIO_ADDRINFO", "ai", "NULL", "BIO", "bio", "BIO_lookup_ex", "hostname", "port", "BIO_LOOKUP_CLIENT", "0", "SOCK_DGRAM", "0", "res", "NULL", "ai", "res", "ai", "NULL", "ai", "BIO_ADDRINFO_next", "ai", "sock", "BIO_socket", "BIO_ADDRINFO_family", "ai", "SOCK_DGRAM", "0", "0", "sock", "1", "BIO_connect", "sock", "BIO_ADDRINFO_address", "ai", "0", "BIO_closesocket", "sock", "sock", "1", "BIO_socket_nbio", "sock", "1", "sock", "1", "sock", "1", "peer_addr", "BIO_ADDR_dup", "BIO_ADDRINFO_address", "ai", "peer_addr", "NULL", "BIO_closesocket", "sock", "NULL", "BIO_ADDRINFO_free", "res", "sock", "1", "NULL", "bio", "BIO_new", "BIO_s_datagram", "bio", "NULL", "BIO_closesocket", "sock", "BIO_set_fd", "bio", "sock", "BIO_CLOSE", "bio"], "callee_func": ["BIO_lookup_ex", "BIO_ADDRINFO_next", "BIO_socket", "BIO_ADDRINFO_family", "BIO_connect", "BIO_ADDRINFO_address", "BIO_closesocket", "BIO_socket_nbio", "BIO_ADDR_dup", "BIO_ADDRINFO_address", "BIO_closesocket", "BIO_ADDRINFO_free", "BIO_new", "BIO_s_datagram", "BIO_closesocket", "BIO_set_fd"], "function_normalized_hash": "898198d9d87523cd1b053c000f8ae6ff"}, {"line_start": 123, "line_stop": 291, "function_name": "main", "file_path": "guide/quic-client-block.c", "line_of_code": 81, "operators": ["*", "=", ";", "*", ";", "*", "=", ";", "int", "=", ";", "int", ";", "unsigned", "char", "[", "]", "=", "{", ",", ",", ",", ",", ",", ",", ",", ",", "}", ";", "const", "char", "*", "=", ";", ",", ";", "char", "[", "]", ";", "*", "=", ";", "=", "(", "(", ")", ")", ";", "if", "(", "==", ")", "{", "(", ")", ";", "goto", ";", "}", "(", ",", ",", ")", ";", "if", "(", "!", "(", ")", ")", "{", "(", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ")", ";", "goto", ";", "}", "=", "(", ",", ",", "&", ")", ";", "if", "(", "==", ")", "{", "(", ")", ";", "goto", ";", "}", "(", ",", ",", ")", ";", "if", "(", "!", "(", ",", ")", ")", "{", "(", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ")", ")", "{", "(", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "{", "(", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ")", ")", "{", "(", ")", ";", "goto", ";", "}", "if", "(", "(", "=", "(", ")", ")", "<", ")", "{", "if", "(", "(", ")", "!=", ")", "(", ",", "(", "(", ")", ")", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "(", ")", ",", "&", ")", ")", "{", "(", ")", ";", "goto", ";", "}", "while", "(", "(", ",", ",", "sizeof", "(", ")", ",", "&", ")", ")", "{", "(", ",", ",", ",", ")", ";", "}", "(", ")", ";", "if", "(", "(", ",", ")", "!=", ")", "{", "(", ")", ";", "goto", ";", "}", "do", "{", "=", "(", ")", ";", "if", "(", "<", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "}", "while", "(", "!=", ")", ";", "=", ";", ":", "if", "(", "==", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["SSL_CTX", "ctx", "NULL", "SSL", "ssl", "BIO", "bio", "NULL", "res", "EXIT_FAILURE", "ret", "alpn", "8", "'h'", "'t'", "'t'", "'p'", "'/'", "'1'", "'.'", "'0'", "request", "\"GET / HTTP/1.0\\r\\nConnection: close\\r\\nHost: \"HOSTNAME", "\"\\r\\n\\r\\n\"", "size_t", "written", "readbytes", "buf", "160", "BIO_ADDR", "peer_addr", "NULL", "ctx", "SSL_CTX_new", "OSSL_QUIC_client_method", "ctx", "NULL", "printf", "\"Failed to create the SSL_CTX\\n\"", "end", "SSL_CTX_set_verify", "ctx", "SSL_VERIFY_PEER", "NULL", "SSL_CTX_set_default_verify_paths", "ctx", "printf", "\"Failed to set the default trusted certificate store\\n\"", "end", "ssl", "SSL_new", "ctx", "ssl", "NULL", "printf", "\"Failed to create the SSL object\\n\"", "end", "bio", "create_socket_bio", "HOSTNAME", "PORT", "peer_addr", "bio", "NULL", "printf", "\"Failed to crete the BIO\\n\"", "end", "SSL_set_bio", "ssl", "bio", "bio", "SSL_set_tlsext_host_name", "ssl", "HOSTNAME", "printf", "\"Failed to set the SNI hostname\\n\"", "end", "SSL_set1_host", "ssl", "HOSTNAME", "printf", "\"Failed to set the certificate verification hostname\"", "end", "SSL_set_alpn_protos", "ssl", "alpn", "alpn", "0", "printf", "\"Failed to set the ALPN for the connection\\n\"", "end", "SSL_set_initial_peer_addr", "ssl", "peer_addr", "printf", "\"Failed to set the initial peer address\\n\"", "end", "ret", "SSL_connect", "ssl", "1", "SSL_get_verify_result", "ssl", "X509_V_OK", "printf", "\"Verify error: %s\\n\"", "X509_verify_cert_error_string", "SSL_get_verify_result", "ssl", "end", "SSL_write_ex", "ssl", "request", "strlen", "request", "written", "printf", "\"Failed to write HTTP request\\n\"", "end", "SSL_read_ex", "ssl", "buf", "buf", "readbytes", "fwrite", "buf", "1", "readbytes", "stdout", "printf", "\"\\n\"", "SSL_get_error", "ssl", "0", "SSL_ERROR_ZERO_RETURN", "printf", "\"Failed reading remaining data\\n\"", "end", "ret", "SSL_shutdown", "ssl", "ret", "0", "printf", "\"Error shutting down: %d\\n\"", "ret", "end", "ret", "1", "res", "EXIT_SUCCESS", "end", "res", "EXIT_FAILURE", "ERR_print_errors_fp", "stderr", "SSL_free", "ssl", "SSL_CTX_free", "ctx", "BIO_ADDR_free", "peer_addr", "res"], "callee_func": ["SSL_CTX_new", "OSSL_QUIC_client_method", "printf", "SSL_CTX_set_verify", "SSL_CTX_set_default_verify_paths", "printf", "SSL_new", "printf", "create_socket_bio", "printf", "SSL_set_bio", "SSL_set_tlsext_host_name", "printf", "SSL_set1_host", "printf", "SSL_set_alpn_protos", "printf", "SSL_set_initial_peer_addr", "printf", "SSL_connect", "SSL_get_verify_result", "printf", "X509_verify_cert_error_string", "SSL_get_verify_result", "SSL_write_ex", "strlen", "printf", "SSL_read_ex", "fwrite", "printf", "SSL_get_error", "printf", "SSL_shutdown", "printf", "ERR_print_errors_fp", "SSL_free", "SSL_CTX_free", "BIO_ADDR_free"], "function_normalized_hash": "97c47bc711139e648144e68190d6a97d"}]}, {"file_hash": "7ba08fcd025f10e677f2619fb8158580", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/digest/EVP_MD_stdin.c", "file_name": "EVP_MD_stdin.c", "function_list": [{"line_start": 34, "line_stop": 122, "function_name": "demonstrate_digest", "file_path": "digest/EVP_MD_stdin.c", "line_of_code": 66, "operators": ["*", "=", ";", "int", "=", ";", "const", "char", "*", "=", ";", "*", "=", ";", "*", "=", ";", "unsigned", "int", ";", "unsigned", "char", "*", "=", ";", "unsigned", "char", "[", "]", ";", "int", ";", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";", "}", "=", "(", ")", ";", "if", "(", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "(", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ")", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "goto", ";", "}", "while", "(", "(", "=", "(", ",", ",", "sizeof", "(", ")", ")", ")", ">", ")", "{", "if", "(", "(", ",", ",", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "}", "if", "(", "(", ",", ",", "&", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", "for", "(", "=", ";", "<", ";", "++", ")", "{", "(", ",", ",", "[", "]", ")", ";", "}", "(", ",", ")", ";", ":", "if", "(", "!=", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["OSSL_LIB_CTX", "library_context", "NULL", "ret", "0", "option_properties", "NULL", "EVP_MD", "message_digest", "NULL", "EVP_MD_CTX", "digest_context", "NULL", "digest_length", "digest_value", "NULL", "buffer", "512", "ii", "library_context", "OSSL_LIB_CTX_new", "library_context", "NULL", "fprintf", "stderr", "\"OSSL_LIB_CTX_new() returned NULL\\n\"", "cleanup", "message_digest", "EVP_MD_fetch", "library_context", "\"SHA3-512\"", "option_properties", "message_digest", "NULL", "fprintf", "stderr", "\"EVP_MD_fetch could not find SHA3-512.\"", "ERR_print_errors_fp", "stderr", "OSSL_LIB_CTX_free", "library_context", "0", "digest_length", "EVP_MD_get_size", "message_digest", "digest_length", "0", "fprintf", "stderr", "\"EVP_MD_get_size returned invalid size.\\n\"", "cleanup", "digest_value", "OPENSSL_malloc", "digest_length", "digest_value", "NULL", "fprintf", "stderr", "\"No memory.\\n\"", "cleanup", "digest_context", "EVP_MD_CTX_new", "digest_context", "NULL", "fprintf", "stderr", "\"EVP_MD_CTX_new failed.\\n\"", "ERR_print_errors_fp", "stderr", "cleanup", "EVP_DigestInit", "digest_context", "message_digest", "1", "fprintf", "stderr", "\"EVP_DigestInit failed.\\n\"", "ERR_print_errors_fp", "stderr", "cleanup", "ii", "BIO_read", "input", "buffer", "buffer", "0", "EVP_DigestUpdate", "digest_context", "buffer", "ii", "1", "fprintf", "stderr", "\"EVP_DigestUpdate() failed.\\n\"", "cleanup", "EVP_DigestFinal", "digest_context", "digest_value", "digest_length", "1", "fprintf", "stderr", "\"EVP_DigestFinal() failed.\\n\"", "cleanup", "ret", "1", "ii", "0", "ii", "digest_length", "ii", "fprintf", "stdout", "\"%02x\"", "digest_value", "ii", "fprintf", "stdout", "\"\\n\"", "cleanup", "ret", "1", "ERR_print_errors_fp", "stderr", "EVP_MD_CTX_free", "digest_context", "OPENSSL_free", "digest_value", "EVP_MD_free", "message_digest", "OSSL_LIB_CTX_free", "library_context", "ret"], "callee_func": ["OSSL_LIB_CTX_new", "fprintf", "EVP_MD_fetch", "fprintf", "ERR_print_errors_fp", "OSSL_LIB_CTX_free", "EVP_MD_get_size", "fprintf", "OPENSSL_malloc", "fprintf", "EVP_MD_CTX_new", "fprintf", "ERR_print_errors_fp", "EVP_DigestInit", "fprintf", "ERR_print_errors_fp", "BIO_read", "EVP_DigestUpdate", "fprintf", "EVP_DigestFinal", "fprintf", "fprintf", "fprintf", "ERR_print_errors_fp", "EVP_MD_CTX_free", "OPENSSL_free", "EVP_MD_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "f78c6b7b7bc34c25f0104af706234cc8"}, {"line_start": 124, "line_stop": 136, "function_name": "main", "file_path": "digest/EVP_MD_stdin.c", "line_of_code": 9, "operators": ["int", "=", ";", "*", "=", "(", "(", ")", ",", ")", ";", "if", "(", "!=", ")", "{", "=", "(", "(", ")", "?", ":", ")", ";", "(", ")", ";", "}", "if", "(", "!=", ")", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "BIO", "input", "BIO_new_fd", "fileno", "stdin", "1", "input", "NULL", "ret", "demonstrate_digest", "input", "EXIT_SUCCESS", "EXIT_FAILURE", "BIO_free", "input", "ret", "EXIT_SUCCESS", "ERR_print_errors_fp", "stderr", "ret"], "callee_func": ["BIO_new_fd", "fileno", "demonstrate_digest", "BIO_free", "ERR_print_errors_fp"], "function_normalized_hash": "d36b7f286ed59484eac32886aa064c29"}]}, {"file_hash": "ead4d9486d2952fa3de896a916705f12", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/mac/poly1305.c", "file_name": "poly1305.c", "function_list": [{"line_start": 84, "line_stop": 209, "function_name": "main", "file_path": "mac/poly1305.c", "line_of_code": 82, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "unsigned", "char", "[", "]", ";", "unsigned", "char", "[", "]", ";", "*", "=", ";", "=", ";", "int", "=", ";", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", "+", ",", "&", ",", ",", "sizeof", "(", ")", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ",", ",", ")", ";", "if", "(", "!", "(", ",", ",", "sizeof", "(", ")", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "sizeof", "(", ")", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "&", ",", "sizeof", "(", ")", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ")", ";", "(", ",", ",", ",", ")", ";", "(", ")", ";", "if", "(", "!=", "sizeof", "(", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "if", "(", "!=", ")", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "EVP_CIPHER", "aes", "NULL", "EVP_CIPHER_CTX", "aesctx", "NULL", "EVP_MAC", "mac", "NULL", "EVP_MAC_CTX", "mctx", "NULL", "composite_key", "32", "out", "16", "OSSL_LIB_CTX", "library_context", "NULL", "size_t", "out_len", "0", "aes_len", "0", "library_context", "OSSL_LIB_CTX_new", "library_context", "NULL", "fprintf", "stderr", "\"OSSL_LIB_CTX_new() returned NULL\\n\"", "end", "mac", "EVP_MAC_fetch", "library_context", "\"POLY1305\"", "propq", "mac", "NULL", "fprintf", "stderr", "\"EVP_MAC_fetch() returned NULL\\n\"", "end", "mctx", "EVP_MAC_CTX_new", "mac", "mctx", "NULL", "fprintf", "stderr", "\"EVP_MAC_CTX_new() returned NULL\\n\"", "end", "aes", "EVP_CIPHER_fetch", "library_context", "\"AES-128-ECB\"", "propq", "aes", "NULL", "fprintf", "stderr", "\"EVP_CIPHER_fetch() returned NULL\\n\"", "end", "aesctx", "EVP_CIPHER_CTX_new", "aesctx", "NULL", "fprintf", "stderr", "\"EVP_CIPHER_CTX_new() returned NULL\\n\"", "end", "EVP_EncryptInit_ex", "aesctx", "aes", "NULL", "test_k", "NULL", "fprintf", "stderr", "\"EVP_EncryptInit_ex() failed\\n\"", "end", "EVP_CIPHER_CTX_set_padding", "aesctx", "0", "fprintf", "stderr", "\"EVP_CIPHER_CTX_set_padding() failed\\n\"", "end", "EVP_EncryptUpdate", "aesctx", "composite_key", "16", "aes_len", "test_n", "test_n", "fprintf", "stderr", "\"EVP_EncryptUpdate() failed\\n\"", "end", "memcpy", "composite_key", "test_r", "16", "EVP_MAC_init", "mctx", "composite_key", "composite_key", "NULL", "fprintf", "stderr", "\"EVP_MAC_init() failed\\n\"", "end", "EVP_MAC_update", "mctx", "test_m", "test_m", "fprintf", "stderr", "\"EVP_MAC_update() failed\\n\"", "end", "EVP_MAC_final", "mctx", "out", "out_len", "out", "fprintf", "stderr", "\"EVP_MAC_final() failed\\n\"", "end", "printf", "\"Generated MAC:\\n\"", "BIO_dump_indent_fp", "stdout", "out", "out_len", "2", "putchar", "'\\n'", "out_len", "expected_output", "fprintf", "stderr", "\"Generated MAC has an unexpected length\\n\"", "end", "CRYPTO_memcmp", "expected_output", "out", "expected_output", "0", "fprintf", "stderr", "\"Generated MAC does not match expected value\\n\"", "end", "ret", "EXIT_SUCCESS", "end", "EVP_CIPHER_CTX_free", "aesctx", "EVP_CIPHER_free", "aes", "EVP_MAC_CTX_free", "mctx", "EVP_MAC_free", "mac", "OSSL_LIB_CTX_free", "library_context", "ret", "EXIT_SUCCESS", "ERR_print_errors_fp", "stderr", "ret"], "callee_func": ["OSSL_LIB_CTX_new", "fprintf", "EVP_MAC_fetch", "fprintf", "EVP_MAC_CTX_new", "fprintf", "EVP_CIPHER_fetch", "fprintf", "EVP_CIPHER_CTX_new", "fprintf", "EVP_EncryptInit_ex", "fprintf", "EVP_CIPHER_CTX_set_padding", "fprintf", "EVP_EncryptUpdate", "fprintf", "memcpy", "EVP_MAC_init", "fprintf", "EVP_MAC_update", "fprintf", "EVP_MAC_final", "fprintf", "printf", "BIO_dump_indent_fp", "putchar", "fprintf", "CRYPTO_memcmp", "fprintf", "EVP_CIPHER_CTX_free", "EVP_CIPHER_free", "EVP_MAC_CTX_free", "EVP_MAC_free", "OSSL_LIB_CTX_free", "ERR_print_errors_fp"], "function_normalized_hash": "dadb3e1b0cb147ea1e01a3401d1f4186"}]}, {"file_hash": "e48b2b971ff2b4566e6a6ac3cb0a7610", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/signature/rsa_pss_hash.c", "file_name": "rsa_pss_hash.c", "function_list": [{"line_start": 33, "line_stop": 107, "function_name": "sign", "file_path": "signature/rsa_pss_hash.c", "line_of_code": 50, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "[", "]", ",", "*", "=", ";", "const", "unsigned", "char", "*", "=", ";", "*", "=", ";", "=", ";", "=", "(", ",", ",", "&", ",", "sizeof", "(", ")", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "*", "++", "=", "(", ",", ",", ")", ";", "*", "=", "(", ")", ";", "if", "(", "(", ",", ",", ",", ",", ",", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "*", "=", "(", "*", ")", ";", "if", "(", "*", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", "*", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "if", "(", "==", ")", "(", "*", ")", ";", "return", ";"], "operands": ["ret", "0", "EVP_PKEY", "pkey", "NULL", "EVP_MD_CTX", "mctx", "NULL", "OSSL_PARAM", "params", "2", "p", "params", "ppriv_key", "NULL", "sig", "NULL", "ppriv_key", "rsa_priv_key", "pkey", "d2i_PrivateKey_ex", "EVP_PKEY_RSA", "NULL", "ppriv_key", "rsa_priv_key", "libctx", "propq", "pkey", "NULL", "fprintf", "stderr", "\"Failed to load private key\\n\"", "end", "mctx", "EVP_MD_CTX_new", "mctx", "NULL", "fprintf", "stderr", "\"Failed to create MD context\\n\"", "end", "p", "OSSL_PARAM_construct_utf8_string", "OSSL_SIGNATURE_PARAM_PAD_MODE", "OSSL_PKEY_RSA_PAD_MODE_PSS", "0", "p", "OSSL_PARAM_construct_end", "EVP_DigestSignInit_ex", "mctx", "NULL", "\"SHA256\"", "libctx", "propq", "pkey", "params", "0", "fprintf", "stderr", "\"Failed to initialize signing context\\n\"", "end", "EVP_DigestSignUpdate", "mctx", "test_message", "test_message", "0", "fprintf", "stderr", "\"Failed to hash message into signing context\\n\"", "end", "EVP_DigestSignFinal", "mctx", "NULL", "sig_len", "0", "fprintf", "stderr", "\"Failed to get signature length\\n\"", "end", "sig", "OPENSSL_malloc", "sig_len", "sig", "NULL", "fprintf", "stderr", "\"Failed to allocate memory for signature\\n\"", "end", "EVP_DigestSignFinal", "mctx", "sig", "sig_len", "0", "fprintf", "stderr", "\"Failed to sign\\n\"", "end", "ret", "1", "end", "EVP_MD_CTX_free", "mctx", "EVP_PKEY_free", "pkey", "ret", "0", "OPENSSL_free", "sig", "ret"], "callee_func": ["d2i_PrivateKey_ex", "fprintf", "EVP_MD_CTX_new", "fprintf", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_end", "EVP_DigestSignInit_ex", "fprintf", "EVP_DigestSignUpdate", "fprintf", "EVP_DigestSignFinal", "fprintf", "OPENSSL_malloc", "fprintf", "EVP_DigestSignFinal", "fprintf", "EVP_MD_CTX_free", "EVP_PKEY_free", "OPENSSL_free"], "function_normalized_hash": "3743edfe36f42798a716e8a25ae1a3a0"}, {"line_start": 114, "line_stop": 169, "function_name": "verify", "file_path": "signature/rsa_pss_hash.c", "line_of_code": 38, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "[", "]", ",", "*", "=", ";", "const", "unsigned", "char", "*", "=", ";", "=", ";", "=", "(", ",", ",", "&", ",", "sizeof", "(", ")", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "*", "++", "=", "(", ",", ",", ")", ";", "*", "=", "(", ")", ";", "if", "(", "(", ",", ",", ",", ",", ",", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "EVP_PKEY", "pkey", "NULL", "EVP_MD_CTX", "mctx", "NULL", "OSSL_PARAM", "params", "2", "p", "params", "ppub_key", "NULL", "ppub_key", "rsa_pub_key", "pkey", "d2i_PublicKey", "EVP_PKEY_RSA", "NULL", "ppub_key", "rsa_pub_key", "pkey", "NULL", "fprintf", "stderr", "\"Failed to load public key\\n\"", "end", "mctx", "EVP_MD_CTX_new", "mctx", "NULL", "fprintf", "stderr", "\"Failed to create MD context\\n\"", "end", "p", "OSSL_PARAM_construct_utf8_string", "OSSL_SIGNATURE_PARAM_PAD_MODE", "OSSL_PKEY_RSA_PAD_MODE_PSS", "0", "p", "OSSL_PARAM_construct_end", "EVP_DigestVerifyInit_ex", "mctx", "NULL", "\"SHA256\"", "libctx", "propq", "pkey", "params", "0", "fprintf", "stderr", "\"Failed to initialize signing context\\n\"", "end", "EVP_DigestVerifyUpdate", "mctx", "test_message", "test_message", "0", "fprintf", "stderr", "\"Failed to hash message into signing context\\n\"", "end", "EVP_DigestVerifyFinal", "mctx", "sig", "sig_len", "0", "fprintf", "stderr", "\"Failed to verify signature; \"", "\"signature may be invalid\\n\"", "end", "ret", "1", "end", "EVP_MD_CTX_free", "mctx", "EVP_PKEY_free", "pkey", "ret"], "callee_func": ["d2i_PublicKey", "fprintf", "EVP_MD_CTX_new", "fprintf", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_end", "EVP_DigestVerifyInit_ex", "fprintf", "EVP_DigestVerifyUpdate", "fprintf", "EVP_DigestVerifyFinal", "fprintf", "EVP_MD_CTX_free", "EVP_PKEY_free"], "function_normalized_hash": "0921e29025040f9044a7238824217c8b"}, {"line_start": 171, "line_stop": 189, "function_name": "main", "file_path": "signature/rsa_pss_hash.c", "line_of_code": 13, "operators": ["int", "=", ";", "*", "=", ";", "unsigned", "char", "*", "=", ";", "=", ";", "if", "(", "(", ",", "&", ",", "&", ")", "==", ")", "goto", ";", "if", "(", "(", ",", ",", ")", "==", ")", "goto", ";", "=", ";", ":", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "OSSL_LIB_CTX", "libctx", "NULL", "sig", "NULL", "size_t", "sig_len", "0", "sign", "libctx", "sig", "sig_len", "0", "end", "verify", "libctx", "sig", "sig_len", "0", "end", "ret", "EXIT_SUCCESS", "end", "OPENSSL_free", "sig", "OSSL_LIB_CTX_free", "libctx", "ret"], "callee_func": ["sign", "verify", "OPENSSL_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "337167493fc53ab508bfcc4e46201142"}]}, {"file_hash": "d859a0777860796f4201851a1232213f", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/smime/smver.c", "file_name": "smver.c", "function_list": [{"line_start": 15, "line_stop": 86, "function_name": "main", "file_path": "smime/smver.c", "line_of_code": 45, "operators": ["*", "=", ",", "*", "=", ",", "*", "=", ",", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "int", "=", ";", "(", ")", ";", "(", ")", ";", "=", "(", ")", ";", "if", "(", "==", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "=", "(", ",", ",", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "!", "(", ",", ")", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "=", "(", ",", "&", ")", ";", "if", "(", "==", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ",", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ",", ")", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "in", "NULL", "out", "NULL", "tbio", "NULL", "cont", "NULL", "X509_STORE", "st", "NULL", "X509", "cacert", "NULL", "PKCS7", "p7", "NULL", "ret", "EXIT_FAILURE", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "st", "X509_STORE_new", "st", "NULL", "err", "tbio", "BIO_new_file", "\"cacert.pem\"", "\"r\"", "tbio", "NULL", "err", "cacert", "PEM_read_bio_X509", "tbio", "NULL", "0", "NULL", "cacert", "NULL", "err", "X509_STORE_add_cert", "st", "cacert", "err", "in", "BIO_new_file", "\"smout.txt\"", "\"r\"", "in", "NULL", "err", "p7", "SMIME_read_PKCS7", "in", "cont", "p7", "NULL", "err", "out", "BIO_new_file", "\"smver.txt\"", "\"w\"", "out", "NULL", "err", "PKCS7_verify", "p7", "NULL", "st", "cont", "out", "0", "fprintf", "stderr", "\"Verification Failure\\n\"", "err", "fprintf", "stderr", "\"Verification Successful\\n\"", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "fprintf", "stderr", "\"Error Verifying Data\\n\"", "ERR_print_errors_fp", "stderr", "X509_STORE_free", "st", "PKCS7_free", "p7", "X509_free", "cacert", "BIO_free", "in", "BIO_free", "out", "BIO_free", "tbio", "ret"], "callee_func": ["OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "X509_STORE_new", "BIO_new_file", "PEM_read_bio_X509", "X509_STORE_add_cert", "BIO_new_file", "SMIME_read_PKCS7", "BIO_new_file", "PKCS7_verify", "fprintf", "fprintf", "fprintf", "ERR_print_errors_fp", "X509_STORE_free", "PKCS7_free", "X509_free", "BIO_free", "BIO_free", "BIO_free"], "function_normalized_hash": "c2dc044912ae8bce5f86e213e7592423"}]}, {"file_hash": "2a48ea76a12f2942235e5b2e1498ce9a", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/signature/EVP_EC_Signature_demo.c", "file_name": "EVP_EC_Signature_demo.c", "function_list": [{"line_start": 44, "line_stop": 68, "function_name": "get_key", "file_path": "signature/EVP_EC_Signature_demo.c", "line_of_code": 21, "operators": ["*", "=", ";", "*", "=", ";", "int", ";", "const", "unsigned", "char", "*", ";", ";", "if", "(", "public", ")", "{", "=", ";", "=", ";", "=", "sizeof", "(", ")", ";", "}", "else", "{", "=", ";", "=", ";", "=", "sizeof", "(", ")", ";", "}", "=", "(", "&", ",", ",", ",", ",", ",", ",", ")", ";", "(", "void", ")", "(", ",", "&", ",", "&", ")", ";", "(", ")", ";", "if", "(", "==", ")", "(", ",", ",", "public", "?", ":", ")", ";", "return", ";"], "operands": ["OSSL_DECODER_CTX", "dctx", "NULL", "EVP_PKEY", "pkey", "NULL", "selection", "data", "size_t", "data_len", "selection", "EVP_PKEY_PUBLIC_KEY", "data", "pub_key_der", "data_len", "pub_key_der", "selection", "EVP_PKEY_KEYPAIR", "data", "priv_key_der", "data_len", "priv_key_der", "dctx", "OSSL_DECODER_CTX_new_for_pkey", "pkey", "\"DER\"", "NULL", "\"EC\"", "selection", "libctx", "propq", "OSSL_DECODER_from_data", "dctx", "data", "data_len", "OSSL_DECODER_CTX_free", "dctx", "pkey", "NULL", "fprintf", "stderr", "\"Failed to load %s key.\\n\"", "\"public\"", "\"private\"", "pkey"], "callee_func": ["OSSL_DECODER_CTX_new_for_pkey", "OSSL_DECODER_from_data", "OSSL_DECODER_CTX_free", "fprintf"], "function_normalized_hash": "9e99353220be71c21f7e1e0a0ab05cac"}, {"line_start": 70, "line_stop": 148, "function_name": "demo_sign", "file_path": "signature/EVP_EC_Signature_demo.c", "line_of_code": 58, "operators": ["int", "=", ",", "public", "=", ";", ";", "unsigned", "char", "*", "=", ";", "const", "char", "*", "=", ";", "*", "=", ";", "*", "=", ";", "=", "(", ",", ",", "public", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", ",", ",", ",", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "(", ")", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "(", ")", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "&", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "&", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "*", "=", ";", "*", "=", ";", "(", ",", ")", ";", "(", ",", ",", ",", ")", ";", "(", ",", ")", ";", "=", ";", ":", "if", "(", "!", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "0", "size_t", "sig_len", "sig_value", "NULL", "propq", "NULL", "EVP_MD_CTX", "sign_context", "NULL", "EVP_PKEY", "priv_key", "NULL", "priv_key", "get_key", "libctx", "propq", "priv_key", "NULL", "fprintf", "stderr", "\"Get private key failed.\\n\"", "cleanup", "sign_context", "EVP_MD_CTX_new", "sign_context", "NULL", "fprintf", "stderr", "\"EVP_MD_CTX_new failed.\\n\"", "cleanup", "EVP_DigestSignInit_ex", "sign_context", "NULL", "sig_name", "libctx", "NULL", "priv_key", "NULL", "fprintf", "stderr", "\"EVP_DigestSignInit_ex failed.\\n\"", "cleanup", "EVP_DigestSignUpdate", "sign_context", "hamlet_1", "strlen", "hamlet_1", "fprintf", "stderr", "\"EVP_DigestSignUpdate(hamlet_1) failed.\\n\"", "cleanup", "EVP_DigestSignUpdate", "sign_context", "hamlet_2", "strlen", "hamlet_2", "fprintf", "stderr", "\"EVP_DigestSignUpdate(hamlet_2) failed.\\n\"", "cleanup", "EVP_DigestSignFinal", "sign_context", "NULL", "sig_len", "fprintf", "stderr", "\"EVP_DigestSignFinal failed.\\n\"", "cleanup", "sig_len", "0", "fprintf", "stderr", "\"EVP_DigestSignFinal returned invalid signature length.\\n\"", "cleanup", "sig_value", "OPENSSL_malloc", "sig_len", "sig_value", "NULL", "fprintf", "stderr", "\"No memory.\\n\"", "cleanup", "EVP_DigestSignFinal", "sign_context", "sig_value", "sig_len", "fprintf", "stderr", "\"EVP_DigestSignFinal failed.\\n\"", "cleanup", "sig_out_len", "sig_len", "sig_out_value", "sig_value", "fprintf", "stdout", "\"Generating signature:\\n\"", "BIO_dump_indent_fp", "stdout", "sig_value", "sig_len", "2", "fprintf", "stdout", "\"\\n\"", "ret", "1", "cleanup", "ret", "OPENSSL_free", "sig_value", "EVP_PKEY_free", "priv_key", "EVP_MD_CTX_free", "sign_context", "ret"], "callee_func": ["get_key", "fprintf", "EVP_MD_CTX_new", "fprintf", "EVP_DigestSignInit_ex", "fprintf", "EVP_DigestSignUpdate", "strlen", "fprintf", "EVP_DigestSignUpdate", "strlen", "fprintf", "EVP_DigestSignFinal", "fprintf", "fprintf", "OPENSSL_malloc", "fprintf", "EVP_DigestSignFinal", "fprintf", "fprintf", "BIO_dump_indent_fp", "fprintf", "OPENSSL_free", "EVP_PKEY_free", "EVP_MD_CTX_free"], "function_normalized_hash": "86bc6f19bd34e32c472562e5143f7e1c"}, {"line_start": 150, "line_stop": 203, "function_name": "demo_verify", "file_path": "signature/EVP_EC_Signature_demo.c", "line_of_code": 37, "operators": ["int", "=", ",", "public", "=", ";", "const", "char", "*", "=", ";", "*", "=", ";", "*", "=", ";", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", "public", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", ",", ",", ",", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "(", ")", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "(", ")", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ",", ")", ";", "=", ";", ":", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "1", "propq", "NULL", "EVP_MD_CTX", "verify_context", "NULL", "EVP_PKEY", "pub_key", "NULL", "verify_context", "EVP_MD_CTX_new", "verify_context", "NULL", "fprintf", "stderr", "\"EVP_MD_CTX_new failed.\\n\"", "cleanup", "pub_key", "get_key", "libctx", "propq", "pub_key", "NULL", "fprintf", "stderr", "\"Get public key failed.\\n\"", "cleanup", "EVP_DigestVerifyInit_ex", "verify_context", "NULL", "sig_name", "libctx", "NULL", "pub_key", "NULL", "fprintf", "stderr", "\"EVP_DigestVerifyInit failed.\\n\"", "cleanup", "EVP_DigestVerifyUpdate", "verify_context", "hamlet_1", "strlen", "hamlet_1", "fprintf", "stderr", "\"EVP_DigestVerifyUpdate(hamlet_1) failed.\\n\"", "cleanup", "EVP_DigestVerifyUpdate", "verify_context", "hamlet_2", "strlen", "hamlet_2", "fprintf", "stderr", "\"EVP_DigestVerifyUpdate(hamlet_2) failed.\\n\"", "cleanup", "EVP_DigestVerifyFinal", "verify_context", "sig_value", "sig_len", "0", "fprintf", "stderr", "\"EVP_DigestVerifyFinal failed.\\n\"", "cleanup", "fprintf", "stdout", "\"Signature verified.\\n\"", "ret", "1", "cleanup", "EVP_PKEY_free", "pub_key", "EVP_MD_CTX_free", "verify_context", "ret"], "callee_func": ["EVP_MD_CTX_new", "fprintf", "get_key", "fprintf", "EVP_DigestVerifyInit_ex", "fprintf", "EVP_DigestVerifyUpdate", "strlen", "fprintf", "EVP_DigestVerifyUpdate", "strlen", "fprintf", "EVP_DigestVerifyFinal", "fprintf", "fprintf", "EVP_PKEY_free", "EVP_MD_CTX_free"], "function_normalized_hash": "eae88b25a791e945b7599ab38f640071"}, {"line_start": 205, "line_stop": 235, "function_name": "main", "file_path": "signature/EVP_EC_Signature_demo.c", "line_of_code": 25, "operators": ["*", "=", ";", "const", "char", "*", "=", ";", "=", ";", "unsigned", "char", "*", "=", ";", "int", "=", ";", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "&", ",", "&", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "if", "(", "!=", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["OSSL_LIB_CTX", "libctx", "NULL", "sig_name", "\"SHA3-512\"", "size_t", "sig_len", "0", "sig_value", "NULL", "ret", "EXIT_FAILURE", "libctx", "OSSL_LIB_CTX_new", "libctx", "NULL", "fprintf", "stderr", "\"OSSL_LIB_CTX_new() returned NULL\\n\"", "cleanup", "demo_sign", "libctx", "sig_name", "sig_len", "sig_value", "fprintf", "stderr", "\"demo_sign failed.\\n\"", "cleanup", "demo_verify", "libctx", "sig_name", "sig_len", "sig_value", "fprintf", "stderr", "\"demo_verify failed.\\n\"", "cleanup", "ret", "EXIT_SUCCESS", "cleanup", "ret", "EXIT_SUCCESS", "ERR_print_errors_fp", "stderr", "OSSL_LIB_CTX_free", "libctx", "OPENSSL_free", "sig_value", "ret"], "callee_func": ["OSSL_LIB_CTX_new", "fprintf", "demo_sign", "fprintf", "demo_verify", "fprintf", "ERR_print_errors_fp", "OSSL_LIB_CTX_free", "OPENSSL_free"], "function_normalized_hash": "01d0c264cfd9209870fce59e9a603074"}]}, {"file_hash": "9fb5a07fb08908b3db91277a1d76cf56", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/digest/EVP_MD_demo.c", "file_name": "EVP_MD_demo.c", "function_list": [{"line_start": 79, "line_stop": 177, "function_name": "demonstrate_digest", "file_path": "digest/EVP_MD_demo.c", "line_of_code": 74, "operators": ["*", ";", "int", "=", ";", "const", "char", "*", "=", ";", "*", "=", ";", "*", "=", ";", "unsigned", "int", ";", "unsigned", "char", "*", "=", ";", "int", ";", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "(", ")", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "(", ")", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "&", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "for", "(", "=", ";", "<", ";", "++", ")", "{", "(", ",", ",", "[", "]", ")", ";", "}", "(", ",", ")", ";", "if", "(", "(", ")", "!=", "sizeof", "(", ")", ")", "{", "(", ",", ",", ",", "sizeof", "(", ")", ")", ";", "}", "else", "if", "(", "(", ",", ",", ")", "!=", ")", "{", "for", "(", "=", ";", "<", "sizeof", "(", ")", ";", "++", ")", "{", "(", ",", ",", "[", "]", ")", ";", "}", "(", ",", ")", ";", "}", "else", "{", "(", ",", ")", ";", "=", ";", "}", ":", "if", "(", "!=", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["OSSL_LIB_CTX", "library_context", "ret", "0", "option_properties", "NULL", "EVP_MD", "message_digest", "NULL", "EVP_MD_CTX", "digest_context", "NULL", "digest_length", "digest_value", "NULL", "j", "library_context", "OSSL_LIB_CTX_new", "library_context", "NULL", "fprintf", "stderr", "\"OSSL_LIB_CTX_new() returned NULL\\n\"", "cleanup", "message_digest", "EVP_MD_fetch", "library_context", "\"SHA3-512\"", "option_properties", "message_digest", "NULL", "fprintf", "stderr", "\"EVP_MD_fetch could not find SHA3-512.\"", "cleanup", "digest_length", "EVP_MD_get_size", "message_digest", "digest_length", "0", "fprintf", "stderr", "\"EVP_MD_get_size returned invalid size.\\n\"", "cleanup", "digest_value", "OPENSSL_malloc", "digest_length", "digest_value", "NULL", "fprintf", "stderr", "\"No memory.\\n\"", "cleanup", "digest_context", "EVP_MD_CTX_new", "digest_context", "NULL", "fprintf", "stderr", "\"EVP_MD_CTX_new failed.\\n\"", "cleanup", "EVP_DigestInit", "digest_context", "message_digest", "1", "fprintf", "stderr", "\"EVP_DigestInit failed.\\n\"", "cleanup", "EVP_DigestUpdate", "digest_context", "hamlet_1", "strlen", "hamlet_1", "1", "fprintf", "stderr", "\"EVP_DigestUpdate(hamlet_1) failed.\\n\"", "cleanup", "EVP_DigestUpdate", "digest_context", "hamlet_2", "strlen", "hamlet_2", "1", "fprintf", "stderr", "\"EVP_DigestUpdate(hamlet_2) failed.\\n\"", "cleanup", "EVP_DigestFinal", "digest_context", "digest_value", "digest_length", "1", "fprintf", "stderr", "\"EVP_DigestFinal() failed.\\n\"", "cleanup", "j", "0", "j", "digest_length", "j", "fprintf", "stdout", "\"%02x\"", "digest_value", "j", "fprintf", "stdout", "\"\\n\"", "size_t", "digest_length", "known_answer", "fprintf", "stdout", "\"Digest length(%d) not equal to known answer length(%lu).\\n\"", "digest_length", "known_answer", "memcmp", "digest_value", "known_answer", "digest_length", "0", "j", "0", "j", "known_answer", "j", "fprintf", "stdout", "\"%02x\"", "known_answer", "j", "fprintf", "stdout", "\"\\nDigest does not match known answer\\n\"", "fprintf", "stdout", "\"Digest computed properly.\\n\"", "ret", "1", "cleanup", "ret", "1", "ERR_print_errors_fp", "stderr", "EVP_MD_CTX_free", "digest_context", "OPENSSL_free", "digest_value", "EVP_MD_free", "message_digest", "OSSL_LIB_CTX_free", "library_context", "ret"], "callee_func": ["OSSL_LIB_CTX_new", "fprintf", "EVP_MD_fetch", "fprintf", "EVP_MD_get_size", "fprintf", "OPENSSL_malloc", "fprintf", "EVP_MD_CTX_new", "fprintf", "EVP_DigestInit", "fprintf", "EVP_DigestUpdate", "strlen", "fprintf", "EVP_DigestUpdate", "strlen", "fprintf", "EVP_DigestFinal", "fprintf", "fprintf", "fprintf", "fprintf", "memcmp", "fprintf", "fprintf", "fprintf", "ERR_print_errors_fp", "EVP_MD_CTX_free", "OPENSSL_free", "EVP_MD_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "a5f8e0f6af4b403fb647ca6314281651"}, {"line_start": 179, "line_stop": 182, "function_name": "main", "file_path": "digest/EVP_MD_demo.c", "line_of_code": 1, "operators": ["return", "(", ")", "?", ":", ";"], "operands": ["demonstrate_digest", "EXIT_SUCCESS", "EXIT_FAILURE"], "callee_func": ["demonstrate_digest"], "function_normalized_hash": "22c952ca64080c3b566c1360f24def95"}]}, {"file_hash": "eb5524b2af0bb63896cd0bf3b3b7f8d3", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/pkcs12/pkwrite.c", "file_name": "pkwrite.c", "function_list": [{"line_start": 18, "line_stop": 53, "function_name": "main", "file_path": "pkcs12/pkwrite.c", "line_of_code": 33, "operators": ["*", ";", "*", ";", "*", ";", "*", ";", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "(", ")", ";", "(", ")", ";", "if", "(", "(", "=", "(", "[", "]", ",", ")", ")", "==", ")", "{", "(", ",", ",", "[", "]", ")", ";", "(", ")", ";", "}", "=", "(", ",", ",", ",", ")", ";", "(", ")", ";", "=", "(", ",", ",", ",", ")", ";", "(", ")", ";", "=", "(", "[", "]", ",", "[", "]", ",", ",", ",", ",", ",", ",", ",", ",", ")", ";", "if", "(", "!", ")", "{", "(", ",", ")", ";", "(", ")", ";", "(", ")", ";", "}", "if", "(", "(", "=", "(", "[", "]", ",", ")", ")", "==", ")", "{", "(", ",", ",", "[", "]", ")", ";", "(", ")", ";", "(", ")", ";", "}", "(", ",", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["FILE", "fp", "EVP_PKEY", "pkey", "X509", "cert", "PKCS12", "p12", "argc", "5", "fprintf", "stderr", "\"Usage: pkwrite infile password name p12file\\n\"", "exit", "EXIT_FAILURE", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "fp", "fopen", "argv", "1", "\"r\"", "NULL", "fprintf", "stderr", "\"Error opening file %s\\n\"", "argv", "1", "exit", "EXIT_FAILURE", "cert", "PEM_read_X509", "fp", "NULL", "NULL", "NULL", "rewind", "fp", "pkey", "PEM_read_PrivateKey", "fp", "NULL", "NULL", "NULL", "fclose", "fp", "p12", "PKCS12_create", "argv", "2", "argv", "3", "pkey", "cert", "NULL", "0", "0", "0", "0", "0", "p12", "fprintf", "stderr", "\"Error creating PKCS#12 structure\\n\"", "ERR_print_errors_fp", "stderr", "exit", "EXIT_FAILURE", "fp", "fopen", "argv", "4", "\"wb\"", "NULL", "fprintf", "stderr", "\"Error opening file %s\\n\"", "argv", "4", "ERR_print_errors_fp", "stderr", "exit", "EXIT_FAILURE", "i2d_PKCS12_fp", "fp", "p12", "PKCS12_free", "p12", "fclose", "fp", "EXIT_SUCCESS"], "callee_func": ["fprintf", "exit", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "fopen", "fprintf", "exit", "PEM_read_X509", "rewind", "PEM_read_PrivateKey", "fclose", "PKCS12_create", "fprintf", "ERR_print_errors_fp", "exit", "fopen", "fprintf", "ERR_print_errors_fp", "exit", "i2d_PKCS12_fp", "PKCS12_free", "fclose"], "function_normalized_hash": "d8d89ae65a2308b8a8d4ba8bf26fef3d"}]}, {"file_hash": "b2e38352005c7b47e626bfb04839456d", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/pkey/EVP_PKEY_DSA_keygen.c", "file_name": "EVP_PKEY_DSA_keygen.c", "function_list": [{"line_start": 24, "line_stop": 44, "function_name": "dsa_genparams", "file_path": "pkey/EVP_PKEY_DSA_keygen.c", "line_of_code": 15, "operators": ["*", "=", ";", "*", "=", ";", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "return", ";", "}", "if", "(", "(", ")", "<=", "||", "(", ",", "&", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", ":", "(", ")", ";", "return", ";"], "operands": ["EVP_PKEY", "dsaparamkey", "NULL", "EVP_PKEY_CTX", "ctx", "NULL", "ctx", "EVP_PKEY_CTX_new_from_name", "libctx", "\"DSA\"", "propq", "ctx", "NULL", "fprintf", "stderr", "\"EVP_PKEY_CTX_new_from_name() failed\\n\"", "NULL", "EVP_PKEY_paramgen_init", "ctx", "0", "EVP_PKEY_paramgen", "ctx", "dsaparamkey", "0", "fprintf", "stderr", "\"DSA paramgen failed\\n\"", "cleanup", "cleanup", "EVP_PKEY_CTX_free", "ctx", "dsaparamkey"], "callee_func": ["EVP_PKEY_CTX_new_from_name", "fprintf", "EVP_PKEY_paramgen_init", "EVP_PKEY_paramgen", "fprintf", "EVP_PKEY_CTX_free"], "function_normalized_hash": "cd7f0fc62f15b4d27263c4ffc9f7ee55"}, {"line_start": 46, "line_stop": 83, "function_name": "main", "file_path": "pkey/EVP_PKEY_DSA_keygen.c", "line_of_code": 27, "operators": ["int", "=", ";", "*", "=", ";", "const", "char", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "=", "(", ",", ")", ";", "if", "(", "==", ")", "goto", ";", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ")", "<=", "||", "(", ",", "&", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", ",", ")", ")", "goto", ";", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "OSSL_LIB_CTX", "libctx", "NULL", "propq", "NULL", "EVP_PKEY", "dsaparamskey", "NULL", "EVP_PKEY", "dsakey", "NULL", "EVP_PKEY_CTX", "ctx", "NULL", "dsaparamskey", "dsa_genparams", "libctx", "propq", "dsaparamskey", "NULL", "cleanup", "ctx", "EVP_PKEY_CTX_new_from_pkey", "libctx", "dsaparamskey", "propq", "ctx", "NULL", "fprintf", "stderr", "\"EVP_PKEY_CTX_new_from_pkey() failed\\n\"", "cleanup", "EVP_PKEY_keygen_init", "ctx", "0", "EVP_PKEY_keygen", "ctx", "dsakey", "0", "fprintf", "stderr", "\"DSA keygen failed\\n\"", "cleanup", "dsa_print_key", "dsakey", "1", "libctx", "propq", "cleanup", "ret", "EXIT_SUCCESS", "cleanup", "EVP_PKEY_free", "dsakey", "EVP_PKEY_free", "dsaparamskey", "EVP_PKEY_CTX_free", "ctx", "ret"], "callee_func": ["dsa_genparams", "EVP_PKEY_CTX_new_from_pkey", "fprintf", "EVP_PKEY_keygen_init", "EVP_PKEY_keygen", "fprintf", "dsa_print_key", "EVP_PKEY_free", "EVP_PKEY_free", "EVP_PKEY_CTX_free"], "function_normalized_hash": "3de8df9b19e26bfb15fc498becd48705"}]}, {"file_hash": "2dfbdc1f57132a454d2e6a7b553ae33c", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/kdf/scrypt.c", "file_name": "scrypt.c", "function_list": [{"line_start": 60, "line_stop": 120, "function_name": "main", "file_path": "kdf/scrypt.c", "line_of_code": 43, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "unsigned", "char", "[", "]", ";", "[", "]", ",", "*", "=", ";", "*", "=", ";", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "*", "++", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "*", "++", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "*", "++", "=", "(", ",", "&", ")", ";", "*", "++", "=", "(", ",", "&", ")", ";", "*", "++", "=", "(", ",", "&", ")", ";", "*", "=", "(", ")", ";", "if", "(", "(", ",", ",", "sizeof", "(", ")", ",", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "EVP_KDF", "kdf", "NULL", "EVP_KDF_CTX", "kctx", "NULL", "out", "64", "OSSL_PARAM", "params", "6", "p", "params", "OSSL_LIB_CTX", "library_context", "NULL", "library_context", "OSSL_LIB_CTX_new", "library_context", "NULL", "fprintf", "stderr", "\"OSSL_LIB_CTX_new() returned NULL\\n\"", "end", "kdf", "EVP_KDF_fetch", "library_context", "\"SCRYPT\"", "NULL", "kdf", "NULL", "fprintf", "stderr", "\"EVP_KDF_fetch() returned NULL\\n\"", "end", "kctx", "EVP_KDF_CTX_new", "kdf", "kctx", "NULL", "fprintf", "stderr", "\"EVP_KDF_CTX_new() returned NULL\\n\"", "end", "p", "OSSL_PARAM_construct_octet_string", "OSSL_KDF_PARAM_PASSWORD", "password", "password", "p", "OSSL_PARAM_construct_octet_string", "OSSL_KDF_PARAM_SALT", "scrypt_salt", "scrypt_salt", "p", "OSSL_PARAM_construct_uint", "OSSL_KDF_PARAM_SCRYPT_N", "scrypt_n", "p", "OSSL_PARAM_construct_uint", "OSSL_KDF_PARAM_SCRYPT_R", "scrypt_r", "p", "OSSL_PARAM_construct_uint", "OSSL_KDF_PARAM_SCRYPT_P", "scrypt_p", "p", "OSSL_PARAM_construct_end", "EVP_KDF_derive", "kctx", "out", "out", "params", "1", "fprintf", "stderr", "\"EVP_KDF_derive() failed\\n\"", "end", "CRYPTO_memcmp", "expected_output", "out", "expected_output", "0", "fprintf", "stderr", "\"Generated key does not match expected value\\n\"", "end", "ret", "EXIT_SUCCESS", "end", "EVP_KDF_CTX_free", "kctx", "EVP_KDF_free", "kdf", "OSSL_LIB_CTX_free", "library_context", "ret"], "callee_func": ["OSSL_LIB_CTX_new", "fprintf", "EVP_KDF_fetch", "fprintf", "EVP_KDF_CTX_new", "fprintf", "OSSL_PARAM_construct_octet_string", "OSSL_PARAM_construct_octet_string", "OSSL_PARAM_construct_uint", "OSSL_PARAM_construct_uint", "OSSL_PARAM_construct_uint", "OSSL_PARAM_construct_end", "EVP_KDF_derive", "fprintf", "CRYPTO_memcmp", "fprintf", "EVP_KDF_CTX_free", "EVP_KDF_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "77570137c88e69b286c4b710f00e8960"}]}, {"file_hash": "48b8b380222b89fe5469a6643a9cfd26", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/bio/client-conf.c", "file_name": "client-conf.c", "function_list": [{"line_start": 15, "line_stop": 120, "function_name": "main", "file_path": "bio/client-conf.c", "line_of_code": 80, "operators": ["*", "=", ",", "*", "=", ";", "int", ",", ",", ";", "char", "[", "]", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "(", ")", "*", "=", ";", "*", ";", "const", "char", "*", "=", ";", "long", "=", "-", ";", "int", "=", ";", "=", "(", ")", ";", "if", "(", "(", ",", ",", "&", ")", "<=", ")", "{", "if", "(", "<=", ")", "(", ",", ")", ";", "else", "(", ",", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", "(", ")", ")", ";", "=", "(", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "for", "(", "=", ";", "<", "(", ")", ";", "++", ")", "{", "=", "(", ",", ")", ";", "=", "(", ",", "->", ",", "->", ")", ";", "if", "(", ">", ")", "continue", ";", "if", "(", "!=", "-", ")", "{", "(", ",", ",", "->", ",", "->", ")", ";", "(", ")", ";", "goto", ";", "}", "if", "(", "(", "->", ",", ")", "==", ")", "{", "=", "->", ";", "}", "else", "{", "(", ",", ",", "->", ")", ";", "goto", ";", "}", "}", "if", "(", "!", "(", ")", ")", "{", "(", ",", ")", ";", "(", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "(", ",", "&", ")", ";", "if", "(", "!", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ",", ")", ";", "=", "(", ",", ")", ";", "if", "(", "(", ")", "<=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "goto", ";", "}", "(", ",", ")", ";", "for", "(", ";", ";", ")", "{", "=", "(", ",", ",", ")", ";", "if", "(", "<=", ")", "break", ";", "(", ",", ",", ")", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "sbio", "NULL", "out", "NULL", "i", "len", "rv", "tmpbuf", "1024", "SSL_CTX", "ctx", "NULL", "SSL_CONF_CTX", "cctx", "NULL", "SSL", "ssl", "NULL", "CONF", "conf", "NULL", "STACK_OF", "CONF_VALUE", "sect", "NULL", "CONF_VALUE", "cnf", "connect_str", "\"localhost:4433\"", "errline", "1", "ret", "EXIT_FAILURE", "conf", "NCONF_new", "NULL", "NCONF_load", "conf", "\"connect.cnf\"", "errline", "0", "errline", "0", "fprintf", "stderr", "\"Error processing config file\\n\"", "fprintf", "stderr", "\"Error on line %ld\\n\"", "errline", "end", "sect", "NCONF_get_section", "conf", "\"default\"", "sect", "NULL", "fprintf", "stderr", "\"Error retrieving default section\\n\"", "end", "ctx", "SSL_CTX_new", "TLS_client_method", "cctx", "SSL_CONF_CTX_new", "SSL_CONF_CTX_set_flags", "cctx", "SSL_CONF_FLAG_CLIENT", "SSL_CONF_CTX_set_flags", "cctx", "SSL_CONF_FLAG_FILE", "SSL_CONF_CTX_set_ssl_ctx", "cctx", "ctx", "i", "0", "i", "sk_CONF_VALUE_num", "sect", "i", "cnf", "sk_CONF_VALUE_value", "sect", "i", "rv", "SSL_CONF_cmd", "cctx", "cnf", "name", "cnf", "value", "rv", "0", "rv", "2", "fprintf", "stderr", "\"Error processing %s = %s\\n\"", "cnf", "name", "cnf", "value", "ERR_print_errors_fp", "stderr", "end", "strcmp", "cnf", "name", "\"Connect\"", "0", "connect_str", "cnf", "value", "fprintf", "stderr", "\"Unknown configuration option %s\\n\"", "cnf", "name", "end", "SSL_CONF_CTX_finish", "cctx", "fprintf", "stderr", "\"Finish error\\n\"", "ERR_print_errors_fp", "stderr", "end", "sbio", "BIO_new_ssl_connect", "ctx", "BIO_get_ssl", "sbio", "ssl", "ssl", "fprintf", "stderr", "\"Can't locate SSL pointer\\n\"", "end", "BIO_set_conn_hostname", "sbio", "connect_str", "out", "BIO_new_fp", "stdout", "BIO_NOCLOSE", "BIO_do_connect", "sbio", "0", "fprintf", "stderr", "\"Error connecting to server\\n\"", "ERR_print_errors_fp", "stderr", "end", "BIO_puts", "sbio", "\"GET / HTTP/1.0\\n\\n\"", "len", "BIO_read", "sbio", "tmpbuf", "1024", "len", "0", "BIO_write", "out", "tmpbuf", "len", "ret", "EXIT_SUCCESS", "end", "SSL_CONF_CTX_free", "cctx", "BIO_free_all", "sbio", "BIO_free", "out", "NCONF_free", "conf", "ret"], "callee_func": ["STACK_OF", "NCONF_new", "NCONF_load", "fprintf", "fprintf", "NCONF_get_section", "fprintf", "SSL_CTX_new", "TLS_client_method", "SSL_CONF_CTX_new", "SSL_CONF_CTX_set_flags", "SSL_CONF_CTX_set_flags", "SSL_CONF_CTX_set_ssl_ctx", "sk_CONF_VALUE_num", "sk_CONF_VALUE_value", "SSL_CONF_cmd", "fprintf", "ERR_print_errors_fp", "strcmp", "fprintf", "SSL_CONF_CTX_finish", "fprintf", "ERR_print_errors_fp", "BIO_new_ssl_connect", "BIO_get_ssl", "fprintf", "BIO_set_conn_hostname", "BIO_new_fp", "BIO_do_connect", "fprintf", "ERR_print_errors_fp", "BIO_puts", "BIO_read", "BIO_write", "SSL_CONF_CTX_free", "BIO_free_all", "BIO_free", "NCONF_free"], "function_normalized_hash": "f8c2e6a3280f4cd35a495335f7fbfb3f"}]}, {"file_hash": "616de56c95673bcd001baa77ae33efb0", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/kdf/pbkdf2.c", "file_name": "pbkdf2.c", "function_list": [{"line_start": 58, "line_stop": 117, "function_name": "main", "file_path": "kdf/pbkdf2.c", "line_of_code": 43, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "unsigned", "char", "[", "]", ";", "[", "]", ",", "*", "=", ";", "*", "=", ";", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "*", "++", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "*", "++", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "*", "++", "=", "(", ",", "&", ")", ";", "*", "++", "=", "(", ",", ",", ")", ";", "*", "=", "(", ")", ";", "if", "(", "(", ",", ",", "sizeof", "(", ")", ",", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "EVP_KDF", "kdf", "NULL", "EVP_KDF_CTX", "kctx", "NULL", "out", "64", "OSSL_PARAM", "params", "5", "p", "params", "OSSL_LIB_CTX", "library_context", "NULL", "library_context", "OSSL_LIB_CTX_new", "library_context", "NULL", "fprintf", "stderr", "\"OSSL_LIB_CTX_new() returned NULL\\n\"", "end", "kdf", "EVP_KDF_fetch", "library_context", "\"PBKDF2\"", "NULL", "kdf", "NULL", "fprintf", "stderr", "\"EVP_KDF_fetch() returned NULL\\n\"", "end", "kctx", "EVP_KDF_CTX_new", "kdf", "kctx", "NULL", "fprintf", "stderr", "\"EVP_KDF_CTX_new() returned NULL\\n\"", "end", "p", "OSSL_PARAM_construct_octet_string", "OSSL_KDF_PARAM_PASSWORD", "password", "password", "p", "OSSL_PARAM_construct_octet_string", "OSSL_KDF_PARAM_SALT", "pbkdf2_salt", "pbkdf2_salt", "p", "OSSL_PARAM_construct_uint", "OSSL_KDF_PARAM_ITER", "pbkdf2_iterations", "p", "OSSL_PARAM_construct_utf8_string", "OSSL_KDF_PARAM_DIGEST", "\"SHA256\"", "0", "p", "OSSL_PARAM_construct_end", "EVP_KDF_derive", "kctx", "out", "out", "params", "1", "fprintf", "stderr", "\"EVP_KDF_derive() failed\\n\"", "end", "CRYPTO_memcmp", "expected_output", "out", "expected_output", "0", "fprintf", "stderr", "\"Generated key does not match expected value\\n\"", "end", "ret", "EXIT_SUCCESS", "end", "EVP_KDF_CTX_free", "kctx", "EVP_KDF_free", "kdf", "OSSL_LIB_CTX_free", "library_context", "ret"], "callee_func": ["OSSL_LIB_CTX_new", "fprintf", "EVP_KDF_fetch", "fprintf", "EVP_KDF_CTX_new", "fprintf", "OSSL_PARAM_construct_octet_string", "OSSL_PARAM_construct_octet_string", "OSSL_PARAM_construct_uint", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_end", "EVP_KDF_derive", "fprintf", "CRYPTO_memcmp", "fprintf", "EVP_KDF_CTX_free", "EVP_KDF_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "d5502f15ecbb1da5e87fe23a507ea375"}]}, {"file_hash": "4c40cc7b458702e3471ee7617e98c27f", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/kdf/argon2.c", "file_name": "argon2.c", "function_list": [{"line_start": 75, "line_stop": 154, "function_name": "main", "file_path": "kdf/argon2.c", "line_of_code": 53, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "unsigned", "char", "[", "]", ";", "[", "]", ",", "*", "=", ";", "*", "=", ";", "unsigned", "int", ";", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", "if", "(", "(", ",", ")", "!=", ")", "{", "=", "(", ")", ";", "if", "(", "==", ")", "=", ";", "else", "if", "(", "<", ")", "=", ";", "}", "*", "++", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "*", "++", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "*", "++", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "*", "++", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "*", "++", "=", "(", ",", "&", ")", ";", "*", "++", "=", "(", ",", "&", ")", ";", "*", "++", "=", "(", ",", "&", ")", ";", "*", "++", "=", "(", ",", "&", ")", ";", "*", "=", "(", ")", ";", "if", "(", "(", ",", ",", "sizeof", "(", ")", ",", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["rv", "EXIT_FAILURE", "EVP_KDF", "kdf", "NULL", "EVP_KDF_CTX", "kctx", "NULL", "out", "32", "OSSL_PARAM", "params", "9", "p", "params", "OSSL_LIB_CTX", "library_context", "NULL", "threads", "library_context", "OSSL_LIB_CTX_new", "library_context", "NULL", "fprintf", "stderr", "\"OSSL_LIB_CTX_new() returned NULL\\n\"", "end", "kdf", "EVP_KDF_fetch", "library_context", "\"argon2id\"", "NULL", "kdf", "NULL", "fprintf", "stderr", "\"EVP_KDF_fetch() returned NULL\\n\"", "end", "kctx", "EVP_KDF_CTX_new", "kdf", "kctx", "NULL", "fprintf", "stderr", "\"EVP_KDF_CTX_new() returned NULL\\n\"", "end", "threads", "parallel_cost", "OSSL_set_max_threads", "library_context", "parallel_cost", "1", "uint64_t", "max_threads", "OSSL_get_max_threads", "library_context", "max_threads", "0", "threads", "1", "max_threads", "parallel_cost", "threads", "max_threads", "p", "OSSL_PARAM_construct_octet_string", "OSSL_KDF_PARAM_PASSWORD", "password", "password", "p", "OSSL_PARAM_construct_octet_string", "OSSL_KDF_PARAM_SALT", "salt", "salt", "p", "OSSL_PARAM_construct_octet_string", "OSSL_KDF_PARAM_ARGON2_AD", "ad", "ad", "p", "OSSL_PARAM_construct_octet_string", "OSSL_KDF_PARAM_SECRET", "secret", "secret", "p", "OSSL_PARAM_construct_uint32", "OSSL_KDF_PARAM_ITER", "iteration_cost", "p", "OSSL_PARAM_construct_uint", "OSSL_KDF_PARAM_THREADS", "threads", "p", "OSSL_PARAM_construct_uint32", "OSSL_KDF_PARAM_ARGON2_LANES", "parallel_cost", "p", "OSSL_PARAM_construct_uint32", "OSSL_KDF_PARAM_ARGON2_MEMCOST", "memory_cost", "p", "OSSL_PARAM_construct_end", "EVP_KDF_derive", "kctx", "out", "out", "params", "1", "fprintf", "stderr", "\"EVP_KDF_derive() failed\\n\"", "end", "CRYPTO_memcmp", "expected_output", "out", "expected_output", "0", "fprintf", "stderr", "\"Generated key does not match expected value\\n\"", "end", "rv", "EXIT_SUCCESS", "end", "EVP_KDF_CTX_free", "kctx", "EVP_KDF_free", "kdf", "OSSL_LIB_CTX_free", "library_context", "rv"], "callee_func": ["OSSL_LIB_CTX_new", "fprintf", "EVP_KDF_fetch", "fprintf", "EVP_KDF_CTX_new", "fprintf", "OSSL_set_max_threads", "OSSL_get_max_threads", "OSSL_PARAM_construct_octet_string", "OSSL_PARAM_construct_octet_string", "OSSL_PARAM_construct_octet_string", "OSSL_PARAM_construct_octet_string", "OSSL_PARAM_construct_uint32", "OSSL_PARAM_construct_uint", "OSSL_PARAM_construct_uint32", "OSSL_PARAM_construct_uint32", "OSSL_PARAM_construct_end", "EVP_KDF_derive", "fprintf", "CRYPTO_memcmp", "fprintf", "EVP_KDF_CTX_free", "EVP_KDF_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "8d66bead9944036b6a4a928c02d987b4"}]}, {"file_hash": "0ba3223aa6303458c2619a15f381eaec", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/cms/cms_sign.c", "file_name": "cms_sign.c", "function_list": [{"line_start": 15, "line_stop": 86, "function_name": "main", "file_path": "cms/cms_sign.c", "line_of_code": 42, "operators": ["*", "=", ",", "*", "=", ",", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "int", "=", ";", "int", "=", "|", ";", "(", ")", ";", "(", ")", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ")", ";", "(", ")", ";", "=", "(", ",", ",", ",", ")", ";", "if", "(", "!", "||", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "if", "(", "!", "(", "&", ")", ")", "(", ")", ";", "if", "(", "!", "(", ",", ",", ",", ")", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "in", "NULL", "out", "NULL", "tbio", "NULL", "X509", "scert", "NULL", "EVP_PKEY", "skey", "NULL", "CMS_ContentInfo", "cms", "NULL", "ret", "EXIT_FAILURE", "flags", "CMS_DETACHED", "CMS_STREAM", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "tbio", "BIO_new_file", "\"signer.pem\"", "\"r\"", "tbio", "err", "scert", "PEM_read_bio_X509", "tbio", "NULL", "0", "NULL", "BIO_reset", "tbio", "skey", "PEM_read_bio_PrivateKey", "tbio", "NULL", "0", "NULL", "scert", "skey", "err", "in", "BIO_new_file", "\"sign.txt\"", "\"r\"", "in", "err", "cms", "CMS_sign", "scert", "skey", "NULL", "in", "flags", "cms", "err", "out", "BIO_new_file", "\"smout.txt\"", "\"w\"", "out", "err", "flags", "CMS_STREAM", "BIO_reset", "in", "SMIME_write_CMS", "out", "cms", "in", "flags", "err", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "fprintf", "stderr", "\"Error Signing Data\\n\"", "ERR_print_errors_fp", "stderr", "CMS_ContentInfo_free", "cms", "X509_free", "scert", "EVP_PKEY_free", "skey", "BIO_free", "in", "BIO_free", "out", "BIO_free", "tbio", "ret"], "callee_func": ["OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "BIO_new_file", "PEM_read_bio_X509", "BIO_reset", "PEM_read_bio_PrivateKey", "BIO_new_file", "CMS_sign", "BIO_new_file", "BIO_reset", "SMIME_write_CMS", "fprintf", "ERR_print_errors_fp", "CMS_ContentInfo_free", "X509_free", "EVP_PKEY_free", "BIO_free", "BIO_free", "BIO_free"], "function_normalized_hash": "f13ff73b2ef3c03aa6ca2d6afec1c5e1"}]}, {"file_hash": "6870c1287ce08180ae71ece95782baf5", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/cms/cms_enc.c", "file_name": "cms_enc.c", "function_list": [{"line_start": 15, "line_stop": 90, "function_name": "main", "file_path": "cms/cms_enc.c", "line_of_code": 42, "operators": ["*", "=", ",", "*", "=", ",", "*", "=", ";", "*", "=", ";", "(", ")", "*", "=", ";", "*", "=", ";", "int", "=", ";", "int", "=", ";", "(", ")", ";", "(", ")", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ")", ";", "if", "(", "!", "||", "!", "(", ",", ")", ")", "goto", ";", "=", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", "(", ")", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ")", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "in", "NULL", "out", "NULL", "tbio", "NULL", "X509", "rcert", "NULL", "STACK_OF", "X509", "recips", "NULL", "CMS_ContentInfo", "cms", "NULL", "ret", "EXIT_FAILURE", "flags", "CMS_STREAM", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "tbio", "BIO_new_file", "\"signer.pem\"", "\"r\"", "tbio", "err", "rcert", "PEM_read_bio_X509", "tbio", "NULL", "0", "NULL", "rcert", "err", "recips", "sk_X509_new_null", "recips", "sk_X509_push", "recips", "rcert", "err", "rcert", "NULL", "in", "BIO_new_file", "\"encr.txt\"", "\"r\"", "in", "err", "cms", "CMS_encrypt", "recips", "in", "EVP_des_ede3_cbc", "flags", "cms", "err", "out", "BIO_new_file", "\"smencr.txt\"", "\"w\"", "out", "err", "SMIME_write_CMS", "out", "cms", "in", "flags", "err", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "fprintf", "stderr", "\"Error Encrypting Data\\n\"", "ERR_print_errors_fp", "stderr", "CMS_ContentInfo_free", "cms", "X509_free", "rcert", "OSSL_STACK_OF_X509_free", "recips", "BIO_free", "in", "BIO_free", "out", "BIO_free", "tbio", "ret"], "callee_func": ["STACK_OF", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "BIO_new_file", "PEM_read_bio_X509", "sk_X509_new_null", "sk_X509_push", "BIO_new_file", "CMS_encrypt", "EVP_des_ede3_cbc", "BIO_new_file", "SMIME_write_CMS", "fprintf", "ERR_print_errors_fp", "CMS_ContentInfo_free", "X509_free", "OSSL_STACK_OF_X509_free", "BIO_free", "BIO_free", "BIO_free"], "function_normalized_hash": "c0efa203cb4c6a8a5ee615bcbded620f"}]}, {"file_hash": "dde452c4c32da45c6df1c63c64e41253", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/cipher/aeskeywrap.c", "file_name": "aeskeywrap.c", "function_list": [{"line_start": 56, "line_stop": 112, "function_name": "aes_wrap_encrypt", "file_path": "cipher/aeskeywrap.c", "line_of_code": 33, "operators": ["int", "=", ";", "*", ";", "*", "=", ";", "int", ",", ";", "unsigned", "char", "[", "]", ";", "(", ")", ";", "(", ")", ";", "(", ",", ",", "sizeof", "(", ")", ")", ";", "if", "(", "(", "=", "(", ")", ")", "==", ")", "goto", ";", "(", ",", ")", ";", "if", "(", "(", "=", "(", ",", ",", ")", ")", "==", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", "&", ",", ",", "sizeof", "(", ")", ")", ")", "goto", ";", "if", "(", "!", "(", ",", "+", ",", "&", ")", ")", "goto", ";", "+=", ";", "(", ",", ")", ";", "(", ",", ",", ")", ";", "if", "(", "sizeof", "(", ")", "==", "&&", "!", "(", ",", ",", ")", ")", "(", ")", ";", "else", "(", ")", ";", "=", ";", ":", "if", "(", "!", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "EVP_CIPHER_CTX", "ctx", "EVP_CIPHER", "cipher", "NULL", "outlen", "tmplen", "outbuf", "1024", "printf", "\"aes wrap Encrypt:\\n\"", "printf", "\"Plaintext:\\n\"", "BIO_dump_fp", "stdout", "wrap_pt", "wrap_pt", "ctx", "EVP_CIPHER_CTX_new", "NULL", "err", "EVP_CIPHER_CTX_set_flags", "ctx", "EVP_CIPHER_CTX_FLAG_WRAP_ALLOW", "cipher", "EVP_CIPHER_fetch", "libctx", "\"AES-256-WRAP\"", "propq", "NULL", "err", "EVP_EncryptInit_ex2", "ctx", "cipher", "wrap_key", "wrap_iv", "NULL", "err", "EVP_EncryptUpdate", "ctx", "outbuf", "outlen", "wrap_pt", "wrap_pt", "err", "EVP_EncryptFinal_ex", "ctx", "outbuf", "outlen", "tmplen", "err", "outlen", "tmplen", "printf", "\"Ciphertext (outlen:%d):\\n\"", "outlen", "BIO_dump_fp", "stdout", "outbuf", "outlen", "wrap_ct", "outlen", "CRYPTO_memcmp", "outbuf", "wrap_ct", "outlen", "printf", "\"Final ciphertext matches expected ciphertext\\n\"", "printf", "\"Final ciphertext differs from expected ciphertext\\n\"", "ret", "1", "err", "ret", "ERR_print_errors_fp", "stderr", "EVP_CIPHER_free", "cipher", "EVP_CIPHER_CTX_free", "ctx", "ret"], "callee_func": ["printf", "printf", "BIO_dump_fp", "EVP_CIPHER_CTX_new", "EVP_CIPHER_CTX_set_flags", "EVP_CIPHER_fetch", "EVP_EncryptInit_ex2", "EVP_EncryptUpdate", "EVP_EncryptFinal_ex", "printf", "BIO_dump_fp", "CRYPTO_memcmp", "printf", "printf", "ERR_print_errors_fp", "EVP_CIPHER_free", "EVP_CIPHER_CTX_free"], "function_normalized_hash": "a7381fa1f0b4e0fa7bf30b0f99c844ea"}, {"line_start": 114, "line_stop": 169, "function_name": "aes_wrap_decrypt", "file_path": "cipher/aeskeywrap.c", "line_of_code": 33, "operators": ["int", "=", ";", "*", ";", "*", "=", ";", "int", ",", ";", "unsigned", "char", "[", "]", ";", "(", ")", ";", "(", ")", ";", "(", ",", ",", "sizeof", "(", ")", ")", ";", "if", "(", "(", "=", "(", ")", ")", "==", ")", "goto", ";", "(", ",", ")", ";", "if", "(", "(", "=", "(", ",", ",", ")", ")", "==", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", "&", ",", ",", "sizeof", "(", ")", ")", ")", "goto", ";", "if", "(", "!", "(", ",", "+", ",", "&", ")", ")", "goto", ";", "+=", ";", "(", ",", ")", ";", "(", ",", ",", ")", ";", "if", "(", "sizeof", "(", ")", "==", "&&", "!", "(", ",", ",", ")", ")", "(", ")", ";", "else", "(", ")", ";", "=", ";", ":", "if", "(", "!", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "EVP_CIPHER_CTX", "ctx", "EVP_CIPHER", "cipher", "NULL", "outlen", "tmplen", "outbuf", "1024", "printf", "\"aes wrap Decrypt:\\n\"", "printf", "\"Ciphertext:\\n\"", "BIO_dump_fp", "stdout", "wrap_ct", "wrap_ct", "ctx", "EVP_CIPHER_CTX_new", "NULL", "err", "EVP_CIPHER_CTX_set_flags", "ctx", "EVP_CIPHER_CTX_FLAG_WRAP_ALLOW", "cipher", "EVP_CIPHER_fetch", "libctx", "\"aes-256-wrap\"", "propq", "NULL", "err", "EVP_DecryptInit_ex2", "ctx", "cipher", "wrap_key", "wrap_iv", "NULL", "err", "EVP_DecryptUpdate", "ctx", "outbuf", "outlen", "wrap_ct", "wrap_ct", "err", "EVP_DecryptFinal_ex", "ctx", "outbuf", "outlen", "tmplen", "err", "outlen", "tmplen", "printf", "\"Plaintext (outlen:%d):\\n\"", "outlen", "BIO_dump_fp", "stdout", "outbuf", "outlen", "wrap_pt", "outlen", "CRYPTO_memcmp", "outbuf", "wrap_pt", "outlen", "printf", "\"Final plaintext matches original plaintext\\n\"", "printf", "\"Final plaintext differs from original plaintext\\n\"", "ret", "1", "err", "ret", "ERR_print_errors_fp", "stderr", "EVP_CIPHER_free", "cipher", "EVP_CIPHER_CTX_free", "ctx", "ret"], "callee_func": ["printf", "printf", "BIO_dump_fp", "EVP_CIPHER_CTX_new", "EVP_CIPHER_CTX_set_flags", "EVP_CIPHER_fetch", "EVP_DecryptInit_ex2", "EVP_DecryptUpdate", "EVP_DecryptFinal_ex", "printf", "BIO_dump_fp", "CRYPTO_memcmp", "printf", "printf", "ERR_print_errors_fp", "EVP_CIPHER_free", "EVP_CIPHER_CTX_free"], "function_normalized_hash": "1327ea4afc54bfe6616d03eb760a8d61"}, {"line_start": 171, "line_stop": 180, "function_name": "main", "file_path": "cipher/aeskeywrap.c", "line_of_code": 5, "operators": ["if", "(", "!", "(", ")", ")", "return", ";", "if", "(", "!", "(", ")", ")", "return", ";", "return", ";"], "operands": ["aes_wrap_encrypt", "EXIT_FAILURE", "aes_wrap_decrypt", "EXIT_FAILURE", "EXIT_SUCCESS"], "callee_func": ["aes_wrap_encrypt", "aes_wrap_decrypt"], "function_normalized_hash": "404f799dc27316287429d6a1b5d01125"}]}, {"file_hash": "c56889a49baf1bc96686c918fd75001c", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/keyexch/x25519.c", "file_name": "x25519.c", "function_list": [{"line_start": 63, "line_stop": 110, "function_name": "keyexch_x25519_before", "file_path": "keyexch/x25519.c", "line_of_code": 33, "operators": ["int", "=", ";", "=", ";", "if", "(", "!=", ")", "->", "=", "(", ",", ",", ",", ",", "sizeof", "(", ")", ")", ";", "else", "->", "=", "(", ",", ",", ")", ";", "if", "(", "->", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", "->", ",", ",", "->", ",", "sizeof", "(", "->", ")", ",", "&", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "if", "(", "==", ")", "{", "(", "->", ")", ";", "->", "=", ";", "}", "return", ";"], "operands": ["ret", "0", "size_t", "pubk_data_len", "0", "kat_privk_data", "NULL", "local_peer", "privk", "EVP_PKEY_new_raw_private_key_ex", "libctx", "\"X25519\"", "propq", "kat_privk_data", "peer1_privk_data", "local_peer", "privk", "EVP_PKEY_Q_keygen", "libctx", "propq", "\"X25519\"", "local_peer", "privk", "NULL", "fprintf", "stderr", "\"Could not load or generate private key\\n\"", "end", "EVP_PKEY_get_octet_string_param", "local_peer", "privk", "OSSL_PKEY_PARAM_PUB_KEY", "local_peer", "pubk_data", "local_peer", "pubk_data", "pubk_data_len", "0", "fprintf", "stderr", "\"EVP_PKEY_get_octet_string_param() failed\\n\"", "end", "pubk_data_len", "32", "fprintf", "stderr", "\"EVP_PKEY_get_octet_string_param() \"", "\"yielded wrong length\\n\"", "end", "ret", "1", "end", "ret", "0", "EVP_PKEY_free", "local_peer", "privk", "local_peer", "privk", "NULL", "ret"], "callee_func": ["EVP_PKEY_new_raw_private_key_ex", "EVP_PKEY_Q_keygen", "fprintf", "EVP_PKEY_get_octet_string_param", "fprintf", "fprintf", "EVP_PKEY_free"], "function_normalized_hash": "db7faf599b57c3f77575a0b1bf683833"}, {"line_start": 117, "line_stop": 201, "function_name": "keyexch_x25519_after", "file_path": "keyexch/x25519.c", "line_of_code": 54, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "->", "=", ";", "=", "(", ",", ",", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", "->", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "&", "->", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "->", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "->", "=", "(", "->", ")", ";", "if", "(", "->", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", "->", ",", "&", "->", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ",", "->", ")", ";", "(", ",", "->", ",", "->", ",", ")", ";", "(", ")", ";", "=", ";", ":", "(", ")", ";", "(", ")", ";", "if", "(", "==", ")", "{", "(", "->", ",", "->", ")", ";", "->", "=", ";", "}", "return", ";"], "operands": ["ret", "0", "EVP_PKEY", "remote_peer_pubk", "NULL", "EVP_PKEY_CTX", "ctx", "NULL", "local_peer", "secret", "NULL", "remote_peer_pubk", "EVP_PKEY_new_raw_public_key_ex", "libctx", "\"X25519\"", "propq", "remote_peer_pubk_data", "32", "remote_peer_pubk", "NULL", "fprintf", "stderr", "\"EVP_PKEY_new_raw_public_key_ex() failed\\n\"", "end", "ctx", "EVP_PKEY_CTX_new_from_pkey", "libctx", "local_peer", "privk", "propq", "ctx", "NULL", "fprintf", "stderr", "\"EVP_PKEY_CTX_new_from_pkey() failed\\n\"", "end", "EVP_PKEY_derive_init", "ctx", "0", "fprintf", "stderr", "\"EVP_PKEY_derive_init() failed\\n\"", "end", "EVP_PKEY_derive_set_peer", "ctx", "remote_peer_pubk", "0", "fprintf", "stderr", "\"EVP_PKEY_derive_set_peer() failed\\n\"", "end", "EVP_PKEY_derive", "ctx", "NULL", "local_peer", "secret_len", "0", "fprintf", "stderr", "\"EVP_PKEY_derive() failed\\n\"", "end", "local_peer", "secret_len", "32", "fprintf", "stderr", "\"Secret is always 32 bytes for X25519\\n\"", "end", "local_peer", "secret", "OPENSSL_malloc", "local_peer", "secret_len", "local_peer", "secret", "NULL", "fprintf", "stderr", "\"Could not allocate memory for secret\\n\"", "end", "EVP_PKEY_derive", "ctx", "local_peer", "secret", "local_peer", "secret_len", "0", "fprintf", "stderr", "\"EVP_PKEY_derive() failed\\n\"", "end", "printf", "\"Shared secret (%s):\\n\"", "local_peer", "name", "BIO_dump_indent_fp", "stdout", "local_peer", "secret", "local_peer", "secret_len", "2", "putchar", "'\\n'", "ret", "1", "end", "EVP_PKEY_CTX_free", "ctx", "EVP_PKEY_free", "remote_peer_pubk", "ret", "0", "OPENSSL_clear_free", "local_peer", "secret", "local_peer", "secret_len", "local_peer", "secret", "NULL", "ret"], "callee_func": ["EVP_PKEY_new_raw_public_key_ex", "fprintf", "EVP_PKEY_CTX_new_from_pkey", "fprintf", "EVP_PKEY_derive_init", "fprintf", "EVP_PKEY_derive_set_peer", "fprintf", "EVP_PKEY_derive", "fprintf", "fprintf", "OPENSSL_malloc", "fprintf", "EVP_PKEY_derive", "fprintf", "printf", "BIO_dump_indent_fp", "putchar", "EVP_PKEY_CTX_free", "EVP_PKEY_free", "OPENSSL_clear_free"], "function_normalized_hash": "965550354764b5b1c0c2ba9aef24752a"}, {"line_start": 203, "line_stop": 263, "function_name": "keyexch_x25519", "file_path": "keyexch/x25519.c", "line_of_code": 30, "operators": ["int", "=", ";", "*", "=", ";", "=", "{", ",", "=", "{", ";", "if", "(", "(", ",", "?", ":", ",", "&", ")", "==", ")", "return", ";", "if", "(", "(", ",", "?", ":", ",", "&", ")", "==", ")", "return", ";", "if", "(", "(", ",", ",", "&", ",", ".", ")", "==", ")", "return", ";", "if", "(", "(", ",", ",", "&", ",", ".", ")", "==", ")", "return", ";", "if", "(", "(", ".", ",", ".", ",", ".", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "&&", "(", ".", ",", ",", ".", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ".", ",", ".", ")", ";", "(", ".", ",", ".", ")", ";", "(", ".", ")", ";", "(", ".", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "OSSL_LIB_CTX", "libctx", "NULL", "PEER_DATA", "peer1", "\"peer 1\"", "peer2", "\"peer 2\"", "keyexch_x25519_before", "libctx", "use_kat", "peer1_privk_data", "NULL", "peer1", "0", "0", "keyexch_x25519_before", "libctx", "use_kat", "peer2_privk_data", "NULL", "peer2", "0", "0", "keyexch_x25519_after", "libctx", "use_kat", "peer1", "peer2", "pubk_data", "0", "0", "keyexch_x25519_after", "libctx", "use_kat", "peer2", "peer1", "pubk_data", "0", "0", "CRYPTO_memcmp", "peer1", "secret", "peer2", "secret", "peer1", "secret_len", "0", "fprintf", "stderr", "\"Negotiated secrets do not match\\n\"", "end", "use_kat", "CRYPTO_memcmp", "peer1", "secret", "expected_result", "peer1", "secret_len", "0", "fprintf", "stderr", "\"Did not get expected result\\n\"", "end", "ret", "1", "end", "OPENSSL_clear_free", "peer1", "secret", "peer1", "secret_len", "OPENSSL_clear_free", "peer2", "secret", "peer2", "secret_len", "EVP_PKEY_free", "peer1", "privk", "EVP_PKEY_free", "peer2", "privk", "OSSL_LIB_CTX_free", "libctx", "ret"], "callee_func": ["keyexch_x25519_before", "keyexch_x25519_before", "keyexch_x25519_after", "keyexch_x25519_after", "CRYPTO_memcmp", "fprintf", "CRYPTO_memcmp", "fprintf", "OPENSSL_clear_free", "OPENSSL_clear_free", "EVP_PKEY_free", "EVP_PKEY_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "66441193a9e89787f151d379dd50c21b"}, {"line_start": 265, "line_stop": 278, "function_name": "main", "file_path": "keyexch/x25519.c", "line_of_code": 7, "operators": ["(", ")", ";", "if", "(", "(", ")", "==", ")", "return", ";", "(", ")", ";", "if", "(", "(", ")", "==", ")", "return", ";", "return", ";"], "operands": ["printf", "\"Key exchange using known answer (deterministic):\\n\"", "keyexch_x25519", "1", "0", "EXIT_FAILURE", "printf", "\"Key exchange using random keys:\\n\"", "keyexch_x25519", "0", "0", "EXIT_FAILURE", "EXIT_SUCCESS"], "callee_func": ["printf", "keyexch_x25519", "printf", "keyexch_x25519"], "function_normalized_hash": "4fac778804346cc76e6c41e5c08d15fd"}]}, {"file_hash": "b6722bcbeddb8b8375ad977352a6707e", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/sslecho/main.c", "file_name": "main.c", "function_list": [{"line_start": 31, "line_stop": 67, "function_name": "create_socket", "file_path": "sslecho/main.c", "line_of_code": 27, "operators": ["int", ";", "int", "=", ";", "struct", ";", "=", "(", ",", ",", ")", ";", "if", "(", "<", ")", "{", "(", ")", ";", "(", ")", ";", "}", "if", "(", ")", "{", ".", "=", ";", ".", "=", "(", ")", ";", ".", ".", "=", ";", "if", "(", "(", ",", ",", ",", "&", ",", "sizeof", "(", ")", ")", "<", ")", "{", "(", ")", ";", "(", ")", ";", "}", "if", "(", "(", ",", "(", "struct", "*", ")", "&", ",", "sizeof", "(", ")", ")", "<", ")", "{", "(", ")", ";", "(", ")", ";", "}", "if", "(", "(", ",", ")", "<", ")", "{", "(", ")", ";", "(", ")", ";", "}", "}", "return", ";"], "operands": ["s", "optval", "1", "sockaddr_in", "addr", "s", "socket", "AF_INET", "SOCK_STREAM", "0", "s", "0", "perror", "\"Unable to create socket\"", "exit", "EXIT_FAILURE", "isServer", "addr", "sin_family", "AF_INET", "addr", "sin_port", "htons", "server_port", "addr", "sin_addr", "s_addr", "INADDR_ANY", "setsockopt", "s", "SOL_SOCKET", "SO_REUSEADDR", "optval", "optval", "0", "perror", "\"setsockopt(SO_REUSEADDR) failed\"", "exit", "EXIT_FAILURE", "bind", "s", "sockaddr", "addr", "addr", "0", "perror", "\"Unable to bind\"", "exit", "EXIT_FAILURE", "listen", "s", "1", "0", "perror", "\"Unable to listen\"", "exit", "EXIT_FAILURE", "s"], "callee_func": ["socket", "perror", "exit", "htons", "setsockopt", "perror", "exit", "bind", "perror", "exit", "listen", "perror", "exit"], "function_normalized_hash": "17df5139210cdfcc3e42dd20f0808e64"}, {"line_start": 69, "line_stop": 87, "function_name": "create_context", "file_path": "sslecho/main.c", "line_of_code": 13, "operators": ["const", "*", ";", "*", ";", "if", "(", ")", "=", "(", ")", ";", "else", "=", "(", ")", ";", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ")", ";", "(", ")", ";", "(", ")", ";", "}", "return", ";"], "operands": ["SSL_METHOD", "method", "SSL_CTX", "ctx", "isServer", "method", "TLS_server_method", "method", "TLS_client_method", "ctx", "SSL_CTX_new", "method", "ctx", "NULL", "perror", "\"Unable to create SSL context\"", "ERR_print_errors_fp", "stderr", "exit", "EXIT_FAILURE", "ctx"], "callee_func": ["TLS_server_method", "TLS_client_method", "SSL_CTX_new", "perror", "ERR_print_errors_fp", "exit"], "function_normalized_hash": "fa1f20d18702c4f3d9b33d8dbdc4a820"}, {"line_start": 89, "line_stop": 101, "function_name": "configure_server_context", "file_path": "sslecho/main.c", "line_of_code": 8, "operators": ["if", "(", "(", ",", ")", "<=", ")", "{", "(", ")", ";", "(", ")", ";", "}", "if", "(", "(", ",", ",", ")", "<=", ")", "{", "(", ")", ";", "(", ")", ";", "}"], "operands": ["SSL_CTX_use_certificate_chain_file", "ctx", "\"cert.pem\"", "0", "ERR_print_errors_fp", "stderr", "exit", "EXIT_FAILURE", "SSL_CTX_use_PrivateKey_file", "ctx", "\"key.pem\"", "SSL_FILETYPE_PEM", "0", "ERR_print_errors_fp", "stderr", "exit", "EXIT_FAILURE"], "callee_func": ["SSL_CTX_use_certificate_chain_file", "ERR_print_errors_fp", "exit", "SSL_CTX_use_PrivateKey_file", "ERR_print_errors_fp", "exit"], "function_normalized_hash": "c8b6a10b15037210d7e53ee83fccd4d4"}, {"line_start": 103, "line_stop": 119, "function_name": "configure_client_context", "file_path": "sslecho/main.c", "line_of_code": 5, "operators": ["(", ",", ",", ")", ";", "if", "(", "!", "(", ",", ",", ")", ")", "{", "(", ")", ";", "(", ")", ";", "}"], "operands": ["SSL_CTX_set_verify", "ctx", "SSL_VERIFY_PEER", "NULL", "SSL_CTX_load_verify_locations", "ctx", "\"cert.pem\"", "NULL", "ERR_print_errors_fp", "stderr", "exit", "EXIT_FAILURE"], "callee_func": ["SSL_CTX_set_verify", "SSL_CTX_load_verify_locations", "ERR_print_errors_fp", "exit"], "function_normalized_hash": "b64e8b3ca446c569ff879ed9d440b686"}, {"line_start": 121, "line_stop": 128, "function_name": "usage", "file_path": "sslecho/main.c", "line_of_code": 5, "operators": ["(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";"], "operands": ["printf", "\"Usage: sslecho s\\n\"", "printf", "\"       --or--\\n\"", "printf", "\"       sslecho c ip\\n\"", "printf", "\"       c=client, s=server, ip=dotted ip of server\\n\"", "exit", "EXIT_FAILURE"], "callee_func": ["printf", "printf", "printf", "printf", "exit"], "function_normalized_hash": "9b1f2f1817fb33e6adf0b2ee8be1911c"}, {"line_start": 130, "line_stop": 350, "function_name": "main", "file_path": "sslecho/main.c", "line_of_code": 140, "operators": ["bool", ";", "int", ";", "*", "=", ";", "*", "=", ";", "int", "=", "-", ";", "int", "=", "-", ";", "char", "*", "=", ";", "=", ";", "int", ";", "char", "[", "]", ";", "=", "sizeof", "(", ")", ";", "int", ";", "char", "*", "=", ";", "struct", ";", "unsigned", "int", "=", "sizeof", "(", ")", ";", "(", ",", ")", ";", "(", ",", ",", ")", ";", "if", "(", "<", ")", "{", "(", ")", ";", "}", "=", "(", "[", "]", "[", "]", "==", ")", "?", ":", ";", "if", "(", "!", ")", "{", "if", "(", "!=", ")", "{", "(", ")", ";", "}", "=", "[", "]", ";", "}", "=", "(", ")", ";", "if", "(", ")", "{", "(", ",", ")", ";", "(", ")", ";", "=", "(", ")", ";", "while", "(", ")", "{", "=", "(", ",", "(", "struct", "*", ")", "&", ",", "&", ")", ";", "if", "(", "<", ")", "{", "(", ")", ";", "(", ")", ";", "}", "(", ")", ";", "=", "(", ")", ";", "(", ",", ")", ";", "if", "(", "(", ")", "<=", ")", "{", "(", ")", ";", "=", ";", "}", "else", "{", "(", ")", ";", "while", "(", ")", "{", "if", "(", "(", "=", "(", ",", ",", ")", ")", "<=", ")", "{", "if", "(", "==", ")", "{", "(", ")", ";", "}", "else", "{", "(", ",", ")", ";", "}", "(", ")", ";", "break", ";", "}", "[", "]", "=", ";", "if", "(", "(", ",", ")", "==", ")", "{", "(", ")", ";", "=", ";", "break", ";", "}", "(", ",", ")", ";", "if", "(", "(", ",", ",", ")", "<=", ")", "{", "(", ")", ";", "}", "}", "}", "if", "(", ")", "{", "(", ")", ";", "(", ")", ";", "(", ")", ";", "}", "}", "(", ")", ";", "}", "else", "{", "(", ")", ";", "(", ")", ";", "=", "(", ")", ";", ".", "=", ";", "(", ",", ",", "&", ".", ".", ")", ";", ".", "=", "(", ")", ";", "if", "(", "(", ",", "(", "struct", "*", ")", "&", ",", "sizeof", "(", ")", ")", "!=", ")", "{", "(", ")", ";", "goto", ";", "}", "else", "{", "(", ")", ";", "}", "=", "(", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "if", "(", "(", ")", "==", ")", "{", "(", ")", ";", "while", "(", ")", "{", "=", "(", "&", ",", "&", ",", ")", ";", "if", "(", "<", "||", "==", ")", "{", "break", ";", "}", "if", "(", "[", "]", "==", ")", "{", "break", ";", "}", "if", "(", "(", "=", "(", ",", ",", ")", ")", "<=", ")", "{", "(", ")", ";", "(", ")", ";", "break", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "<=", ")", "{", "(", ")", ";", "(", ")", ";", "break", ";", "}", "else", "{", "[", "]", "=", ";", "(", ",", ")", ";", "}", "}", "(", ")", ";", "}", "else", "{", "(", ")", ";", "(", ")", ";", "}", "}", ":", "if", "(", "!=", ")", "{", "(", ")", ";", "(", ")", ";", "}", "(", ")", ";", "if", "(", "!=", "-", ")", "(", ")", ";", "if", "(", "!=", "-", ")", "(", ")", ";", "if", "(", "!=", "&&", ">", ")", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["isServer", "result", "SSL_CTX", "ssl_ctx", "NULL", "SSL", "ssl", "NULL", "server_skt", "1", "client_skt", "1", "txbuf", "NULL", "size_t", "txcap", "0", "txlen", "rxbuf", "128", "size_t", "rxcap", "rxbuf", "rxlen", "rem_server_ip", "NULL", "sockaddr_in", "addr", "addr_len", "addr", "signal", "SIGPIPE", "SIG_IGN", "printf", "\"\\nsslecho : Simple Echo Client/Server (OpenSSL 3.0.1-dev) : %s : %s\\n\\n\"", "__DATE__", "__TIME__", "argc", "2", "usage", "isServer", "argv", "1", "0", "'s'", "true", "false", "isServer", "argc", "3", "usage", "rem_server_ip", "argv", "2", "ssl_ctx", "create_context", "isServer", "isServer", "printf", "\"We are the server on port: %d\\n\\n\"", "server_port", "configure_server_context", "ssl_ctx", "server_skt", "create_socket", "true", "server_running", "client_skt", "accept", "server_skt", "sockaddr", "addr", "addr_len", "client_skt", "0", "perror", "\"Unable to accept\"", "exit", "EXIT_FAILURE", "printf", "\"Client TCP connection accepted\\n\"", "ssl", "SSL_new", "ssl_ctx", "SSL_set_fd", "ssl", "client_skt", "SSL_accept", "ssl", "0", "ERR_print_errors_fp", "stderr", "server_running", "false", "printf", "\"Client SSL connection accepted\\n\\n\"", "true", "rxlen", "SSL_read", "ssl", "rxbuf", "rxcap", "0", "rxlen", "0", "printf", "\"Client closed connection\\n\"", "printf", "\"SSL_read returned %d\\n\"", "rxlen", "ERR_print_errors_fp", "stderr", "rxbuf", "rxlen", "0", "strcmp", "rxbuf", "\"kill\\n\"", "0", "printf", "\"Server received 'kill' command\\n\"", "server_running", "false", "printf", "\"Received: %s\"", "rxbuf", "SSL_write", "ssl", "rxbuf", "rxlen", "0", "ERR_print_errors_fp", "stderr", "server_running", "SSL_shutdown", "ssl", "SSL_free", "ssl", "close", "client_skt", "printf", "\"Server exiting...\\n\"", "printf", "\"We are the client\\n\\n\"", "configure_client_context", "ssl_ctx", "client_skt", "create_socket", "false", "addr", "sin_family", "AF_INET", "inet_pton", "AF_INET", "rem_server_ip", "addr", "sin_addr", "s_addr", "addr", "sin_port", "htons", "server_port", "connect", "client_skt", "sockaddr", "addr", "addr", "0", "perror", "\"Unable to TCP connect to server\"", "exit", "printf", "\"TCP connection to server successful\\n\"", "ssl", "SSL_new", "ssl_ctx", "SSL_set_fd", "ssl", "client_skt", "SSL_set_tlsext_host_name", "ssl", "rem_server_ip", "SSL_set1_host", "ssl", "rem_server_ip", "SSL_connect", "ssl", "1", "printf", "\"SSL connection to server successful\\n\\n\"", "true", "txlen", "getline", "txbuf", "txcap", "stdin", "txlen", "0", "txbuf", "NULL", "txbuf", "0", "'\\n'", "result", "SSL_write", "ssl", "txbuf", "txlen", "0", "printf", "\"Server closed connection\\n\"", "ERR_print_errors_fp", "stderr", "rxlen", "SSL_read", "ssl", "rxbuf", "rxcap", "rxlen", "0", "printf", "\"Server closed connection\\n\"", "ERR_print_errors_fp", "stderr", "rxbuf", "rxlen", "0", "printf", "\"Received: %s\"", "rxbuf", "printf", "\"Client exiting...\\n\"", "printf", "\"SSL connection to server failed\\n\\n\"", "ERR_print_errors_fp", "stderr", "exit", "ssl", "NULL", "SSL_shutdown", "ssl", "SSL_free", "ssl", "SSL_CTX_free", "ssl_ctx", "client_skt", "1", "close", "client_skt", "server_skt", "1", "close", "server_skt", "txbuf", "NULL", "txcap", "0", "free", "txbuf", "printf", "\"sslecho exiting\\n\"", "EXIT_SUCCESS"], "callee_func": ["signal", "printf", "usage", "usage", "create_context", "printf", "configure_server_context", "create_socket", "accept", "perror", "exit", "printf", "SSL_new", "SSL_set_fd", "SSL_accept", "ERR_print_errors_fp", "printf", "SSL_read", "printf", "printf", "ERR_print_errors_fp", "strcmp", "printf", "printf", "SSL_write", "ERR_print_errors_fp", "SSL_shutdown", "SSL_free", "close", "printf", "printf", "configure_client_context", "create_socket", "inet_pton", "htons", "connect", "perror", "printf", "SSL_new", "SSL_set_fd", "SSL_set_tlsext_host_name", "SSL_set1_host", "SSL_connect", "printf", "getline", "SSL_write", "printf", "ERR_print_errors_fp", "SSL_read", "printf", "ERR_print_errors_fp", "printf", "printf", "printf", "ERR_print_errors_fp", "SSL_shutdown", "SSL_free", "SSL_CTX_free", "close", "close", "free", "printf"], "function_normalized_hash": "d39a287803d51380f42e45d5b281d304"}]}, {"file_hash": "25e46169faf242b325604f79a4616965", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/smime/smenc.c", "file_name": "smenc.c", "function_list": [{"line_start": 15, "line_stop": 91, "function_name": "main", "file_path": "smime/smenc.c", "line_of_code": 42, "operators": ["*", "=", ",", "*", "=", ",", "*", "=", ";", "*", "=", ";", "(", ")", "*", "=", ";", "*", "=", ";", "int", "=", ";", "int", "=", ";", "(", ")", ";", "(", ")", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ")", ";", "if", "(", "!", "||", "!", "(", ",", ")", ")", "goto", ";", "=", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", "(", ")", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ")", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "in", "NULL", "out", "NULL", "tbio", "NULL", "X509", "rcert", "NULL", "STACK_OF", "X509", "recips", "NULL", "PKCS7", "p7", "NULL", "ret", "EXIT_FAILURE", "flags", "PKCS7_STREAM", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "tbio", "BIO_new_file", "\"signer.pem\"", "\"r\"", "tbio", "err", "rcert", "PEM_read_bio_X509", "tbio", "NULL", "0", "NULL", "rcert", "err", "recips", "sk_X509_new_null", "recips", "sk_X509_push", "recips", "rcert", "err", "rcert", "NULL", "in", "BIO_new_file", "\"encr.txt\"", "\"r\"", "in", "err", "p7", "PKCS7_encrypt", "recips", "in", "EVP_des_ede3_cbc", "flags", "p7", "err", "out", "BIO_new_file", "\"smencr.txt\"", "\"w\"", "out", "err", "SMIME_write_PKCS7", "out", "p7", "in", "flags", "err", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "fprintf", "stderr", "\"Error Encrypting Data\\n\"", "ERR_print_errors_fp", "stderr", "PKCS7_free", "p7", "X509_free", "rcert", "OSSL_STACK_OF_X509_free", "recips", "BIO_free", "in", "BIO_free", "out", "BIO_free", "tbio", "ret"], "callee_func": ["STACK_OF", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "BIO_new_file", "PEM_read_bio_X509", "sk_X509_new_null", "sk_X509_push", "BIO_new_file", "PKCS7_encrypt", "EVP_des_ede3_cbc", "BIO_new_file", "SMIME_write_PKCS7", "fprintf", "ERR_print_errors_fp", "PKCS7_free", "X509_free", "OSSL_STACK_OF_X509_free", "BIO_free", "BIO_free", "BIO_free"], "function_normalized_hash": "584b15b7ca4bf771c54cd0598e044afa"}]}, {"file_hash": "5151a72a9e54f964daa21afe171bb99e", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/bio/server-conf.c", "file_name": "server-conf.c", "function_list": [{"line_start": 24, "line_stop": 139, "function_name": "main", "file_path": "bio/server-conf.c", "line_of_code": 83, "operators": ["char", "*", "=", ";", "*", "=", ";", "*", ",", "*", ";", "*", ";", "*", "=", ";", "*", "=", ";", "(", ")", "*", "=", ";", "*", ";", "long", "=", "-", ";", "char", "[", "]", ";", "int", "=", ",", ";", "=", "(", "(", ")", ")", ";", "=", "(", ")", ";", "if", "(", "(", ",", ",", "&", ")", "<=", ")", "{", "if", "(", "<=", ")", "(", ",", ")", ";", "else", "(", ",", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "(", ",", ")", ";", "for", "(", "=", ";", "<", "(", ")", ";", "++", ")", "{", "int", ";", "=", "(", ",", ")", ";", "=", "(", ",", "->", ",", "->", ")", ";", "if", "(", ">", ")", "continue", ";", "if", "(", "!=", "-", ")", "{", "(", ",", ",", "->", ",", "->", ")", ";", "(", ")", ";", "goto", ";", "}", "if", "(", "(", "->", ",", ")", "==", ")", "{", "=", "->", ";", "}", "else", "{", "(", ",", ",", "->", ")", ";", "goto", ";", "}", "}", "if", "(", "!", "(", ")", ")", "{", "(", ",", ")", ";", "(", ")", ";", "goto", ";", "}", "=", "(", ",", ")", ";", "if", "(", "(", "=", "(", ")", ")", "==", ")", "goto", ";", "(", ",", ")", ";", ":", "if", "(", "(", ")", "<=", ")", "goto", ";", "for", "(", ";", ";", ")", "{", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ")", ";", "=", "(", ")", ";", "(", ")", ";", "goto", ";", "}", "if", "(", "<", ")", "{", "if", "(", "(", ")", ")", "continue", ";", "goto", ";", "}", "(", ",", ",", ",", ")", ";", "(", ")", ";", "}", "=", ";", ":", "if", "(", "!=", ")", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["port", "\"*:4433\"", "BIO", "in", "NULL", "BIO", "ssl_bio", "tmp", "SSL_CTX", "ctx", "SSL_CONF_CTX", "cctx", "NULL", "CONF", "conf", "NULL", "STACK_OF", "CONF_VALUE", "sect", "NULL", "CONF_VALUE", "cnf", "errline", "1", "buf", "512", "ret", "EXIT_FAILURE", "i", "ctx", "SSL_CTX_new", "TLS_server_method", "conf", "NCONF_new", "NULL", "NCONF_load", "conf", "\"accept.cnf\"", "errline", "0", "errline", "0", "fprintf", "stderr", "\"Error processing config file\\n\"", "fprintf", "stderr", "\"Error on line %ld\\n\"", "errline", "err", "sect", "NCONF_get_section", "conf", "\"default\"", "sect", "NULL", "fprintf", "stderr", "\"Error retrieving default section\\n\"", "err", "cctx", "SSL_CONF_CTX_new", "SSL_CONF_CTX_set_flags", "cctx", "SSL_CONF_FLAG_SERVER", "SSL_CONF_CTX_set_flags", "cctx", "SSL_CONF_FLAG_CERTIFICATE", "SSL_CONF_CTX_set_flags", "cctx", "SSL_CONF_FLAG_FILE", "SSL_CONF_CTX_set_ssl_ctx", "cctx", "ctx", "i", "0", "i", "sk_CONF_VALUE_num", "sect", "i", "rv", "cnf", "sk_CONF_VALUE_value", "sect", "i", "rv", "SSL_CONF_cmd", "cctx", "cnf", "name", "cnf", "value", "rv", "0", "rv", "2", "fprintf", "stderr", "\"Error processing %s = %s\\n\"", "cnf", "name", "cnf", "value", "ERR_print_errors_fp", "stderr", "err", "strcmp", "cnf", "name", "\"Port\"", "0", "port", "cnf", "value", "fprintf", "stderr", "\"Unknown configuration option %s\\n\"", "cnf", "name", "err", "SSL_CONF_CTX_finish", "cctx", "fprintf", "stderr", "\"Finish error\\n\"", "ERR_print_errors_fp", "stderr", "err", "ssl_bio", "BIO_new_ssl", "ctx", "0", "in", "BIO_new_accept", "port", "NULL", "err", "BIO_set_accept_bios", "in", "ssl_bio", "again", "BIO_do_accept", "in", "0", "err", "i", "BIO_read", "in", "buf", "512", "i", "0", "printf", "\"Done\\n\"", "tmp", "BIO_pop", "in", "BIO_free_all", "tmp", "again", "i", "0", "BIO_should_retry", "in", "err", "fwrite", "buf", "1", "i", "stdout", "fflush", "stdout", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "ERR_print_errors_fp", "stderr", "BIO_free", "in", "ret"], "callee_func": ["STACK_OF", "SSL_CTX_new", "TLS_server_method", "NCONF_new", "NCONF_load", "fprintf", "fprintf", "NCONF_get_section", "fprintf", "SSL_CONF_CTX_new", "SSL_CONF_CTX_set_flags", "SSL_CONF_CTX_set_flags", "SSL_CONF_CTX_set_flags", "SSL_CONF_CTX_set_ssl_ctx", "sk_CONF_VALUE_num", "sk_CONF_VALUE_value", "SSL_CONF_cmd", "fprintf", "ERR_print_errors_fp", "strcmp", "fprintf", "SSL_CONF_CTX_finish", "fprintf", "ERR_print_errors_fp", "BIO_new_ssl", "BIO_new_accept", "BIO_set_accept_bios", "BIO_do_accept", "BIO_read", "printf", "BIO_pop", "BIO_free_all", "BIO_should_retry", "fwrite", "fflush", "ERR_print_errors_fp", "BIO_free"], "function_normalized_hash": "f740167bedce669f0b1a50c23774d243"}]}, {"file_hash": "dcbab5e1c0a68fb5f1db40878d447475", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/encode/rsa_encode.c", "file_name": "rsa_encode.c", "function_list": [{"line_start": 29, "line_stop": 93, "function_name": "load_key", "file_path": "encode/rsa_encode.c", "line_of_code": 31, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "int", "=", ";", "=", "(", "&", ",", ",", ",", ",", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!=", ")", "{", "if", "(", "(", ",", "(", "const", "unsigned", "char", "*", ")", ",", "(", ")", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "}", "if", "(", "(", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "if", "(", "==", ")", "{", "(", ")", ";", "=", ";", "}", "return", ";"], "operands": ["ret", "0", "EVP_PKEY", "pkey", "NULL", "OSSL_DECODER_CTX", "dctx", "NULL", "selection", "0", "dctx", "OSSL_DECODER_CTX_new_for_pkey", "pkey", "\"PEM\"", "NULL", "\"RSA\"", "selection", "libctx", "propq", "dctx", "NULL", "fprintf", "stderr", "\"OSSL_DECODER_CTX_new_for_pkey() failed\\n\"", "cleanup", "passphrase", "NULL", "OSSL_DECODER_CTX_set_passphrase", "dctx", "passphrase", "strlen", "passphrase", "0", "fprintf", "stderr", "\"OSSL_DECODER_CTX_set_passphrase() failed\\n\"", "cleanup", "OSSL_DECODER_from_fp", "dctx", "f", "0", "fprintf", "stderr", "\"OSSL_DECODER_from_fp() failed\\n\"", "cleanup", "ret", "1", "cleanup", "OSSL_DECODER_CTX_free", "dctx", "ret", "0", "EVP_PKEY_free", "pkey", "pkey", "NULL", "pkey"], "callee_func": ["OSSL_DECODER_CTX_new_for_pkey", "fprintf", "OSSL_DECODER_CTX_set_passphrase", "strlen", "fprintf", "OSSL_DECODER_from_fp", "fprintf", "OSSL_DECODER_CTX_free", "EVP_PKEY_free"], "function_normalized_hash": "626c0af1df970bf4df38c0c45368b15e"}, {"line_start": 101, "line_stop": 169, "function_name": "store_key", "file_path": "encode/rsa_encode.c", "line_of_code": 31, "operators": ["int", "=", ";", "int", ";", "*", "=", ";", "=", "(", "!=", ")", "?", ":", ";", "=", "(", ",", ",", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!=", ")", "{", "if", "(", "(", ",", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", "(", "const", "unsigned", "char", "*", ")", ",", "(", ")", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "}", "if", "(", "(", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "selection", "OSSL_ENCODER_CTX", "ectx", "NULL", "selection", "passphrase", "NULL", "EVP_PKEY_KEYPAIR", "EVP_PKEY_PUBLIC_KEY", "ectx", "OSSL_ENCODER_CTX_new_for_pkey", "pkey", "selection", "\"PEM\"", "NULL", "propq", "ectx", "NULL", "fprintf", "stderr", "\"OSSL_ENCODER_CTX_new_for_pkey() failed\\n\"", "cleanup", "passphrase", "NULL", "OSSL_ENCODER_CTX_set_cipher", "ectx", "\"AES-128-CBC\"", "propq", "0", "fprintf", "stderr", "\"OSSL_ENCODER_CTX_set_cipher() failed\\n\"", "cleanup", "OSSL_ENCODER_CTX_set_passphrase", "ectx", "passphrase", "strlen", "passphrase", "0", "fprintf", "stderr", "\"OSSL_ENCODER_CTX_set_passphrase() failed\\n\"", "cleanup", "OSSL_ENCODER_to_fp", "ectx", "f", "0", "fprintf", "stderr", "\"OSSL_ENCODER_to_fp() failed\\n\"", "cleanup", "ret", "1", "cleanup", "OSSL_ENCODER_CTX_free", "ectx", "ret"], "callee_func": ["OSSL_ENCODER_CTX_new_for_pkey", "fprintf", "OSSL_ENCODER_CTX_set_cipher", "fprintf", "OSSL_ENCODER_CTX_set_passphrase", "strlen", "fprintf", "OSSL_ENCODER_to_fp", "fprintf", "OSSL_ENCODER_CTX_free"], "function_normalized_hash": "aa4d1d36a9d96ed1f00f2287ab8bee90"}, {"line_start": 171, "line_stop": 202, "function_name": "main", "file_path": "encode/rsa_encode.c", "line_of_code": 22, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "const", "char", "*", "=", ",", "*", "=", ";", "if", "(", ">", "&&", "[", "]", "[", "]", ")", "=", "[", "]", ";", "if", "(", ">", "&&", "[", "]", "[", "]", ")", "=", "[", "]", ";", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "OSSL_LIB_CTX", "libctx", "NULL", "EVP_PKEY", "pkey", "NULL", "passphrase_in", "NULL", "passphrase_out", "NULL", "argc", "1", "argv", "1", "0", "passphrase_in", "argv", "1", "argc", "2", "argv", "2", "0", "passphrase_out", "argv", "2", "pkey", "load_key", "libctx", "stdin", "passphrase_in", "pkey", "NULL", "fprintf", "stderr", "\"Failed to decode key\\n\"", "cleanup", "store_key", "pkey", "stdout", "passphrase_out", "0", "fprintf", "stderr", "\"Failed to encode key\\n\"", "cleanup", "ret", "EXIT_SUCCESS", "cleanup", "EVP_PKEY_free", "pkey", "OSSL_LIB_CTX_free", "libctx", "ret"], "callee_func": ["load_key", "fprintf", "store_key", "fprintf", "EVP_PKEY_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "700947ea81d151df2ab298797cf1ce4a"}]}, {"file_hash": "5b21e95df9c58caca7bc4789973ccdf1", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/kdf/hkdf.c", "file_name": "hkdf.c", "function_list": [{"line_start": 44, "line_stop": 104, "function_name": "main", "file_path": "kdf/hkdf.c", "line_of_code": 44, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "unsigned", "char", "[", "]", ";", "[", "]", ",", "*", "=", ";", "*", "=", ";", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "*", "++", "=", "(", ",", ",", ")", ";", "*", "++", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "*", "++", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "*", "++", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "*", "=", "(", ")", ";", "if", "(", "(", ",", ",", "sizeof", "(", ")", ",", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "EVP_KDF", "kdf", "NULL", "EVP_KDF_CTX", "kctx", "NULL", "out", "42", "OSSL_PARAM", "params", "5", "p", "params", "OSSL_LIB_CTX", "library_context", "NULL", "library_context", "OSSL_LIB_CTX_new", "library_context", "NULL", "fprintf", "stderr", "\"OSSL_LIB_CTX_new() returned NULL\\n\"", "end", "kdf", "EVP_KDF_fetch", "library_context", "\"HKDF\"", "NULL", "kdf", "NULL", "fprintf", "stderr", "\"EVP_KDF_fetch() returned NULL\\n\"", "end", "kctx", "EVP_KDF_CTX_new", "kdf", "kctx", "NULL", "fprintf", "stderr", "\"EVP_KDF_CTX_new() returned NULL\\n\"", "end", "p", "OSSL_PARAM_construct_utf8_string", "OSSL_KDF_PARAM_DIGEST", "\"SHA256\"", "0", "p", "OSSL_PARAM_construct_octet_string", "OSSL_KDF_PARAM_KEY", "hkdf_ikm", "hkdf_ikm", "p", "OSSL_PARAM_construct_octet_string", "OSSL_KDF_PARAM_INFO", "hkdf_info", "hkdf_info", "p", "OSSL_PARAM_construct_octet_string", "OSSL_KDF_PARAM_SALT", "hkdf_salt", "hkdf_salt", "p", "OSSL_PARAM_construct_end", "EVP_KDF_derive", "kctx", "out", "out", "params", "1", "fprintf", "stderr", "\"EVP_KDF_derive() failed\\n\"", "end", "CRYPTO_memcmp", "hkdf_okm", "out", "hkdf_okm", "0", "fprintf", "stderr", "\"Generated key does not match expected value\\n\"", "end", "ret", "EXIT_SUCCESS", "end", "EVP_KDF_CTX_free", "kctx", "EVP_KDF_free", "kdf", "OSSL_LIB_CTX_free", "library_context", "ret"], "callee_func": ["OSSL_LIB_CTX_new", "fprintf", "EVP_KDF_fetch", "fprintf", "EVP_KDF_CTX_new", "fprintf", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_octet_string", "OSSL_PARAM_construct_octet_string", "OSSL_PARAM_construct_octet_string", "OSSL_PARAM_construct_end", "EVP_KDF_derive", "fprintf", "CRYPTO_memcmp", "fprintf", "EVP_KDF_CTX_free", "EVP_KDF_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "25e5e1235be3cbd8ebf6c3eea99e999a"}]}, {"file_hash": "207d6b3b142d8c409a7a916aa45a8519", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/cms/cms_ddec.c", "file_name": "cms_ddec.c", "function_list": [{"line_start": 18, "line_stop": 88, "function_name": "main", "file_path": "cms/cms_ddec.c", "line_of_code": 43, "operators": ["*", "=", ",", "*", "=", ",", "*", "=", ",", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "int", "=", ";", "(", ")", ";", "(", ")", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ")", ";", "(", ")", ";", "=", "(", ",", ",", ",", ")", ";", "if", "(", "!", "||", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ",", ",", ")", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "in", "NULL", "out", "NULL", "tbio", "NULL", "dcont", "NULL", "X509", "rcert", "NULL", "EVP_PKEY", "rkey", "NULL", "CMS_ContentInfo", "cms", "NULL", "ret", "EXIT_FAILURE", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "tbio", "BIO_new_file", "\"signer.pem\"", "\"r\"", "tbio", "err", "rcert", "PEM_read_bio_X509", "tbio", "NULL", "0", "NULL", "BIO_reset", "tbio", "rkey", "PEM_read_bio_PrivateKey", "tbio", "NULL", "0", "NULL", "rcert", "rkey", "err", "in", "BIO_new_file", "\"smencr.pem\"", "\"r\"", "in", "err", "cms", "PEM_read_bio_CMS", "in", "NULL", "0", "NULL", "cms", "err", "dcont", "BIO_new_file", "\"smencr.out\"", "\"rb\"", "in", "err", "out", "BIO_new_file", "\"encrout.txt\"", "\"w\"", "out", "err", "CMS_decrypt", "cms", "rkey", "rcert", "dcont", "out", "0", "err", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "fprintf", "stderr", "\"Error Decrypting Data\\n\"", "ERR_print_errors_fp", "stderr", "CMS_ContentInfo_free", "cms", "X509_free", "rcert", "EVP_PKEY_free", "rkey", "BIO_free", "in", "BIO_free", "out", "BIO_free", "tbio", "BIO_free", "dcont", "ret"], "callee_func": ["OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "BIO_new_file", "PEM_read_bio_X509", "BIO_reset", "PEM_read_bio_PrivateKey", "BIO_new_file", "PEM_read_bio_CMS", "BIO_new_file", "BIO_new_file", "CMS_decrypt", "fprintf", "ERR_print_errors_fp", "CMS_ContentInfo_free", "X509_free", "EVP_PKEY_free", "BIO_free", "BIO_free", "BIO_free", "BIO_free"], "function_normalized_hash": "41d1d352e3625279e2ce5f77ead7bd5d"}]}, {"file_hash": "77369cde184b8cbc077c29107dede0da", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/signature/rsa_pss_direct.c", "file_name": "rsa_pss_direct.c", "function_list": [{"line_start": 38, "line_stop": 118, "function_name": "sign", "file_path": "signature/rsa_pss_direct.c", "line_of_code": 58, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "const", "unsigned", "char", "*", "=", ";", "*", "=", ";", "=", ";", "=", "(", ",", ",", "&", ",", "sizeof", "(", ")", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", ",", ",", "sizeof", "(", ")", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "*", "=", "(", "*", ")", ";", "if", "(", "*", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", "*", ",", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "if", "(", "==", ")", "(", "*", ")", ";", "return", ";"], "operands": ["ret", "0", "EVP_PKEY", "pkey", "NULL", "EVP_PKEY_CTX", "ctx", "NULL", "EVP_MD", "md", "NULL", "ppriv_key", "NULL", "sig", "NULL", "ppriv_key", "rsa_priv_key", "pkey", "d2i_PrivateKey_ex", "EVP_PKEY_RSA", "NULL", "ppriv_key", "rsa_priv_key", "libctx", "propq", "pkey", "NULL", "fprintf", "stderr", "\"Failed to load private key\\n\"", "end", "md", "EVP_MD_fetch", "libctx", "\"SHA256\"", "propq", "md", "NULL", "fprintf", "stderr", "\"Failed to fetch hash algorithm\\n\"", "end", "ctx", "EVP_PKEY_CTX_new_from_pkey", "libctx", "pkey", "propq", "ctx", "NULL", "fprintf", "stderr", "\"Failed to create signing context\\n\"", "end", "EVP_PKEY_sign_init", "ctx", "0", "fprintf", "stderr", "\"Failed to initialize signing context\\n\"", "end", "EVP_PKEY_CTX_set_rsa_padding", "ctx", "RSA_PKCS1_PSS_PADDING", "0", "fprintf", "stderr", "\"Failed to configure padding\\n\"", "end", "EVP_PKEY_CTX_set_signature_md", "ctx", "md", "0", "fprintf", "stderr", "\"Failed to configure digest type\\n\"", "end", "EVP_PKEY_sign", "ctx", "NULL", "sig_len", "test_digest", "test_digest", "0", "fprintf", "stderr", "\"Failed to get signature length\\n\"", "end", "sig", "OPENSSL_malloc", "sig_len", "sig", "NULL", "fprintf", "stderr", "\"Failed to allocate memory for signature\\n\"", "end", "EVP_PKEY_sign", "ctx", "sig", "sig_len", "test_digest", "test_digest", "1", "fprintf", "stderr", "\"Failed to sign\\n\"", "end", "ret", "1", "end", "EVP_PKEY_CTX_free", "ctx", "EVP_PKEY_free", "pkey", "EVP_MD_free", "md", "ret", "0", "OPENSSL_free", "sig", "ret"], "callee_func": ["d2i_PrivateKey_ex", "fprintf", "EVP_MD_fetch", "fprintf", "EVP_PKEY_CTX_new_from_pkey", "fprintf", "EVP_PKEY_sign_init", "fprintf", "EVP_PKEY_CTX_set_rsa_padding", "fprintf", "EVP_PKEY_CTX_set_signature_md", "fprintf", "EVP_PKEY_sign", "fprintf", "OPENSSL_malloc", "fprintf", "EVP_PKEY_sign", "fprintf", "EVP_PKEY_CTX_free", "EVP_PKEY_free", "EVP_MD_free", "OPENSSL_free"], "function_normalized_hash": "39032b6fa81aac595da32d5fe6e8f10e"}, {"line_start": 124, "line_stop": 184, "function_name": "verify", "file_path": "signature/rsa_pss_direct.c", "line_of_code": 45, "operators": ["int", "=", ";", "const", "unsigned", "char", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "=", ";", "=", "(", ",", ",", "&", ",", "sizeof", "(", ")", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", ",", ",", "sizeof", "(", ")", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "ppub_key", "NULL", "EVP_PKEY", "pkey", "NULL", "EVP_PKEY_CTX", "ctx", "NULL", "EVP_MD", "md", "NULL", "ppub_key", "rsa_pub_key", "pkey", "d2i_PublicKey", "EVP_PKEY_RSA", "NULL", "ppub_key", "rsa_pub_key", "pkey", "NULL", "fprintf", "stderr", "\"Failed to load public key\\n\"", "end", "md", "EVP_MD_fetch", "libctx", "\"SHA256\"", "propq", "md", "NULL", "fprintf", "stderr", "\"Failed to fetch hash algorithm\\n\"", "end", "ctx", "EVP_PKEY_CTX_new_from_pkey", "libctx", "pkey", "propq", "ctx", "NULL", "fprintf", "stderr", "\"Failed to create verification context\\n\"", "end", "EVP_PKEY_verify_init", "ctx", "0", "fprintf", "stderr", "\"Failed to initialize verification context\\n\"", "end", "EVP_PKEY_CTX_set_rsa_padding", "ctx", "RSA_PKCS1_PSS_PADDING", "0", "fprintf", "stderr", "\"Failed to configure padding\\n\"", "end", "EVP_PKEY_CTX_set_signature_md", "ctx", "md", "0", "fprintf", "stderr", "\"Failed to configure digest type\\n\"", "end", "EVP_PKEY_verify", "ctx", "sig", "sig_len", "test_digest", "test_digest", "0", "fprintf", "stderr", "\"Failed to verify signature; \"", "\"signature may be invalid\\n\"", "end", "ret", "1", "end", "EVP_PKEY_CTX_free", "ctx", "EVP_PKEY_free", "pkey", "EVP_MD_free", "md", "ret"], "callee_func": ["d2i_PublicKey", "fprintf", "EVP_MD_fetch", "fprintf", "EVP_PKEY_CTX_new_from_pkey", "fprintf", "EVP_PKEY_verify_init", "fprintf", "EVP_PKEY_CTX_set_rsa_padding", "fprintf", "EVP_PKEY_CTX_set_signature_md", "fprintf", "EVP_PKEY_verify", "fprintf", "EVP_PKEY_CTX_free", "EVP_PKEY_free", "EVP_MD_free"], "function_normalized_hash": "4eb261a2e825d5205753e22b2cb05aca"}, {"line_start": 186, "line_stop": 204, "function_name": "main", "file_path": "signature/rsa_pss_direct.c", "line_of_code": 13, "operators": ["int", "=", ";", "*", "=", ";", "unsigned", "char", "*", "=", ";", "=", ";", "if", "(", "(", ",", "&", ",", "&", ")", "==", ")", "goto", ";", "if", "(", "(", ",", ",", ")", "==", ")", "goto", ";", "=", ";", ":", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "OSSL_LIB_CTX", "libctx", "NULL", "sig", "NULL", "size_t", "sig_len", "0", "sign", "libctx", "sig", "sig_len", "0", "end", "verify", "libctx", "sig", "sig_len", "0", "end", "ret", "EXIT_SUCCESS", "end", "OPENSSL_free", "sig", "OSSL_LIB_CTX_free", "libctx", "ret"], "callee_func": ["sign", "verify", "OPENSSL_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "337167493fc53ab508bfcc4e46201142"}]}, {"file_hash": "1b197c2ad42009366b109d13daa52015", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/smime/smsign.c", "file_name": "smsign.c", "function_list": [{"line_start": 15, "line_stop": 88, "function_name": "main", "file_path": "smime/smsign.c", "line_of_code": 42, "operators": ["*", "=", ",", "*", "=", ",", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "int", "=", ";", "int", "=", "|", ";", "(", ")", ";", "(", ")", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ")", ";", "(", ")", ";", "=", "(", ",", ",", ",", ")", ";", "if", "(", "!", "||", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "if", "(", "!", "(", "&", ")", ")", "(", ")", ";", "if", "(", "!", "(", ",", ",", ",", ")", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "in", "NULL", "out", "NULL", "tbio", "NULL", "X509", "scert", "NULL", "EVP_PKEY", "skey", "NULL", "PKCS7", "p7", "NULL", "ret", "EXIT_FAILURE", "flags", "PKCS7_DETACHED", "PKCS7_STREAM", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "tbio", "BIO_new_file", "\"signer.pem\"", "\"r\"", "tbio", "err", "scert", "PEM_read_bio_X509", "tbio", "NULL", "0", "NULL", "BIO_reset", "tbio", "skey", "PEM_read_bio_PrivateKey", "tbio", "NULL", "0", "NULL", "scert", "skey", "err", "in", "BIO_new_file", "\"sign.txt\"", "\"r\"", "in", "err", "p7", "PKCS7_sign", "scert", "skey", "NULL", "in", "flags", "p7", "err", "out", "BIO_new_file", "\"smout.txt\"", "\"w\"", "out", "err", "flags", "PKCS7_STREAM", "BIO_reset", "in", "SMIME_write_PKCS7", "out", "p7", "in", "flags", "err", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "fprintf", "stderr", "\"Error Signing Data\\n\"", "ERR_print_errors_fp", "stderr", "PKCS7_free", "p7", "X509_free", "scert", "EVP_PKEY_free", "skey", "BIO_free", "in", "BIO_free", "out", "BIO_free", "tbio", "ret"], "callee_func": ["OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "BIO_new_file", "PEM_read_bio_X509", "BIO_reset", "PEM_read_bio_PrivateKey", "BIO_new_file", "PKCS7_sign", "BIO_new_file", "BIO_reset", "SMIME_write_PKCS7", "fprintf", "ERR_print_errors_fp", "PKCS7_free", "X509_free", "EVP_PKEY_free", "BIO_free", "BIO_free", "BIO_free"], "function_normalized_hash": "83ea04154cf9419dbdd2cc1bd02e7265"}]}, {"file_hash": "df1a30a4c912ef980fdff8b3180eeb71", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/pkey/EVP_PKEY_EC_keygen.c", "file_name": "EVP_PKEY_EC_keygen.c", "function_list": [{"line_start": 30, "line_stop": 77, "function_name": "do_ec_keygen", "file_path": "pkey/EVP_PKEY_EC_keygen.c", "line_of_code": 33, "operators": ["*", "=", ";", "const", "char", "*", "=", ";", "*", "=", ";", "[", "]", ";", "*", "=", ";", "const", "char", "*", "=", ";", "int", "=", ";", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "[", "]", "=", "(", ",", "(", "char", "*", ")", ",", ")", ";", "[", "]", "=", "(", ",", "&", ")", ";", "[", "]", "=", "(", ")", ";", "if", "(", "!", "(", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ",", ")", ";", "if", "(", "(", ",", "&", ")", "<=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", ":", "(", ")", ";", "return", ";"], "operands": ["OSSL_LIB_CTX", "libctx", "NULL", "propq", "NULL", "EVP_PKEY", "key", "NULL", "OSSL_PARAM", "params", "3", "EVP_PKEY_CTX", "genctx", "NULL", "curvename", "\"P-256\"", "use_cofactordh", "1", "genctx", "EVP_PKEY_CTX_new_from_name", "libctx", "\"EC\"", "propq", "genctx", "NULL", "fprintf", "stderr", "\"EVP_PKEY_CTX_new_from_name() failed\\n\"", "cleanup", "EVP_PKEY_keygen_init", "genctx", "0", "fprintf", "stderr", "\"EVP_PKEY_keygen_init() failed\\n\"", "cleanup", "params", "0", "OSSL_PARAM_construct_utf8_string", "OSSL_PKEY_PARAM_GROUP_NAME", "curvename", "0", "params", "1", "OSSL_PARAM_construct_int", "OSSL_PKEY_PARAM_USE_COFACTOR_ECDH", "use_cofactordh", "params", "2", "OSSL_PARAM_construct_end", "EVP_PKEY_CTX_set_params", "genctx", "params", "fprintf", "stderr", "\"EVP_PKEY_CTX_set_params() failed\\n\"", "cleanup", "fprintf", "stdout", "\"Generating EC key\\n\\n\"", "EVP_PKEY_generate", "genctx", "key", "0", "fprintf", "stderr", "\"EVP_PKEY_generate() failed\\n\"", "cleanup", "cleanup", "EVP_PKEY_CTX_free", "genctx", "key"], "callee_func": ["EVP_PKEY_CTX_new_from_name", "fprintf", "EVP_PKEY_keygen_init", "fprintf", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_int", "OSSL_PARAM_construct_end", "EVP_PKEY_CTX_set_params", "fprintf", "fprintf", "EVP_PKEY_generate", "fprintf", "EVP_PKEY_CTX_free"], "function_normalized_hash": "1f81d830729f16fd93a1347dba528f4b"}, {"line_start": 85, "line_stop": 130, "function_name": "get_key_values", "file_path": "pkey/EVP_PKEY_EC_keygen.c", "line_of_code": 36, "operators": ["int", "=", ";", "char", "[", "]", ";", "unsigned", "char", "[", "]", ";", "unsigned", "char", "[", "]", ";", "*", "=", ";", ",", "=", ";", "if", "(", "!", "(", ",", ",", ",", "sizeof", "(", ")", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", ",", "sizeof", "(", ")", ",", "&", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "&", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ")", ";", "if", "(", "<=", "||", ">", "sizeof", "(", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ",", ",", ")", ";", "(", ",", ")", ";", "(", ",", ",", ",", ")", ";", "(", ",", ")", ";", "(", ",", ",", ",", ")", ";", "=", ";", ":", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "out_curvename", "80", "out_pubkey", "80", "out_privkey", "80", "BIGNUM", "out_priv", "NULL", "size_t", "out_pubkey_len", "out_privkey_len", "0", "EVP_PKEY_get_utf8_string_param", "pkey", "OSSL_PKEY_PARAM_GROUP_NAME", "out_curvename", "out_curvename", "NULL", "fprintf", "stderr", "\"Failed to get curve name\\n\"", "cleanup", "EVP_PKEY_get_octet_string_param", "pkey", "OSSL_PKEY_PARAM_PUB_KEY", "out_pubkey", "out_pubkey", "out_pubkey_len", "fprintf", "stderr", "\"Failed to get public key\\n\"", "cleanup", "EVP_PKEY_get_bn_param", "pkey", "OSSL_PKEY_PARAM_PRIV_KEY", "out_priv", "fprintf", "stderr", "\"Failed to get private key\\n\"", "cleanup", "out_privkey_len", "BN_bn2bin", "out_priv", "out_privkey", "out_privkey_len", "0", "out_privkey_len", "out_privkey", "fprintf", "stderr", "\"BN_bn2bin failed\\n\"", "cleanup", "fprintf", "stdout", "\"Curve name: %s\\n\"", "out_curvename", "fprintf", "stdout", "\"Public key:\\n\"", "BIO_dump_indent_fp", "stdout", "out_pubkey", "out_pubkey_len", "2", "fprintf", "stdout", "\"Private Key:\\n\"", "BIO_dump_indent_fp", "stdout", "out_privkey", "out_privkey_len", "2", "ret", "1", "cleanup", "BN_clear_free", "out_priv", "ret"], "callee_func": ["EVP_PKEY_get_utf8_string_param", "fprintf", "EVP_PKEY_get_octet_string_param", "fprintf", "EVP_PKEY_get_bn_param", "fprintf", "BN_bn2bin", "fprintf", "fprintf", "fprintf", "BIO_dump_indent_fp", "fprintf", "BIO_dump_indent_fp", "BN_clear_free"], "function_normalized_hash": "c1f90620c59982407189d581ed8c3c47"}, {"line_start": 132, "line_stop": 155, "function_name": "main", "file_path": "pkey/EVP_PKEY_EC_keygen.c", "line_of_code": 13, "operators": ["int", "=", ";", "*", ";", "=", "(", ")", ";", "if", "(", "==", ")", "goto", ";", "if", "(", "!", "(", ")", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "EVP_PKEY", "pkey", "pkey", "do_ec_keygen", "pkey", "NULL", "cleanup", "get_key_values", "pkey", "cleanup", "ret", "EXIT_SUCCESS", "cleanup", "ret", "EXIT_SUCCESS", "ERR_print_errors_fp", "stderr", "EVP_PKEY_free", "pkey", "ret"], "callee_func": ["do_ec_keygen", "get_key_values", "ERR_print_errors_fp", "EVP_PKEY_free"], "function_normalized_hash": "e92c0e013c044caf215441c2a24560b3"}]}, {"file_hash": "be30d1cc685065725e6bd1e48334c416", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/cipher/aesgcm.c", "file_name": "aesgcm.c", "function_list": [{"line_start": 70, "line_stop": 145, "function_name": "aes_gcm_encrypt", "file_path": "cipher/aesgcm.c", "line_of_code": 42, "operators": ["int", "=", ";", "*", ";", "*", "=", ";", "int", ",", ";", "=", "sizeof", "(", ")", ";", "unsigned", "char", "[", "]", ";", "unsigned", "char", "[", "]", ";", "[", "]", "=", "{", ",", "}", ";", "(", ")", ";", "(", ")", ";", "(", ",", ",", "sizeof", "(", ")", ")", ";", "if", "(", "(", "=", "(", ")", ")", "==", ")", "goto", ";", "if", "(", "(", "=", "(", ",", ",", ")", ")", "==", ")", "goto", ";", "[", "]", "=", "(", ",", "&", ")", ";", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", "&", ",", ",", "sizeof", "(", ")", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", "&", ",", ",", "sizeof", "(", ")", ")", ")", "goto", ";", "(", ")", ";", "(", ",", ",", ")", ";", "if", "(", "!", "(", ",", ",", "&", ")", ")", "goto", ";", "[", "]", "=", "(", ",", ",", ")", ";", "if", "(", "!", "(", ",", ")", ")", "goto", ";", "(", ")", ";", "(", ",", ",", ")", ";", "=", ";", ":", "if", "(", "!", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "EVP_CIPHER_CTX", "ctx", "EVP_CIPHER", "cipher", "NULL", "outlen", "tmplen", "size_t", "gcm_ivlen", "gcm_iv", "outbuf", "1024", "outtag", "16", "OSSL_PARAM", "params", "2", "OSSL_PARAM_END", "OSSL_PARAM_END", "printf", "\"AES GCM Encrypt:\\n\"", "printf", "\"Plaintext:\\n\"", "BIO_dump_fp", "stdout", "gcm_pt", "gcm_pt", "ctx", "EVP_CIPHER_CTX_new", "NULL", "err", "cipher", "EVP_CIPHER_fetch", "libctx", "\"AES-256-GCM\"", "propq", "NULL", "err", "params", "0", "OSSL_PARAM_construct_size_t", "OSSL_CIPHER_PARAM_AEAD_IVLEN", "gcm_ivlen", "EVP_EncryptInit_ex2", "ctx", "cipher", "gcm_key", "gcm_iv", "params", "err", "EVP_EncryptUpdate", "ctx", "NULL", "outlen", "gcm_aad", "gcm_aad", "err", "EVP_EncryptUpdate", "ctx", "outbuf", "outlen", "gcm_pt", "gcm_pt", "err", "printf", "\"Ciphertext:\\n\"", "BIO_dump_fp", "stdout", "outbuf", "outlen", "EVP_EncryptFinal_ex", "ctx", "outbuf", "tmplen", "err", "params", "0", "OSSL_PARAM_construct_octet_string", "OSSL_CIPHER_PARAM_AEAD_TAG", "outtag", "16", "EVP_CIPHER_CTX_get_params", "ctx", "params", "err", "printf", "\"Tag:\\n\"", "BIO_dump_fp", "stdout", "outtag", "16", "ret", "1", "err", "ret", "ERR_print_errors_fp", "stderr", "EVP_CIPHER_free", "cipher", "EVP_CIPHER_CTX_free", "ctx", "ret"], "callee_func": ["printf", "printf", "BIO_dump_fp", "EVP_CIPHER_CTX_new", "EVP_CIPHER_fetch", "OSSL_PARAM_construct_size_t", "EVP_EncryptInit_ex2", "EVP_EncryptUpdate", "EVP_EncryptUpdate", "printf", "BIO_dump_fp", "EVP_EncryptFinal_ex", "OSSL_PARAM_construct_octet_string", "EVP_CIPHER_CTX_get_params", "printf", "BIO_dump_fp", "ERR_print_errors_fp", "EVP_CIPHER_free", "EVP_CIPHER_CTX_free"], "function_normalized_hash": "c40badba5b638024045616015c2cdfc7"}, {"line_start": 147, "line_stop": 217, "function_name": "aes_gcm_decrypt", "file_path": "cipher/aesgcm.c", "line_of_code": 39, "operators": ["int", "=", ";", "*", ";", "*", "=", ";", "int", ",", ";", "=", "sizeof", "(", ")", ";", "unsigned", "char", "[", "]", ";", "[", "]", "=", "{", ",", "}", ";", "(", ")", ";", "(", ")", ";", "(", ",", ",", "sizeof", "(", ")", ")", ";", "if", "(", "(", "=", "(", ")", ")", "==", ")", "goto", ";", "if", "(", "(", "=", "(", ",", ",", ")", ")", "==", ")", "goto", ";", "[", "]", "=", "(", ",", "&", ")", ";", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", "&", ",", ",", "sizeof", "(", ")", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", "&", ",", ",", "sizeof", "(", ")", ")", ")", "goto", ";", "(", ")", ";", "(", ",", ",", ")", ";", "[", "]", "=", "(", ",", "(", "void", "*", ")", ",", "sizeof", "(", ")", ")", ";", "if", "(", "!", "(", ",", ")", ")", "goto", ";", "=", "(", ",", ",", "&", ")", ";", "(", ",", ">", "?", ":", ")", ";", "=", ";", ":", "if", "(", "!", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "EVP_CIPHER_CTX", "ctx", "EVP_CIPHER", "cipher", "NULL", "outlen", "rv", "size_t", "gcm_ivlen", "gcm_iv", "outbuf", "1024", "OSSL_PARAM", "params", "2", "OSSL_PARAM_END", "OSSL_PARAM_END", "printf", "\"AES GCM Decrypt:\\n\"", "printf", "\"Ciphertext:\\n\"", "BIO_dump_fp", "stdout", "gcm_ct", "gcm_ct", "ctx", "EVP_CIPHER_CTX_new", "NULL", "err", "cipher", "EVP_CIPHER_fetch", "libctx", "\"AES-256-GCM\"", "propq", "NULL", "err", "params", "0", "OSSL_PARAM_construct_size_t", "OSSL_CIPHER_PARAM_AEAD_IVLEN", "gcm_ivlen", "EVP_DecryptInit_ex2", "ctx", "cipher", "gcm_key", "gcm_iv", "params", "err", "EVP_DecryptUpdate", "ctx", "NULL", "outlen", "gcm_aad", "gcm_aad", "err", "EVP_DecryptUpdate", "ctx", "outbuf", "outlen", "gcm_ct", "gcm_ct", "err", "printf", "\"Plaintext:\\n\"", "BIO_dump_fp", "stdout", "outbuf", "outlen", "params", "0", "OSSL_PARAM_construct_octet_string", "OSSL_CIPHER_PARAM_AEAD_TAG", "gcm_tag", "gcm_tag", "EVP_CIPHER_CTX_set_params", "ctx", "params", "err", "rv", "EVP_DecryptFinal_ex", "ctx", "outbuf", "outlen", "printf", "\"Tag Verify %s\\n\"", "rv", "0", "\"Successful!\"", "\"Failed!\"", "ret", "1", "err", "ret", "ERR_print_errors_fp", "stderr", "EVP_CIPHER_free", "cipher", "EVP_CIPHER_CTX_free", "ctx", "ret"], "callee_func": ["printf", "printf", "BIO_dump_fp", "EVP_CIPHER_CTX_new", "EVP_CIPHER_fetch", "OSSL_PARAM_construct_size_t", "EVP_DecryptInit_ex2", "EVP_DecryptUpdate", "EVP_DecryptUpdate", "printf", "BIO_dump_fp", "OSSL_PARAM_construct_octet_string", "EVP_CIPHER_CTX_set_params", "EVP_DecryptFinal_ex", "printf", "ERR_print_errors_fp", "EVP_CIPHER_free", "EVP_CIPHER_CTX_free"], "function_normalized_hash": "22ffd3d3ba766210e7b187b6e4e7a520"}, {"line_start": 219, "line_stop": 228, "function_name": "main", "file_path": "cipher/aesgcm.c", "line_of_code": 5, "operators": ["if", "(", "!", "(", ")", ")", "return", ";", "if", "(", "!", "(", ")", ")", "return", ";", "return", ";"], "operands": ["aes_gcm_encrypt", "EXIT_FAILURE", "aes_gcm_decrypt", "EXIT_FAILURE", "EXIT_SUCCESS"], "callee_func": ["aes_gcm_encrypt", "aes_gcm_decrypt"], "function_normalized_hash": "438a09ab76b5d7cd2225324df10bd875"}]}, {"file_hash": "b9e3c08e385a50b1121fe5ffe848faa2", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/bio/saccept.c", "file_name": "saccept.c", "function_list": [{"line_start": 30, "line_stop": 33, "function_name": "interrupt", "file_path": "bio/saccept.c", "line_of_code": 1, "operators": ["=", ";"], "operands": ["done", "1"], "callee_func": [], "function_normalized_hash": "a83e27bef6fccc779358e73afcb3644d"}, {"line_start": 35, "line_stop": 46, "function_name": "sigsetup", "file_path": "bio/saccept.c", "line_of_code": 5, "operators": ["struct", ";", ".", "=", ";", ".", "=", ";", "(", "&", ".", ")", ";", "(", ",", "&", ",", ")", ";"], "operands": ["sigaction", "sa", "sa", "sa_flags", "SA_RESETHAND", "sa", "sa_handler", "interrupt", "sigemptyset", "sa", "sa_mask", "sigaction", "SIGINT", "sa", "NULL"], "callee_func": ["sigemptyset", "sigaction"], "function_normalized_hash": "dac4d10f7254239693971d72c84593e2"}, {"line_start": 48, "line_stop": 121, "function_name": "main", "file_path": "bio/saccept.c", "line_of_code": 44, "operators": ["char", "*", "=", ";", "*", "=", ";", "*", ",", "*", ";", "*", ";", "char", "[", "]", ";", "int", "=", ",", ";", "if", "(", "<=", ")", "=", ";", "else", "=", "[", "]", ";", "=", "(", "(", ")", ")", ";", "if", "(", "!", "(", ",", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ")", ")", "goto", ";", "if", "(", "!", "(", ")", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "(", "=", "(", ")", ")", "==", ")", "goto", ";", "(", ",", ")", ";", "(", ")", ";", ":", "if", "(", "(", ")", "<=", ")", "goto", ";", "while", "(", "!", ")", "{", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ")", ";", "=", "(", ")", ";", "(", ")", ";", "goto", ";", "}", "if", "(", "<", ")", "goto", ";", "(", ",", ",", ",", ")", ";", "(", ")", ";", "}", "=", ";", ":", "if", "(", "!=", ")", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["port", "NULL", "BIO", "in", "NULL", "BIO", "ssl_bio", "tmp", "SSL_CTX", "ctx", "buf", "512", "ret", "EXIT_FAILURE", "i", "argc", "1", "port", "\"*:4433\"", "port", "argv", "1", "ctx", "SSL_CTX_new", "TLS_server_method", "SSL_CTX_use_certificate_chain_file", "ctx", "CERT_FILE", "err", "SSL_CTX_use_PrivateKey_file", "ctx", "CERT_FILE", "SSL_FILETYPE_PEM", "err", "SSL_CTX_check_private_key", "ctx", "err", "ssl_bio", "BIO_new_ssl", "ctx", "0", "in", "BIO_new_accept", "port", "NULL", "err", "BIO_set_accept_bios", "in", "ssl_bio", "sigsetup", "again", "BIO_do_accept", "in", "0", "err", "done", "i", "BIO_read", "in", "buf", "512", "i", "0", "printf", "\"Done\\n\"", "tmp", "BIO_pop", "in", "BIO_free_all", "tmp", "again", "i", "0", "err", "fwrite", "buf", "1", "i", "stdout", "fflush", "stdout", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "ERR_print_errors_fp", "stderr", "BIO_free", "in", "ret"], "callee_func": ["SSL_CTX_new", "TLS_server_method", "SSL_CTX_use_certificate_chain_file", "SSL_CTX_use_PrivateKey_file", "SSL_CTX_check_private_key", "BIO_new_ssl", "BIO_new_accept", "BIO_set_accept_bios", "sigsetup", "BIO_do_accept", "BIO_read", "printf", "BIO_pop", "BIO_free_all", "fwrite", "fflush", "ERR_print_errors_fp", "BIO_free"], "function_normalized_hash": "400fb4fbeb7cd01068c772c6b2d55ad8"}]}, {"file_hash": "0d79f230f7b592e805b696c3d9949e36", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/mac/siphash.c", "file_name": "siphash.c", "function_list": [{"line_start": 45, "line_stop": 129, "function_name": "main", "file_path": "mac/siphash.c", "line_of_code": 58, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "unsigned", "char", "[", "]", ";", "[", "]", ",", "*", "=", ";", "*", "=", ";", "unsigned", "int", "=", ",", "=", ",", "=", ";", "=", ";", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "*", "++", "=", "(", ",", "&", ")", ";", "*", "++", "=", "(", ",", "&", ")", ";", "*", "++", "=", "(", ",", "&", ")", ";", "*", "=", "(", ")", ";", "if", "(", "!", "(", ",", ",", "sizeof", "(", ")", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "sizeof", "(", ")", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "&", ",", "sizeof", "(", ")", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ")", ";", "(", ",", ",", ",", ")", ";", "(", ")", ";", "if", "(", "!=", "sizeof", "(", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "(", ")", ";", "if", "(", "!=", ")", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "EVP_MAC", "mac", "NULL", "EVP_MAC_CTX", "mctx", "NULL", "out", "8", "OSSL_PARAM", "params", "4", "p", "params", "OSSL_LIB_CTX", "library_context", "NULL", "digest_len", "8", "c_rounds", "2", "d_rounds", "4", "size_t", "out_len", "0", "library_context", "OSSL_LIB_CTX_new", "library_context", "NULL", "fprintf", "stderr", "\"OSSL_LIB_CTX_new() returned NULL\\n\"", "end", "mac", "EVP_MAC_fetch", "library_context", "\"SIPHASH\"", "propq", "mac", "NULL", "fprintf", "stderr", "\"EVP_MAC_fetch() returned NULL\\n\"", "end", "mctx", "EVP_MAC_CTX_new", "mac", "mctx", "NULL", "fprintf", "stderr", "\"EVP_MAC_CTX_new() returned NULL\\n\"", "end", "p", "OSSL_PARAM_construct_uint", "OSSL_MAC_PARAM_SIZE", "digest_len", "p", "OSSL_PARAM_construct_uint", "OSSL_MAC_PARAM_C_ROUNDS", "c_rounds", "p", "OSSL_PARAM_construct_uint", "OSSL_MAC_PARAM_D_ROUNDS", "d_rounds", "p", "OSSL_PARAM_construct_end", "EVP_MAC_init", "mctx", "key", "key", "params", "fprintf", "stderr", "\"EVP_MAC_init() failed\\n\"", "end", "EVP_MAC_update", "mctx", "data", "data", "fprintf", "stderr", "\"EVP_MAC_update() failed\\n\"", "end", "EVP_MAC_final", "mctx", "out", "out_len", "out", "fprintf", "stderr", "\"EVP_MAC_final() failed\\n\"", "end", "printf", "\"Generated MAC:\\n\"", "BIO_dump_indent_fp", "stdout", "out", "out_len", "2", "putchar", "'\\n'", "out_len", "expected_output", "fprintf", "stderr", "\"Generated MAC has an unexpected length\\n\"", "end", "CRYPTO_memcmp", "expected_output", "out", "expected_output", "0", "fprintf", "stderr", "\"Generated MAC does not match expected value\\n\"", "end", "ret", "EXIT_SUCCESS", "end", "EVP_MAC_CTX_free", "mctx", "EVP_MAC_free", "mac", "OSSL_LIB_CTX_free", "library_context", "ret", "EXIT_SUCCESS", "ERR_print_errors_fp", "stderr", "ret"], "callee_func": ["OSSL_LIB_CTX_new", "fprintf", "EVP_MAC_fetch", "fprintf", "EVP_MAC_CTX_new", "fprintf", "OSSL_PARAM_construct_uint", "OSSL_PARAM_construct_uint", "OSSL_PARAM_construct_uint", "OSSL_PARAM_construct_end", "EVP_MAC_init", "fprintf", "EVP_MAC_update", "fprintf", "EVP_MAC_final", "fprintf", "printf", "BIO_dump_indent_fp", "putchar", "fprintf", "CRYPTO_memcmp", "fprintf", "EVP_MAC_CTX_free", "EVP_MAC_free", "OSSL_LIB_CTX_free", "ERR_print_errors_fp"], "function_normalized_hash": "6058701f8aa50cf53ea90bb3197c9631"}]}, {"file_hash": "bb9ed43e56494940e46b12254c99c6e5", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/smime/smsign2.c", "file_name": "smsign2.c", "function_list": [{"line_start": 15, "line_stop": 96, "function_name": "main", "file_path": "smime/smsign2.c", "line_of_code": 52, "operators": ["*", "=", ",", "*", "=", ",", "*", "=", ";", "*", "=", ",", "*", "=", ";", "*", "=", ",", "*", "=", ";", "*", "=", ";", "int", "=", ";", "(", ")", ";", "(", ")", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ")", ";", "(", ")", ";", "=", "(", ",", ",", ",", ")", ";", "(", ")", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ")", ";", "(", ")", ";", "=", "(", ",", ",", ",", ")", ";", "if", "(", "!", "||", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ",", "|", ")", ";", "if", "(", "!", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ")", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "in", "NULL", "out", "NULL", "tbio", "NULL", "X509", "scert", "NULL", "scert2", "NULL", "EVP_PKEY", "skey", "NULL", "skey2", "NULL", "PKCS7", "p7", "NULL", "ret", "EXIT_FAILURE", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "tbio", "BIO_new_file", "\"signer.pem\"", "\"r\"", "tbio", "err", "scert", "PEM_read_bio_X509", "tbio", "NULL", "0", "NULL", "BIO_reset", "tbio", "skey", "PEM_read_bio_PrivateKey", "tbio", "NULL", "0", "NULL", "BIO_free", "tbio", "tbio", "BIO_new_file", "\"signer2.pem\"", "\"r\"", "tbio", "err", "scert2", "PEM_read_bio_X509", "tbio", "NULL", "0", "NULL", "BIO_reset", "tbio", "skey2", "PEM_read_bio_PrivateKey", "tbio", "NULL", "0", "NULL", "scert2", "skey2", "err", "in", "BIO_new_file", "\"sign.txt\"", "\"r\"", "in", "err", "p7", "PKCS7_sign", "NULL", "NULL", "NULL", "in", "PKCS7_STREAM", "PKCS7_PARTIAL", "p7", "err", "PKCS7_sign_add_signer", "p7", "scert", "skey", "NULL", "0", "err", "PKCS7_sign_add_signer", "p7", "scert2", "skey2", "NULL", "0", "err", "out", "BIO_new_file", "\"smout.txt\"", "\"w\"", "out", "err", "SMIME_write_PKCS7", "out", "p7", "in", "PKCS7_STREAM", "err", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "fprintf", "stderr", "\"Error Signing Data\\n\"", "ERR_print_errors_fp", "stderr", "PKCS7_free", "p7", "X509_free", "scert", "EVP_PKEY_free", "skey", "X509_free", "scert2", "EVP_PKEY_free", "skey2", "BIO_free", "in", "BIO_free", "out", "BIO_free", "tbio", "ret"], "callee_func": ["OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "BIO_new_file", "PEM_read_bio_X509", "BIO_reset", "PEM_read_bio_PrivateKey", "BIO_free", "BIO_new_file", "PEM_read_bio_X509", "BIO_reset", "PEM_read_bio_PrivateKey", "BIO_new_file", "PKCS7_sign", "PKCS7_sign_add_signer", "PKCS7_sign_add_signer", "BIO_new_file", "SMIME_write_PKCS7", "fprintf", "ERR_print_errors_fp", "PKCS7_free", "X509_free", "EVP_PKEY_free", "X509_free", "EVP_PKEY_free", "BIO_free", "BIO_free", "BIO_free"], "function_normalized_hash": "2bb073671b12f44a21f4b03a0df12986"}]}, {"file_hash": "a477c19ba8c99840a90e342f793ffadc", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/encode/ec_encode.c", "file_name": "ec_encode.c", "function_list": [{"line_start": 29, "line_stop": 93, "function_name": "load_key", "file_path": "encode/ec_encode.c", "line_of_code": 31, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "int", "=", ";", "=", "(", "&", ",", ",", ",", ",", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!=", ")", "{", "if", "(", "(", ",", "(", "const", "unsigned", "char", "*", ")", ",", "(", ")", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "}", "if", "(", "(", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "if", "(", "==", ")", "{", "(", ")", ";", "=", ";", "}", "return", ";"], "operands": ["ret", "0", "EVP_PKEY", "pkey", "NULL", "OSSL_DECODER_CTX", "dctx", "NULL", "selection", "0", "dctx", "OSSL_DECODER_CTX_new_for_pkey", "pkey", "\"PEM\"", "NULL", "\"EC\"", "selection", "libctx", "propq", "dctx", "NULL", "fprintf", "stderr", "\"OSSL_DECODER_CTX_new_for_pkey() failed\\n\"", "cleanup", "passphrase", "NULL", "OSSL_DECODER_CTX_set_passphrase", "dctx", "passphrase", "strlen", "passphrase", "0", "fprintf", "stderr", "\"OSSL_DECODER_CTX_set_passphrase() failed\\n\"", "cleanup", "OSSL_DECODER_from_fp", "dctx", "f", "0", "fprintf", "stderr", "\"OSSL_DECODER_from_fp() failed\\n\"", "cleanup", "ret", "1", "cleanup", "OSSL_DECODER_CTX_free", "dctx", "ret", "0", "EVP_PKEY_free", "pkey", "pkey", "NULL", "pkey"], "callee_func": ["OSSL_DECODER_CTX_new_for_pkey", "fprintf", "OSSL_DECODER_CTX_set_passphrase", "strlen", "fprintf", "OSSL_DECODER_from_fp", "fprintf", "OSSL_DECODER_CTX_free", "EVP_PKEY_free"], "function_normalized_hash": "287f77c075ccd014efe92d541921a4eb"}, {"line_start": 101, "line_stop": 172, "function_name": "store_key", "file_path": "encode/ec_encode.c", "line_of_code": 31, "operators": ["int", "=", ";", "int", ";", "*", "=", ";", "=", "(", "!=", ")", "?", ":", ";", "=", "(", ",", ",", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!=", ")", "{", "if", "(", "(", ",", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", "(", "const", "unsigned", "char", "*", ")", ",", "(", ")", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "}", "if", "(", "(", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "selection", "OSSL_ENCODER_CTX", "ectx", "NULL", "selection", "passphrase", "NULL", "EVP_PKEY_KEYPAIR", "EVP_PKEY_PUBLIC_KEY", "ectx", "OSSL_ENCODER_CTX_new_for_pkey", "pkey", "selection", "\"PEM\"", "NULL", "propq", "ectx", "NULL", "fprintf", "stderr", "\"OSSL_ENCODER_CTX_new_for_pkey() failed\\n\"", "cleanup", "passphrase", "NULL", "OSSL_ENCODER_CTX_set_cipher", "ectx", "\"AES-256-CBC\"", "propq", "0", "fprintf", "stderr", "\"OSSL_ENCODER_CTX_set_cipher() failed\\n\"", "cleanup", "OSSL_ENCODER_CTX_set_passphrase", "ectx", "passphrase", "strlen", "passphrase", "0", "fprintf", "stderr", "\"OSSL_ENCODER_CTX_set_passphrase() failed\\n\"", "cleanup", "OSSL_ENCODER_to_fp", "ectx", "f", "0", "fprintf", "stderr", "\"OSSL_ENCODER_to_fp() failed\\n\"", "cleanup", "ret", "1", "cleanup", "OSSL_ENCODER_CTX_free", "ectx", "ret"], "callee_func": ["OSSL_ENCODER_CTX_new_for_pkey", "fprintf", "OSSL_ENCODER_CTX_set_cipher", "fprintf", "OSSL_ENCODER_CTX_set_passphrase", "strlen", "fprintf", "OSSL_ENCODER_to_fp", "fprintf", "OSSL_ENCODER_CTX_free"], "function_normalized_hash": "6552561e6013c8658031368a41935410"}, {"line_start": 174, "line_stop": 205, "function_name": "main", "file_path": "encode/ec_encode.c", "line_of_code": 22, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "const", "char", "*", "=", ",", "*", "=", ";", "if", "(", ">", "&&", "[", "]", "[", "]", ")", "=", "[", "]", ";", "if", "(", ">", "&&", "[", "]", "[", "]", ")", "=", "[", "]", ";", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", ")", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "OSSL_LIB_CTX", "libctx", "NULL", "EVP_PKEY", "pkey", "NULL", "passphrase_in", "NULL", "passphrase_out", "NULL", "argc", "1", "argv", "1", "0", "passphrase_in", "argv", "1", "argc", "2", "argv", "2", "0", "passphrase_out", "argv", "2", "pkey", "load_key", "libctx", "stdin", "passphrase_in", "pkey", "NULL", "fprintf", "stderr", "\"Failed to decode key\\n\"", "cleanup", "store_key", "pkey", "stdout", "passphrase_out", "0", "fprintf", "stderr", "\"Failed to encode key\\n\"", "cleanup", "ret", "EXIT_SUCCESS", "cleanup", "EVP_PKEY_free", "pkey", "OSSL_LIB_CTX_free", "libctx", "ret"], "callee_func": ["load_key", "fprintf", "store_key", "fprintf", "EVP_PKEY_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "700947ea81d151df2ab298797cf1ce4a"}]}, {"file_hash": "1fa89bcbb058d5bea89be8f965d70d07", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/mac/hmac-sha512.c", "file_name": "hmac-sha512.c", "function_list": [{"line_start": 76, "line_stop": 166, "function_name": "main", "file_path": "mac/hmac-sha512.c", "line_of_code": 69, "operators": ["int", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "*", "=", ";", "unsigned", "char", "*", "=", ";", "=", ";", "[", "]", ",", "*", "=", ";", "char", "[", "]", "=", ";", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ",", ",", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "*", "++", "=", "(", ",", ",", "sizeof", "(", ")", ")", ";", "*", "=", "(", ")", ";", "if", "(", "!", "(", ",", ",", "sizeof", "(", ")", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "sizeof", "(", ")", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "&", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", "(", ")", ";", "if", "(", "==", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "!", "(", ",", ",", "&", ",", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "(", ")", ";", "(", ",", ",", ",", ")", ";", "(", ")", ";", "if", "(", "!=", "sizeof", "(", ")", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "if", "(", "(", ",", ",", "sizeof", "(", ")", ")", "!=", ")", "{", "(", ",", ")", ";", "goto", ";", "}", "=", ";", ":", "if", "(", "!=", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "EXIT_FAILURE", "OSSL_LIB_CTX", "library_context", "NULL", "EVP_MAC", "mac", "NULL", "EVP_MAC_CTX", "mctx", "NULL", "EVP_MD_CTX", "digest_context", "NULL", "out", "NULL", "size_t", "out_len", "0", "OSSL_PARAM", "params", "4", "p", "params", "digest_name", "\"SHA3-512\"", "library_context", "OSSL_LIB_CTX_new", "library_context", "NULL", "fprintf", "stderr", "\"OSSL_LIB_CTX_new() returned NULL\\n\"", "end", "mac", "EVP_MAC_fetch", "library_context", "\"HMAC\"", "propq", "mac", "NULL", "fprintf", "stderr", "\"EVP_MAC_fetch() returned NULL\\n\"", "end", "mctx", "EVP_MAC_CTX_new", "mac", "mctx", "NULL", "fprintf", "stderr", "\"EVP_MAC_CTX_new() returned NULL\\n\"", "end", "p", "OSSL_PARAM_construct_utf8_string", "OSSL_MAC_PARAM_DIGEST", "digest_name", "digest_name", "p", "OSSL_PARAM_construct_end", "EVP_MAC_init", "mctx", "key", "key", "params", "fprintf", "stderr", "\"EVP_MAC_init() failed\\n\"", "end", "EVP_MAC_update", "mctx", "data", "data", "fprintf", "stderr", "\"EVP_MAC_update() failed\\n\"", "end", "EVP_MAC_final", "mctx", "NULL", "out_len", "0", "fprintf", "stderr", "\"EVP_MAC_final() failed\\n\"", "end", "out", "OPENSSL_malloc", "out_len", "out", "NULL", "fprintf", "stderr", "\"malloc failed\\n\"", "end", "EVP_MAC_final", "mctx", "out", "out_len", "out_len", "fprintf", "stderr", "\"EVP_MAC_final() failed\\n\"", "end", "printf", "\"Generated MAC:\\n\"", "BIO_dump_indent_fp", "stdout", "out", "out_len", "2", "putchar", "'\\n'", "out_len", "expected_output", "fprintf", "stderr", "\"Generated MAC has an unexpected length\\n\"", "end", "CRYPTO_memcmp", "expected_output", "out", "expected_output", "0", "fprintf", "stderr", "\"Generated MAC does not match expected value\\n\"", "end", "ret", "EXIT_SUCCESS", "end", "ret", "EXIT_SUCCESS", "ERR_print_errors_fp", "stderr", "OPENSSL_free", "out", "EVP_MD_CTX_free", "digest_context", "EVP_MAC_CTX_free", "mctx", "EVP_MAC_free", "mac", "OSSL_LIB_CTX_free", "library_context", "ret"], "callee_func": ["OSSL_LIB_CTX_new", "fprintf", "EVP_MAC_fetch", "fprintf", "EVP_MAC_CTX_new", "fprintf", "OSSL_PARAM_construct_utf8_string", "OSSL_PARAM_construct_end", "EVP_MAC_init", "fprintf", "EVP_MAC_update", "fprintf", "EVP_MAC_final", "fprintf", "OPENSSL_malloc", "fprintf", "EVP_MAC_final", "fprintf", "printf", "BIO_dump_indent_fp", "putchar", "fprintf", "CRYPTO_memcmp", "fprintf", "ERR_print_errors_fp", "OPENSSL_free", "EVP_MD_CTX_free", "EVP_MAC_CTX_free", "EVP_MAC_free", "OSSL_LIB_CTX_free"], "function_normalized_hash": "eeaf65e9fc8680263849c052bbfc1e0d"}]}, {"file_hash": "c383f4f0cffc6744611e53454442df5c", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/cipher/aesccm.c", "file_name": "aesccm.c", "function_list": [{"line_start": 71, "line_stop": 156, "function_name": "aes_ccm_encrypt", "file_path": "cipher/aesccm.c", "line_of_code": 50, "operators": ["int", "=", ";", "*", ";", "*", "=", ";", "int", ",", ";", "=", "sizeof", "(", ")", ";", "=", "sizeof", "(", ")", ";", "unsigned", "char", "[", "]", ";", "unsigned", "char", "[", "]", ";", "[", "]", "=", "{", ",", ",", "}", ";", "(", ")", ";", "(", ")", ";", "(", ",", ",", "sizeof", "(", ")", ")", ";", "if", "(", "(", "=", "(", ")", ")", "==", ")", "goto", ";", "if", "(", "(", "=", "(", ",", ",", ")", ")", "==", ")", "goto", ";", "[", "]", "=", "(", ",", "&", ")", ";", "[", "]", "=", "(", ",", ",", ")", ";", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", "&", ",", ",", "sizeof", "(", ")", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", "&", ",", ",", "sizeof", "(", ")", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", "&", ",", ",", "sizeof", "(", ")", ")", ")", "goto", ";", "(", ")", ";", "(", ",", ",", ")", ";", "if", "(", "!", "(", ",", ",", "&", ")", ")", "goto", ";", "[", "]", "=", "(", ",", ",", ")", ";", "[", "]", "=", "(", ")", ";", "if", "(", "!", "(", ",", ")", ")", "goto", ";", "(", ")", ";", "(", ",", ",", ")", ";", "=", ";", ":", "if", "(", "!", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "EVP_CIPHER_CTX", "ctx", "EVP_CIPHER", "cipher", "NULL", "outlen", "tmplen", "size_t", "ccm_nonce_len", "ccm_nonce", "size_t", "ccm_tag_len", "ccm_tag", "outbuf", "1024", "outtag", "16", "OSSL_PARAM", "params", "3", "OSSL_PARAM_END", "OSSL_PARAM_END", "OSSL_PARAM_END", "printf", "\"AES CCM Encrypt:\\n\"", "printf", "\"Plaintext:\\n\"", "BIO_dump_fp", "stdout", "ccm_pt", "ccm_pt", "ctx", "EVP_CIPHER_CTX_new", "NULL", "err", "cipher", "EVP_CIPHER_fetch", "libctx", "\"AES-192-CCM\"", "propq", "NULL", "err", "params", "0", "OSSL_PARAM_construct_size_t", "OSSL_CIPHER_PARAM_AEAD_IVLEN", "ccm_nonce_len", "params", "1", "OSSL_PARAM_construct_octet_string", "OSSL_CIPHER_PARAM_AEAD_TAG", "NULL", "ccm_tag_len", "EVP_EncryptInit_ex2", "ctx", "cipher", "NULL", "NULL", "params", "err", "EVP_EncryptInit_ex", "ctx", "NULL", "NULL", "ccm_key", "ccm_nonce", "err", "EVP_EncryptUpdate", "ctx", "NULL", "outlen", "NULL", "ccm_pt", "err", "EVP_EncryptUpdate", "ctx", "NULL", "outlen", "ccm_adata", "ccm_adata", "err", "EVP_EncryptUpdate", "ctx", "outbuf", "outlen", "ccm_pt", "ccm_pt", "err", "printf", "\"Ciphertext:\\n\"", "BIO_dump_fp", "stdout", "outbuf", "outlen", "EVP_EncryptFinal_ex", "ctx", "NULL", "tmplen", "err", "params", "0", "OSSL_PARAM_construct_octet_string", "OSSL_CIPHER_PARAM_AEAD_TAG", "outtag", "ccm_tag_len", "params", "1", "OSSL_PARAM_construct_end", "EVP_CIPHER_CTX_get_params", "ctx", "params", "err", "printf", "\"Tag:\\n\"", "BIO_dump_fp", "stdout", "outtag", "ccm_tag_len", "ret", "1", "err", "ret", "ERR_print_errors_fp", "stderr", "EVP_CIPHER_free", "cipher", "EVP_CIPHER_CTX_free", "ctx", "ret"], "callee_func": ["printf", "printf", "BIO_dump_fp", "EVP_CIPHER_CTX_new", "EVP_CIPHER_fetch", "OSSL_PARAM_construct_size_t", "OSSL_PARAM_construct_octet_string", "EVP_EncryptInit_ex2", "EVP_EncryptInit_ex", "EVP_EncryptUpdate", "EVP_EncryptUpdate", "EVP_EncryptUpdate", "printf", "BIO_dump_fp", "EVP_EncryptFinal_ex", "OSSL_PARAM_construct_octet_string", "OSSL_PARAM_construct_end", "EVP_CIPHER_CTX_get_params", "printf", "BIO_dump_fp", "ERR_print_errors_fp", "EVP_CIPHER_free", "EVP_CIPHER_CTX_free"], "function_normalized_hash": "0a371a71fb6c8bfcbc9c3364c1e8ce57"}, {"line_start": 158, "line_stop": 227, "function_name": "aes_ccm_decrypt", "file_path": "cipher/aesccm.c", "line_of_code": 44, "operators": ["int", "=", ";", "*", ";", "*", "=", ";", "int", ",", ";", "unsigned", "char", "[", "]", ";", "=", "sizeof", "(", ")", ";", "[", "]", "=", "{", ",", ",", "}", ";", "(", ")", ";", "(", ")", ";", "(", ",", ",", "sizeof", "(", ")", ")", ";", "if", "(", "(", "=", "(", ")", ")", "==", ")", "goto", ";", "if", "(", "(", "=", "(", ",", ",", ")", ")", "==", ")", "goto", ";", "[", "]", "=", "(", ",", "&", ")", ";", "[", "]", "=", "(", ",", "(", "unsigned", "char", "*", ")", ",", "sizeof", "(", ")", ")", ";", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", "&", ",", ",", "sizeof", "(", ")", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", "&", ",", ",", "sizeof", "(", ")", ")", ")", "goto", ";", "=", "(", ",", ",", "&", ",", ",", "sizeof", "(", ")", ")", ";", "if", "(", ">", ")", "{", "(", ")", ";", "(", ",", ",", ")", ";", "}", "else", "{", "(", ")", ";", "goto", ";", "}", "=", ";", ":", "if", "(", "!", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "EVP_CIPHER_CTX", "ctx", "EVP_CIPHER", "cipher", "NULL", "outlen", "rv", "outbuf", "1024", "size_t", "ccm_nonce_len", "ccm_nonce", "OSSL_PARAM", "params", "3", "OSSL_PARAM_END", "OSSL_PARAM_END", "OSSL_PARAM_END", "printf", "\"AES CCM Decrypt:\\n\"", "printf", "\"Ciphertext:\\n\"", "BIO_dump_fp", "stdout", "ccm_ct", "ccm_ct", "ctx", "EVP_CIPHER_CTX_new", "NULL", "err", "cipher", "EVP_CIPHER_fetch", "libctx", "\"AES-192-CCM\"", "propq", "NULL", "err", "params", "0", "OSSL_PARAM_construct_size_t", "OSSL_CIPHER_PARAM_AEAD_IVLEN", "ccm_nonce_len", "params", "1", "OSSL_PARAM_construct_octet_string", "OSSL_CIPHER_PARAM_AEAD_TAG", "ccm_tag", "ccm_tag", "EVP_DecryptInit_ex2", "ctx", "cipher", "NULL", "NULL", "params", "err", "EVP_DecryptInit_ex", "ctx", "NULL", "NULL", "ccm_key", "ccm_nonce", "err", "EVP_DecryptUpdate", "ctx", "NULL", "outlen", "NULL", "ccm_ct", "err", "EVP_DecryptUpdate", "ctx", "NULL", "outlen", "ccm_adata", "ccm_adata", "err", "rv", "EVP_DecryptUpdate", "ctx", "outbuf", "outlen", "ccm_ct", "ccm_ct", "rv", "0", "printf", "\"Tag verify successful!\\nPlaintext:\\n\"", "BIO_dump_fp", "stdout", "outbuf", "outlen", "printf", "\"Tag verify failed!\\nPlaintext not available\\n\"", "err", "ret", "1", "err", "ret", "ERR_print_errors_fp", "stderr", "EVP_CIPHER_free", "cipher", "EVP_CIPHER_CTX_free", "ctx", "ret"], "callee_func": ["printf", "printf", "BIO_dump_fp", "EVP_CIPHER_CTX_new", "EVP_CIPHER_fetch", "OSSL_PARAM_construct_size_t", "OSSL_PARAM_construct_octet_string", "EVP_DecryptInit_ex2", "EVP_DecryptInit_ex", "EVP_DecryptUpdate", "EVP_DecryptUpdate", "EVP_DecryptUpdate", "printf", "BIO_dump_fp", "printf", "ERR_print_errors_fp", "EVP_CIPHER_free", "EVP_CIPHER_CTX_free"], "function_normalized_hash": "71a317e1aeb8fd7c12ac51ffffbe9c98"}, {"line_start": 229, "line_stop": 238, "function_name": "main", "file_path": "cipher/aesccm.c", "line_of_code": 5, "operators": ["if", "(", "!", "(", ")", ")", "return", ";", "if", "(", "!", "(", ")", ")", "return", ";", "return", ";"], "operands": ["aes_ccm_encrypt", "EXIT_FAILURE", "aes_ccm_decrypt", "EXIT_FAILURE", "EXIT_SUCCESS"], "callee_func": ["aes_ccm_encrypt", "aes_ccm_decrypt"], "function_normalized_hash": "761ead456cd88524c9952a7e06544639"}]}, {"file_hash": "8b8b6bdae3f59c7a58cbfad843c138e8", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/cms/cms_sign2.c", "file_name": "cms_sign2.c", "function_list": [{"line_start": 15, "line_stop": 96, "function_name": "main", "file_path": "cms/cms_sign2.c", "line_of_code": 52, "operators": ["*", "=", ",", "*", "=", ",", "*", "=", ";", "*", "=", ",", "*", "=", ";", "*", "=", ",", "*", "=", ";", "*", "=", ";", "int", "=", ";", "(", ")", ";", "(", ")", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ")", ";", "(", ")", ";", "=", "(", ",", ",", ",", ")", ";", "(", ")", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ")", ";", "(", ")", ";", "=", "(", ",", ",", ",", ")", ";", "if", "(", "!", "||", "!", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "=", "(", ",", ",", ",", ",", "|", ")", ";", "if", "(", "!", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "goto", ";", "=", "(", ",", ")", ";", "if", "(", "!", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ")", ")", "goto", ";", "=", ";", ":", "if", "(", "!=", ")", "{", "(", ",", ")", ";", "(", ")", ";", "}", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["BIO", "in", "NULL", "out", "NULL", "tbio", "NULL", "X509", "scert", "NULL", "scert2", "NULL", "EVP_PKEY", "skey", "NULL", "skey2", "NULL", "CMS_ContentInfo", "cms", "NULL", "ret", "EXIT_FAILURE", "OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "tbio", "BIO_new_file", "\"signer.pem\"", "\"r\"", "tbio", "err", "scert", "PEM_read_bio_X509", "tbio", "NULL", "0", "NULL", "BIO_reset", "tbio", "skey", "PEM_read_bio_PrivateKey", "tbio", "NULL", "0", "NULL", "BIO_free", "tbio", "tbio", "BIO_new_file", "\"signer2.pem\"", "\"r\"", "tbio", "err", "scert2", "PEM_read_bio_X509", "tbio", "NULL", "0", "NULL", "BIO_reset", "tbio", "skey2", "PEM_read_bio_PrivateKey", "tbio", "NULL", "0", "NULL", "scert2", "skey2", "err", "in", "BIO_new_file", "\"sign.txt\"", "\"r\"", "in", "err", "cms", "CMS_sign", "NULL", "NULL", "NULL", "in", "CMS_STREAM", "CMS_PARTIAL", "cms", "err", "CMS_add1_signer", "cms", "scert", "skey", "NULL", "0", "err", "CMS_add1_signer", "cms", "scert2", "skey2", "NULL", "0", "err", "out", "BIO_new_file", "\"smout.txt\"", "\"w\"", "out", "err", "SMIME_write_CMS", "out", "cms", "in", "CMS_STREAM", "err", "ret", "EXIT_SUCCESS", "err", "ret", "EXIT_SUCCESS", "fprintf", "stderr", "\"Error Signing Data\\n\"", "ERR_print_errors_fp", "stderr", "CMS_ContentInfo_free", "cms", "X509_free", "scert", "EVP_PKEY_free", "skey", "X509_free", "scert2", "EVP_PKEY_free", "skey2", "BIO_free", "in", "BIO_free", "out", "BIO_free", "tbio", "ret"], "callee_func": ["OpenSSL_add_all_algorithms", "ERR_load_crypto_strings", "BIO_new_file", "PEM_read_bio_X509", "BIO_reset", "PEM_read_bio_PrivateKey", "BIO_free", "BIO_new_file", "PEM_read_bio_X509", "BIO_reset", "PEM_read_bio_PrivateKey", "BIO_new_file", "CMS_sign", "CMS_add1_signer", "CMS_add1_signer", "BIO_new_file", "SMIME_write_CMS", "fprintf", "ERR_print_errors_fp", "CMS_ContentInfo_free", "X509_free", "EVP_PKEY_free", "X509_free", "EVP_PKEY_free", "BIO_free", "BIO_free", "BIO_free"], "function_normalized_hash": "e64496110bde5c2986ba355f5090c074"}]}, {"file_hash": "a90c43a347d9a1d1a9475542fd5b6532", "file_path": "/home/srb/wky/lab/ntu/gitrepos/openssl/demos/cipher/ariacbc.c", "file_name": "ariacbc.c", "function_list": [{"line_start": 55, "line_stop": 111, "function_name": "aria_cbc_encrypt", "file_path": "cipher/ariacbc.c", "line_of_code": 34, "operators": ["int", "=", ";", "*", ";", "*", "=", ";", "int", ",", ";", "=", "sizeof", "(", ")", ";", "unsigned", "char", "[", "]", ";", "unsigned", "char", "[", "]", ";", "(", ")", ";", "(", ")", ";", "(", ",", ",", "sizeof", "(", ")", ")", ";", "if", "(", "(", "=", "(", ")", ")", "==", ")", "goto", ";", "if", "(", "(", "=", "(", ",", ",", ")", ")", "==", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", "&", ",", ",", "sizeof", "(", ")", ")", ")", "goto", ";", "if", "(", "!", "(", ",", "+", ",", "&", ")", ")", "goto", ";", "+=", ";", "(", ",", ")", ";", "(", ",", ",", ")", ";", "if", "(", "sizeof", "(", ")", "==", "&&", "!", "(", ",", ",", ")", ")", "(", ")", ";", "else", "(", ")", ";", "=", ";", ":", "if", "(", "!", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "EVP_CIPHER_CTX", "ctx", "EVP_CIPHER", "cipher", "NULL", "outlen", "tmplen", "size_t", "cbc_ivlen", "cbc_iv", "outbuf", "1024", "outtag", "16", "printf", "\"ARIA CBC Encrypt:\\n\"", "printf", "\"Plaintext:\\n\"", "BIO_dump_fp", "stdout", "cbc_pt", "cbc_pt", "ctx", "EVP_CIPHER_CTX_new", "NULL", "err", "cipher", "EVP_CIPHER_fetch", "libctx", "\"ARIA-256-CBC\"", "propq", "NULL", "err", "EVP_EncryptInit_ex2", "ctx", "cipher", "cbc_key", "cbc_iv", "NULL", "err", "EVP_EncryptUpdate", "ctx", "outbuf", "outlen", "cbc_pt", "cbc_pt", "err", "EVP_EncryptFinal_ex", "ctx", "outbuf", "outlen", "tmplen", "err", "outlen", "tmplen", "printf", "\"Ciphertext (outlen:%d):\\n\"", "outlen", "BIO_dump_fp", "stdout", "outbuf", "outlen", "cbc_ct", "outlen", "CRYPTO_memcmp", "outbuf", "cbc_ct", "outlen", "printf", "\"Final ciphertext matches expected ciphertext\\n\"", "printf", "\"Final ciphertext differs from expected ciphertext\\n\"", "ret", "1", "err", "ret", "ERR_print_errors_fp", "stderr", "EVP_CIPHER_free", "cipher", "EVP_CIPHER_CTX_free", "ctx", "ret"], "callee_func": ["printf", "printf", "BIO_dump_fp", "EVP_CIPHER_CTX_new", "EVP_CIPHER_fetch", "EVP_EncryptInit_ex2", "EVP_EncryptUpdate", "EVP_EncryptFinal_ex", "printf", "BIO_dump_fp", "CRYPTO_memcmp", "printf", "printf", "ERR_print_errors_fp", "EVP_CIPHER_free", "EVP_CIPHER_CTX_free"], "function_normalized_hash": "60160ef956d89fb0dcecc858f0e8a751"}, {"line_start": 113, "line_stop": 167, "function_name": "aria_cbc_decrypt", "file_path": "cipher/ariacbc.c", "line_of_code": 33, "operators": ["int", "=", ";", "*", ";", "*", "=", ";", "int", ",", ",", ";", "=", "sizeof", "(", ")", ";", "unsigned", "char", "[", "]", ";", "(", ")", ";", "(", ")", ";", "(", ",", ",", "sizeof", "(", ")", ")", ";", "if", "(", "(", "=", "(", ")", ")", "==", ")", "goto", ";", "if", "(", "(", "=", "(", ",", ",", ")", ")", "==", ")", "goto", ";", "if", "(", "!", "(", ",", ",", ",", ",", ")", ")", "goto", ";", "if", "(", "!", "(", ",", ",", "&", ",", ",", "sizeof", "(", ")", ")", ")", "goto", ";", "if", "(", "!", "(", ",", "+", ",", "&", ")", ")", "goto", ";", "+=", ";", "(", ",", ")", ";", "(", ",", ",", ")", ";", "if", "(", "sizeof", "(", ")", "==", "&&", "!", "(", ",", ",", ")", ")", "(", ")", ";", "else", "(", ")", ";", "=", ";", ":", "if", "(", "!", ")", "(", ")", ";", "(", ")", ";", "(", ")", ";", "return", ";"], "operands": ["ret", "0", "EVP_CIPHER_CTX", "ctx", "EVP_CIPHER", "cipher", "NULL", "outlen", "tmplen", "rv", "size_t", "cbc_ivlen", "cbc_iv", "outbuf", "1024", "printf", "\"ARIA CBC Decrypt:\\n\"", "printf", "\"Ciphertext:\\n\"", "BIO_dump_fp", "stdout", "cbc_ct", "cbc_ct", "ctx", "EVP_CIPHER_CTX_new", "NULL", "err", "cipher", "EVP_CIPHER_fetch", "libctx", "\"ARIA-256-CBC\"", "propq", "NULL", "err", "EVP_DecryptInit_ex2", "ctx", "cipher", "cbc_key", "cbc_iv", "NULL", "err", "EVP_DecryptUpdate", "ctx", "outbuf", "outlen", "cbc_ct", "cbc_ct", "err", "EVP_DecryptFinal_ex", "ctx", "outbuf", "outlen", "tmplen", "err", "outlen", "tmplen", "printf", "\"Plaintext (outlen:%d):\\n\"", "outlen", "BIO_dump_fp", "stdout", "outbuf", "outlen", "cbc_pt", "outlen", "CRYPTO_memcmp", "outbuf", "cbc_pt", "outlen", "printf", "\"Final plaintext matches original plaintext\\n\"", "printf", "\"Final plaintext differs from original plaintext\\n\"", "ret", "1", "err", "ret", "ERR_print_errors_fp", "stderr", "EVP_CIPHER_free", "cipher", "EVP_CIPHER_CTX_free", "ctx", "ret"], "callee_func": ["printf", "printf", "BIO_dump_fp", "EVP_CIPHER_CTX_new", "EVP_CIPHER_fetch", "EVP_DecryptInit_ex2", "EVP_DecryptUpdate", "EVP_DecryptFinal_ex", "printf", "BIO_dump_fp", "CRYPTO_memcmp", "printf", "printf", "ERR_print_errors_fp", "EVP_CIPHER_free", "EVP_CIPHER_CTX_free"], "function_normalized_hash": "071dd97bdfc48609600239e9745a9ea8"}, {"line_start": 169, "line_stop": 178, "function_name": "main", "file_path": "cipher/ariacbc.c", "line_of_code": 5, "operators": ["if", "(", "!", "(", ")", ")", "return", ";", "if", "(", "!", "(", ")", ")", "return", ";", "return", ";"], "operands": ["aria_cbc_encrypt", "EXIT_FAILURE", "aria_cbc_decrypt", "EXIT_FAILURE", "EXIT_SUCCESS"], "callee_func": ["aria_cbc_encrypt", "aria_cbc_decrypt"], "function_normalized_hash": "b38bebce04fd56268954b79d7defba0a"}]}]